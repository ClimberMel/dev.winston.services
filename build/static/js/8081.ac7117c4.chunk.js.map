{"version":3,"file":"static/js/8081.ac7117c4.chunk.js","mappings":"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","sources":["../node_modules/@mui/icons-material/esm/AddBox.js","../node_modules/@mui/icons-material/esm/ContentCopy.js","../node_modules/@mui/icons-material/esm/Delete.js","../node_modules/@mui/icons-material/esm/DragIndicator.js","../node_modules/@mui/icons-material/esm/Queue.js","../node_modules/@react-dnd/invariant/src/index.ts","../node_modules/react-dnd-html5-backend/src/utils/js_utils.ts","../node_modules/react-dnd-html5-backend/src/EnterLeaveCounter.ts","../node_modules/react-dnd-html5-backend/src/NativeDragSources/NativeDragSource.ts","../node_modules/react-dnd-html5-backend/src/NativeTypes.ts","../node_modules/react-dnd-html5-backend/src/NativeDragSources/getDataFromDataTransfer.ts","../node_modules/react-dnd-html5-backend/src/NativeDragSources/nativeTypesConfig.ts","../node_modules/react-dnd-html5-backend/src/NativeDragSources/index.ts","../node_modules/react-dnd-html5-backend/src/BrowserDetector.ts","../node_modules/react-dnd-html5-backend/src/MonotonicInterpolant.ts","../node_modules/react-dnd-html5-backend/src/OffsetUtils.ts","../node_modules/react-dnd-html5-backend/src/OptionsReader.ts","../node_modules/react-dnd-html5-backend/src/HTML5BackendImpl.ts","../node_modules/react-dnd-html5-backend/src/index.ts","../node_modules/react-dnd/src/core/DndContext.ts","../node_modules/dnd-core/src/utils/js_utils.ts","../node_modules/dnd-core/src/actions/dragDrop/types.ts","../node_modules/dnd-core/src/actions/dragDrop/local/setClientOffset.ts","../node_modules/dnd-core/src/actions/dragDrop/beginDrag.ts","../node_modules/dnd-core/src/actions/dragDrop/drop.ts","../node_modules/dnd-core/src/actions/dragDrop/endDrag.ts","../node_modules/dnd-core/src/utils/matchesType.ts","../node_modules/dnd-core/src/actions/dragDrop/hover.ts","../node_modules/dnd-core/src/actions/dragDrop/publishDragSource.ts","../node_modules/dnd-core/src/classes/DragDropManagerImpl.ts","../node_modules/dnd-core/src/actions/dragDrop/index.ts","../node_modules/dnd-core/src/utils/coords.ts","../node_modules/dnd-core/src/utils/dirtiness.ts","../node_modules/dnd-core/src/classes/DragDropMonitorImpl.ts","../node_modules/@react-dnd/asap/src/makeRequestCall.ts","../node_modules/@react-dnd/asap/src/RawTask.ts","../node_modules/@react-dnd/asap/src/asap.ts","../node_modules/@react-dnd/asap/src/AsapQueue.ts","../node_modules/@react-dnd/asap/src/TaskFactory.ts","../node_modules/dnd-core/src/actions/registry.ts","../node_modules/dnd-core/src/contracts.ts","../node_modules/dnd-core/src/interfaces.ts","../node_modules/dnd-core/src/utils/getNextUniqueId.ts","../node_modules/dnd-core/src/classes/HandlerRegistryImpl.ts","../node_modules/dnd-core/src/utils/equality.ts","../node_modules/dnd-core/src/reducers/dirtyHandlerIds.ts","../node_modules/dnd-core/src/reducers/dragOffset.ts","../node_modules/dnd-core/src/reducers/dragOperation.ts","../node_modules/dnd-core/src/reducers/refCount.ts","../node_modules/dnd-core/src/reducers/stateId.ts","../node_modules/dnd-core/src/reducers/index.ts","../node_modules/dnd-core/src/createDragDropManager.ts","../node_modules/react-dnd/src/core/DndProvider.tsx"],"sourcesContent":["import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10h-4v4h-2v-4H7v-2h4V7h2v4h4v2z\"\n}), 'AddBox');","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M16 1H4c-1.1 0-2 .9-2 2v14h2V3h12V1zm3 4H8c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h11c1.1 0 2-.9 2-2V7c0-1.1-.9-2-2-2zm0 16H8V7h11v14z\"\n}), 'ContentCopy');","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M11 18c0 1.1-.9 2-2 2s-2-.9-2-2 .9-2 2-2 2 .9 2 2zm-2-8c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0-6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm6 4c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"\n}), 'DragIndicator');","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M4 6H2v14c0 1.1.9 2 2 2h14v-2H4V6zm16-4H8c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm-1 9h-4v4h-2v-4H9V9h4V5h2v4h4v2z\"\n}), 'Queue');","/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments\n * to provide information about what broke and what you were\n * expecting.\n *\n * The invariant message will be stripped in production, but the invariant\n * will remain to ensure logic does not differ in production.\n */\n\nexport function invariant(condition: any, format: string, ...args: any[]) {\n\tif (isProduction()) {\n\t\tif (format === undefined) {\n\t\t\tthrow new Error('invariant requires an error message argument')\n\t\t}\n\t}\n\n\tif (!condition) {\n\t\tlet error\n\t\tif (format === undefined) {\n\t\t\terror = new Error(\n\t\t\t\t'Minified exception occurred; use the non-minified dev environment ' +\n\t\t\t\t\t'for the full error message and additional helpful warnings.',\n\t\t\t)\n\t\t} else {\n\t\t\tlet argIndex = 0\n\t\t\terror = new Error(\n\t\t\t\tformat.replace(/%s/g, function () {\n\t\t\t\t\treturn args[argIndex++]\n\t\t\t\t}),\n\t\t\t)\n\t\t\terror.name = 'Invariant Violation'\n\t\t}\n\n\t\t;(error as any).framesToPop = 1 // we don't care about invariant's own frame\n\t\tthrow error\n\t}\n}\n\nfunction isProduction() {\n\treturn (\n\t\ttypeof process !== 'undefined' && process.env['NODE_ENV'] === 'production'\n\t)\n}\n","// cheap lodash replacements\n\nexport function memoize<T>(fn: () => T): () => T {\n\tlet result: T | null = null\n\tconst memoized = () => {\n\t\tif (result == null) {\n\t\t\tresult = fn()\n\t\t}\n\t\treturn result\n\t}\n\treturn memoized\n}\n\n/**\n * drop-in replacement for _.without\n */\nexport function without<T>(items: T[], item: T) {\n\treturn items.filter((i) => i !== item)\n}\n\nexport function union<T extends string | number>(itemsA: T[], itemsB: T[]) {\n\tconst set = new Set<T>()\n\tconst insertItem = (item: T) => set.add(item)\n\titemsA.forEach(insertItem)\n\titemsB.forEach(insertItem)\n\n\tconst result: T[] = []\n\tset.forEach((key) => result.push(key))\n\treturn result\n}\n","import { union, without } from './utils/js_utils.js'\n\ntype NodePredicate = (node: Node | null | undefined) => boolean\n\nexport class EnterLeaveCounter {\n\tprivate entered: any[] = []\n\tprivate isNodeInDocument: NodePredicate\n\n\tpublic constructor(isNodeInDocument: NodePredicate) {\n\t\tthis.isNodeInDocument = isNodeInDocument\n\t}\n\n\tpublic enter(enteringNode: EventTarget | null): boolean {\n\t\tconst previousLength = this.entered.length\n\n\t\tconst isNodeEntered = (node: Node): boolean =>\n\t\t\tthis.isNodeInDocument(node) &&\n\t\t\t(!node.contains || node.contains(enteringNode as Node))\n\n\t\tthis.entered = union(this.entered.filter(isNodeEntered), [enteringNode])\n\n\t\treturn previousLength === 0 && this.entered.length > 0\n\t}\n\n\tpublic leave(leavingNode: EventTarget | null): boolean {\n\t\tconst previousLength = this.entered.length\n\n\t\tthis.entered = without(\n\t\t\tthis.entered.filter(this.isNodeInDocument),\n\t\t\tleavingNode,\n\t\t)\n\n\t\treturn previousLength > 0 && this.entered.length === 0\n\t}\n\n\tpublic reset(): void {\n\t\tthis.entered = []\n\t}\n}\n","import type { DragDropMonitor } from 'dnd-core'\n\nimport type { NativeItemConfig } from './nativeTypesConfig.js'\n\nexport class NativeDragSource {\n\tpublic item: any\n\tprivate config: NativeItemConfig\n\n\tpublic constructor(config: NativeItemConfig) {\n\t\tthis.config = config\n\t\tthis.item = {}\n\t\tthis.initializeExposedProperties()\n\t}\n\n\tprivate initializeExposedProperties() {\n\t\tObject.keys(this.config.exposeProperties).forEach((property) => {\n\t\t\tObject.defineProperty(this.item, property, {\n\t\t\t\tconfigurable: true, // This is needed to allow redefining it later\n\t\t\t\tenumerable: true,\n\t\t\t\tget() {\n\t\t\t\t\t// eslint-disable-next-line no-console\n\t\t\t\t\tconsole.warn(\n\t\t\t\t\t\t`Browser doesn't allow reading \"${property}\" until the drop event.`,\n\t\t\t\t\t)\n\t\t\t\t\treturn null\n\t\t\t\t},\n\t\t\t})\n\t\t})\n\t}\n\n\tpublic loadDataTransfer(dataTransfer: DataTransfer | null | undefined): void {\n\t\tif (dataTransfer) {\n\t\t\tconst newProperties: PropertyDescriptorMap = {}\n\t\t\tObject.keys(this.config.exposeProperties).forEach((property) => {\n\t\t\t\tconst propertyFn = this.config.exposeProperties[property]\n\t\t\t\tif (propertyFn != null) {\n\t\t\t\t\tnewProperties[property] = {\n\t\t\t\t\t\tvalue: propertyFn(dataTransfer, this.config.matchesTypes),\n\t\t\t\t\t\tconfigurable: true,\n\t\t\t\t\t\tenumerable: true,\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t\tObject.defineProperties(this.item, newProperties)\n\t\t}\n\t}\n\n\tpublic canDrag(): boolean {\n\t\treturn true\n\t}\n\n\tpublic beginDrag(): any {\n\t\treturn this.item\n\t}\n\n\tpublic isDragging(monitor: DragDropMonitor, handle: string): boolean {\n\t\treturn handle === monitor.getSourceId()\n\t}\n\n\tpublic endDrag(): void {\n\t\t// empty\n\t}\n}\n","export const FILE = '__NATIVE_FILE__'\nexport const URL = '__NATIVE_URL__'\nexport const TEXT = '__NATIVE_TEXT__'\nexport const HTML = '__NATIVE_HTML__'\n","export function getDataFromDataTransfer(\n\tdataTransfer: DataTransfer,\n\ttypesToTry: string[],\n\tdefaultValue: string,\n): string {\n\tconst result = typesToTry.reduce(\n\t\t(resultSoFar, typeToTry) => resultSoFar || dataTransfer.getData(typeToTry),\n\t\t'',\n\t)\n\n\treturn result != null ? result : defaultValue\n}\n","import * as NativeTypes from '../NativeTypes.js'\nimport { getDataFromDataTransfer } from './getDataFromDataTransfer.js'\n\nexport interface NativeItemConfigExposePropreties {\n\t[property: string]: (\n\t\tdataTransfer: DataTransfer,\n\t\tmatchesTypes: string[],\n\t) => any\n}\n\nexport interface NativeItemConfig {\n\texposeProperties: NativeItemConfigExposePropreties\n\tmatchesTypes: string[]\n}\n\nexport const nativeTypesConfig: {\n\t[key: string]: NativeItemConfig\n} = {\n\t[NativeTypes.FILE]: {\n\t\texposeProperties: {\n\t\t\tfiles: (dataTransfer: DataTransfer): File[] =>\n\t\t\t\tArray.prototype.slice.call(dataTransfer.files),\n\t\t\titems: (dataTransfer: DataTransfer): DataTransferItemList =>\n\t\t\t\tdataTransfer.items,\n\t\t\tdataTransfer: (dataTransfer: DataTransfer): DataTransfer => dataTransfer,\n\t\t},\n\t\tmatchesTypes: ['Files'],\n\t},\n\t[NativeTypes.HTML]: {\n\t\texposeProperties: {\n\t\t\thtml: (dataTransfer: DataTransfer, matchesTypes: string[]): string =>\n\t\t\t\tgetDataFromDataTransfer(dataTransfer, matchesTypes, ''),\n\t\t\tdataTransfer: (dataTransfer: DataTransfer): DataTransfer => dataTransfer,\n\t\t},\n\t\tmatchesTypes: ['Html', 'text/html'],\n\t},\n\t[NativeTypes.URL]: {\n\t\texposeProperties: {\n\t\t\turls: (dataTransfer: DataTransfer, matchesTypes: string[]): string[] =>\n\t\t\t\tgetDataFromDataTransfer(dataTransfer, matchesTypes, '').split('\\n'),\n\t\t\tdataTransfer: (dataTransfer: DataTransfer): DataTransfer => dataTransfer,\n\t\t},\n\t\tmatchesTypes: ['Url', 'text/uri-list'],\n\t},\n\t[NativeTypes.TEXT]: {\n\t\texposeProperties: {\n\t\t\ttext: (dataTransfer: DataTransfer, matchesTypes: string[]): string =>\n\t\t\t\tgetDataFromDataTransfer(dataTransfer, matchesTypes, ''),\n\t\t\tdataTransfer: (dataTransfer: DataTransfer): DataTransfer => dataTransfer,\n\t\t},\n\t\tmatchesTypes: ['Text', 'text/plain'],\n\t},\n}\n","import { NativeDragSource } from './NativeDragSource.js'\nimport { nativeTypesConfig } from './nativeTypesConfig.js'\n\nexport function createNativeDragSource(\n\ttype: string,\n\tdataTransfer?: DataTransfer,\n): NativeDragSource {\n\tconst config = nativeTypesConfig[type]\n\tif (!config) {\n\t\tthrow new Error(`native type ${type} has no configuration`)\n\t}\n\tconst result = new NativeDragSource(config)\n\tresult.loadDataTransfer(dataTransfer)\n\treturn result\n}\n\nexport function matchNativeItemType(\n\tdataTransfer: DataTransfer | null,\n): string | null {\n\tif (!dataTransfer) {\n\t\treturn null\n\t}\n\n\tconst dataTransferTypes = Array.prototype.slice.call(dataTransfer.types || [])\n\treturn (\n\t\tObject.keys(nativeTypesConfig).filter((nativeItemType) => {\n\t\t\tconst typeConfig = nativeTypesConfig[nativeItemType]\n\t\t\tif (!typeConfig?.matchesTypes) {\n\t\t\t\treturn false\n\t\t\t}\n\t\t\treturn typeConfig.matchesTypes.some(\n\t\t\t\t(t) => dataTransferTypes.indexOf(t) > -1,\n\t\t\t)\n\t\t})[0] || null\n\t)\n}\n","import { memoize } from './utils/js_utils.js'\n\ndeclare global {\n\tinterface Window extends HTMLElement {\n\t\tsafari: any\n\t}\n}\n\nexport type Predicate = () => boolean\nexport const isFirefox: Predicate = memoize(() =>\n\t/firefox/i.test(navigator.userAgent),\n)\nexport const isSafari: Predicate = memoize(() => Boolean(window.safari))\n","export class MonotonicInterpolant {\n\tprivate xs: any\n\tprivate ys: any\n\tprivate c1s: any\n\tprivate c2s: any\n\tprivate c3s: any\n\n\tpublic constructor(xs: number[], ys: number[]) {\n\t\tconst { length } = xs\n\n\t\t// Rearrange xs and ys so that xs is sorted\n\t\tconst indexes = []\n\t\tfor (let i = 0; i < length; i++) {\n\t\t\tindexes.push(i)\n\t\t}\n\t\tindexes.sort((a, b) => ((xs[a] as number) < (xs[b] as number) ? -1 : 1))\n\n\t\t// Get consecutive differences and slopes\n\t\tconst dys = []\n\t\tconst dxs = []\n\t\tconst ms = []\n\t\tlet dx\n\t\tlet dy\n\t\tfor (let i = 0; i < length - 1; i++) {\n\t\t\tdx = (xs[i + 1] as number) - (xs[i] as number)\n\t\t\tdy = (ys[i + 1] as number) - (ys[i] as number)\n\t\t\tdxs.push(dx)\n\t\t\tdys.push(dy)\n\t\t\tms.push(dy / dx)\n\t\t}\n\n\t\t// Get degree-1 coefficients\n\t\tconst c1s = [ms[0]]\n\t\tfor (let i = 0; i < dxs.length - 1; i++) {\n\t\t\tconst m2 = ms[i] as number\n\t\t\tconst mNext = ms[i + 1] as number\n\t\t\tif (m2 * mNext <= 0) {\n\t\t\t\tc1s.push(0)\n\t\t\t} else {\n\t\t\t\tdx = dxs[i] as number\n\t\t\t\tconst dxNext = dxs[i + 1] as number\n\t\t\t\tconst common = dx + dxNext\n\t\t\t\tc1s.push(\n\t\t\t\t\t(3 * common) / ((common + dxNext) / m2 + (common + dx) / mNext),\n\t\t\t\t)\n\t\t\t}\n\t\t}\n\t\tc1s.push(ms[ms.length - 1])\n\n\t\t// Get degree-2 and degree-3 coefficients\n\t\tconst c2s = []\n\t\tconst c3s = []\n\t\tlet m\n\t\tfor (let i = 0; i < c1s.length - 1; i++) {\n\t\t\tm = ms[i] as number\n\t\t\tconst c1 = c1s[i] as number\n\t\t\tconst invDx = 1 / (dxs[i] as number)\n\t\t\tconst common = c1 + (c1s[i + 1] as number) - m - m\n\t\t\tc2s.push((m - c1 - common) * invDx)\n\t\t\tc3s.push(common * invDx * invDx)\n\t\t}\n\n\t\tthis.xs = xs\n\t\tthis.ys = ys\n\t\tthis.c1s = c1s\n\t\tthis.c2s = c2s\n\t\tthis.c3s = c3s\n\t}\n\n\tpublic interpolate(x: number): number {\n\t\tconst { xs, ys, c1s, c2s, c3s } = this\n\n\t\t// The rightmost point in the dataset should give an exact result\n\t\tlet i = xs.length - 1\n\t\tif (x === xs[i]) {\n\t\t\treturn ys[i]\n\t\t}\n\n\t\t// Search for the interval x is in, returning the corresponding y if x is one of the original xs\n\t\tlet low = 0\n\t\tlet high = c3s.length - 1\n\t\tlet mid\n\t\twhile (low <= high) {\n\t\t\tmid = Math.floor(0.5 * (low + high))\n\t\t\tconst xHere = xs[mid]\n\t\t\tif (xHere < x) {\n\t\t\t\tlow = mid + 1\n\t\t\t} else if (xHere > x) {\n\t\t\t\thigh = mid - 1\n\t\t\t} else {\n\t\t\t\treturn ys[mid]\n\t\t\t}\n\t\t}\n\t\ti = Math.max(0, high)\n\n\t\t// Interpolate\n\t\tconst diff = x - xs[i]\n\t\tconst diffSq = diff * diff\n\t\treturn ys[i] + c1s[i] * diff + c2s[i] * diffSq + c3s[i] * diff * diffSq\n\t}\n}\n","import type { XYCoord } from 'dnd-core'\n\nimport { isFirefox, isSafari } from './BrowserDetector.js'\nimport { MonotonicInterpolant } from './MonotonicInterpolant.js'\n\nconst ELEMENT_NODE = 1\n\nexport function getNodeClientOffset(node: Node): XYCoord | null {\n\tconst el = node.nodeType === ELEMENT_NODE ? node : node.parentElement\n\n\tif (!el) {\n\t\treturn null\n\t}\n\n\tconst { top, left } = (el as HTMLElement).getBoundingClientRect()\n\treturn { x: left, y: top }\n}\n\nexport function getEventClientOffset(e: MouseEvent): XYCoord {\n\treturn {\n\t\tx: e.clientX,\n\t\ty: e.clientY,\n\t}\n}\n\nfunction isImageNode(node: any) {\n\treturn (\n\t\tnode.nodeName === 'IMG' &&\n\t\t(isFirefox() || !document.documentElement?.contains(node))\n\t)\n}\n\nfunction getDragPreviewSize(\n\tisImage: boolean,\n\tdragPreview: any,\n\tsourceWidth: number,\n\tsourceHeight: number,\n) {\n\tlet dragPreviewWidth = isImage ? dragPreview.width : sourceWidth\n\tlet dragPreviewHeight = isImage ? dragPreview.height : sourceHeight\n\n\t// Work around @2x coordinate discrepancies in browsers\n\tif (isSafari() && isImage) {\n\t\tdragPreviewHeight /= window.devicePixelRatio\n\t\tdragPreviewWidth /= window.devicePixelRatio\n\t}\n\treturn { dragPreviewWidth, dragPreviewHeight }\n}\n\nexport function getDragPreviewOffset(\n\tsourceNode: HTMLElement,\n\tdragPreview: HTMLElement,\n\tclientOffset: XYCoord,\n\tanchorPoint: { anchorX: number; anchorY: number },\n\toffsetPoint: { offsetX: number; offsetY: number },\n): XYCoord {\n\t// The browsers will use the image intrinsic size under different conditions.\n\t// Firefox only cares if it's an image, but WebKit also wants it to be detached.\n\tconst isImage = isImageNode(dragPreview)\n\tconst dragPreviewNode = isImage ? sourceNode : dragPreview\n\tconst dragPreviewNodeOffsetFromClient = getNodeClientOffset(\n\t\tdragPreviewNode,\n\t) as XYCoord\n\tconst offsetFromDragPreview = {\n\t\tx: clientOffset.x - dragPreviewNodeOffsetFromClient.x,\n\t\ty: clientOffset.y - dragPreviewNodeOffsetFromClient.y,\n\t}\n\tconst { offsetWidth: sourceWidth, offsetHeight: sourceHeight } = sourceNode\n\tconst { anchorX, anchorY } = anchorPoint\n\tconst { dragPreviewWidth, dragPreviewHeight } = getDragPreviewSize(\n\t\tisImage,\n\t\tdragPreview,\n\t\tsourceWidth,\n\t\tsourceHeight,\n\t)\n\n\tconst calculateYOffset = () => {\n\t\tconst interpolantY = new MonotonicInterpolant(\n\t\t\t[0, 0.5, 1],\n\t\t\t[\n\t\t\t\t// Dock to the top\n\t\t\t\toffsetFromDragPreview.y,\n\t\t\t\t// Align at the center\n\t\t\t\t(offsetFromDragPreview.y / sourceHeight) * dragPreviewHeight,\n\t\t\t\t// Dock to the bottom\n\t\t\t\toffsetFromDragPreview.y + dragPreviewHeight - sourceHeight,\n\t\t\t],\n\t\t)\n\t\tlet y = interpolantY.interpolate(anchorY)\n\t\t// Work around Safari 8 positioning bug\n\t\tif (isSafari() && isImage) {\n\t\t\t// We'll have to wait for @3x to see if this is entirely correct\n\t\t\ty += (window.devicePixelRatio - 1) * dragPreviewHeight\n\t\t}\n\t\treturn y\n\t}\n\n\tconst calculateXOffset = () => {\n\t\t// Interpolate coordinates depending on anchor point\n\t\t// If you know a simpler way to do this, let me know\n\t\tconst interpolantX = new MonotonicInterpolant(\n\t\t\t[0, 0.5, 1],\n\t\t\t[\n\t\t\t\t// Dock to the left\n\t\t\t\toffsetFromDragPreview.x,\n\t\t\t\t// Align at the center\n\t\t\t\t(offsetFromDragPreview.x / sourceWidth) * dragPreviewWidth,\n\t\t\t\t// Dock to the right\n\t\t\t\toffsetFromDragPreview.x + dragPreviewWidth - sourceWidth,\n\t\t\t],\n\t\t)\n\t\treturn interpolantX.interpolate(anchorX)\n\t}\n\n\t// Force offsets if specified in the options.\n\tconst { offsetX, offsetY } = offsetPoint\n\tconst isManualOffsetX = offsetX === 0 || offsetX\n\tconst isManualOffsetY = offsetY === 0 || offsetY\n\treturn {\n\t\tx: isManualOffsetX ? offsetX : calculateXOffset(),\n\t\ty: isManualOffsetY ? offsetY : calculateYOffset(),\n\t}\n}\n","import type { HTML5BackendContext, HTML5BackendOptions } from './types.js'\n\nexport class OptionsReader {\n\tpublic ownerDocument: Document | null = null\n\tprivate globalContext: HTML5BackendContext\n\tprivate optionsArgs: HTML5BackendOptions | undefined\n\n\tpublic constructor(\n\t\tglobalContext: HTML5BackendContext,\n\t\toptions?: HTML5BackendOptions,\n\t) {\n\t\tthis.globalContext = globalContext\n\t\tthis.optionsArgs = options\n\t}\n\n\tpublic get window(): Window | undefined {\n\t\tif (this.globalContext) {\n\t\t\treturn this.globalContext\n\t\t} else if (typeof window !== 'undefined') {\n\t\t\treturn window\n\t\t}\n\t\treturn undefined\n\t}\n\n\tpublic get document(): Document | undefined {\n\t\tif (this.globalContext?.document) {\n\t\t\treturn this.globalContext.document\n\t\t} else if (this.window) {\n\t\t\treturn this.window.document\n\t\t} else {\n\t\t\treturn undefined\n\t\t}\n\t}\n\n\tpublic get rootElement(): Node | undefined {\n\t\treturn this.optionsArgs?.rootElement || this.window\n\t}\n}\n","import type {\n\tBackend,\n\tDragDropActions,\n\tDragDropManager,\n\tDragDropMonitor,\n\tHandlerRegistry,\n\tIdentifier,\n\tUnsubscribe,\n\tXYCoord,\n} from 'dnd-core'\n\nimport { EnterLeaveCounter } from './EnterLeaveCounter.js'\nimport {\n\tcreateNativeDragSource,\n\tmatchNativeItemType,\n} from './NativeDragSources/index.js'\nimport type { NativeDragSource } from './NativeDragSources/NativeDragSource.js'\nimport * as NativeTypes from './NativeTypes.js'\nimport {\n\tgetDragPreviewOffset,\n\tgetEventClientOffset,\n\tgetNodeClientOffset,\n} from './OffsetUtils.js'\nimport { OptionsReader } from './OptionsReader.js'\nimport type { HTML5BackendContext, HTML5BackendOptions } from './types.js'\n\ntype RootNode = Node & { __isReactDndBackendSetUp: boolean | undefined }\n\nexport class HTML5BackendImpl implements Backend {\n\tprivate options: OptionsReader\n\n\t// React-Dnd Components\n\tprivate actions: DragDropActions\n\tprivate monitor: DragDropMonitor\n\tprivate registry: HandlerRegistry\n\n\t// Internal State\n\tprivate enterLeaveCounter: EnterLeaveCounter\n\n\tprivate sourcePreviewNodes: Map<string, Element> = new Map()\n\tprivate sourcePreviewNodeOptions: Map<string, any> = new Map()\n\tprivate sourceNodes: Map<string, Element> = new Map()\n\tprivate sourceNodeOptions: Map<string, any> = new Map()\n\n\tprivate dragStartSourceIds: string[] | null = null\n\tprivate dropTargetIds: string[] = []\n\tprivate dragEnterTargetIds: string[] = []\n\tprivate currentNativeSource: NativeDragSource | null = null\n\tprivate currentNativeHandle: Identifier | null = null\n\tprivate currentDragSourceNode: Element | null = null\n\tprivate altKeyPressed = false\n\tprivate mouseMoveTimeoutTimer: number | null = null\n\tprivate asyncEndDragFrameId: number | null = null\n\tprivate dragOverTargetIds: string[] | null = null\n\n\tprivate lastClientOffset: XYCoord | null = null\n\tprivate hoverRafId: number | null = null\n\n\tpublic constructor(\n\t\tmanager: DragDropManager,\n\t\tglobalContext?: HTML5BackendContext,\n\t\toptions?: HTML5BackendOptions,\n\t) {\n\t\tthis.options = new OptionsReader(globalContext, options)\n\t\tthis.actions = manager.getActions()\n\t\tthis.monitor = manager.getMonitor()\n\t\tthis.registry = manager.getRegistry()\n\t\tthis.enterLeaveCounter = new EnterLeaveCounter(this.isNodeInDocument)\n\t}\n\n\t/**\n\t * Generate profiling statistics for the HTML5Backend.\n\t */\n\tpublic profile(): Record<string, number> {\n\t\treturn {\n\t\t\tsourcePreviewNodes: this.sourcePreviewNodes.size,\n\t\t\tsourcePreviewNodeOptions: this.sourcePreviewNodeOptions.size,\n\t\t\tsourceNodeOptions: this.sourceNodeOptions.size,\n\t\t\tsourceNodes: this.sourceNodes.size,\n\t\t\tdragStartSourceIds: this.dragStartSourceIds?.length || 0,\n\t\t\tdropTargetIds: this.dropTargetIds.length,\n\t\t\tdragEnterTargetIds: this.dragEnterTargetIds.length,\n\t\t\tdragOverTargetIds: this.dragOverTargetIds?.length || 0,\n\t\t}\n\t}\n\n\t// public for test\n\tpublic get window(): Window | undefined {\n\t\treturn this.options.window\n\t}\n\tpublic get document(): Document | undefined {\n\t\treturn this.options.document\n\t}\n\t/**\n\t * Get the root element to use for event subscriptions\n\t */\n\tprivate get rootElement(): Node | undefined {\n\t\treturn this.options.rootElement as Node\n\t}\n\n\tpublic setup(): void {\n\t\tconst root = this.rootElement as RootNode | undefined\n\t\tif (root === undefined) {\n\t\t\treturn\n\t\t}\n\n\t\tif (root.__isReactDndBackendSetUp) {\n\t\t\tthrow new Error('Cannot have two HTML5 backends at the same time.')\n\t\t}\n\t\troot.__isReactDndBackendSetUp = true\n\t\tthis.addEventListeners(root)\n\t}\n\n\tpublic teardown(): void {\n\t\tconst root = this.rootElement as RootNode\n\t\tif (root === undefined) {\n\t\t\treturn\n\t\t}\n\n\t\troot.__isReactDndBackendSetUp = false\n\t\tthis.removeEventListeners(this.rootElement as Element)\n\t\tthis.clearCurrentDragSourceNode()\n\t\tif (this.asyncEndDragFrameId) {\n\t\t\tthis.window?.cancelAnimationFrame(this.asyncEndDragFrameId)\n\t\t}\n\t}\n\n\tpublic connectDragPreview(\n\t\tsourceId: string,\n\t\tnode: Element,\n\t\toptions: any,\n\t): Unsubscribe {\n\t\tthis.sourcePreviewNodeOptions.set(sourceId, options)\n\t\tthis.sourcePreviewNodes.set(sourceId, node)\n\n\t\treturn (): void => {\n\t\t\tthis.sourcePreviewNodes.delete(sourceId)\n\t\t\tthis.sourcePreviewNodeOptions.delete(sourceId)\n\t\t}\n\t}\n\n\tpublic connectDragSource(\n\t\tsourceId: string,\n\t\tnode: Element,\n\t\toptions: any,\n\t): Unsubscribe {\n\t\tthis.sourceNodes.set(sourceId, node)\n\t\tthis.sourceNodeOptions.set(sourceId, options)\n\n\t\tconst handleDragStart = (e: any) => this.handleDragStart(e, sourceId)\n\t\tconst handleSelectStart = (e: any) => this.handleSelectStart(e)\n\n\t\tnode.setAttribute('draggable', 'true')\n\t\tnode.addEventListener('dragstart', handleDragStart)\n\t\tnode.addEventListener('selectstart', handleSelectStart)\n\n\t\treturn (): void => {\n\t\t\tthis.sourceNodes.delete(sourceId)\n\t\t\tthis.sourceNodeOptions.delete(sourceId)\n\n\t\t\tnode.removeEventListener('dragstart', handleDragStart)\n\t\t\tnode.removeEventListener('selectstart', handleSelectStart)\n\t\t\tnode.setAttribute('draggable', 'false')\n\t\t}\n\t}\n\n\tpublic connectDropTarget(targetId: string, node: HTMLElement): Unsubscribe {\n\t\tconst handleDragEnter = (e: DragEvent) => this.handleDragEnter(e, targetId)\n\t\tconst handleDragOver = (e: DragEvent) => this.handleDragOver(e, targetId)\n\t\tconst handleDrop = (e: DragEvent) => this.handleDrop(e, targetId)\n\n\t\tnode.addEventListener('dragenter', handleDragEnter)\n\t\tnode.addEventListener('dragover', handleDragOver)\n\t\tnode.addEventListener('drop', handleDrop)\n\n\t\treturn (): void => {\n\t\t\tnode.removeEventListener('dragenter', handleDragEnter)\n\t\t\tnode.removeEventListener('dragover', handleDragOver)\n\t\t\tnode.removeEventListener('drop', handleDrop)\n\t\t}\n\t}\n\n\tprivate addEventListeners(target: Node) {\n\t\t// SSR Fix (https://github.com/react-dnd/react-dnd/pull/813\n\t\tif (!target.addEventListener) {\n\t\t\treturn\n\t\t}\n\t\ttarget.addEventListener(\n\t\t\t'dragstart',\n\t\t\tthis.handleTopDragStart as EventListener,\n\t\t)\n\t\ttarget.addEventListener('dragstart', this.handleTopDragStartCapture, true)\n\t\ttarget.addEventListener('dragend', this.handleTopDragEndCapture, true)\n\t\ttarget.addEventListener(\n\t\t\t'dragenter',\n\t\t\tthis.handleTopDragEnter as EventListener,\n\t\t)\n\t\ttarget.addEventListener(\n\t\t\t'dragenter',\n\t\t\tthis.handleTopDragEnterCapture as EventListener,\n\t\t\ttrue,\n\t\t)\n\t\ttarget.addEventListener(\n\t\t\t'dragleave',\n\t\t\tthis.handleTopDragLeaveCapture as EventListener,\n\t\t\ttrue,\n\t\t)\n\t\ttarget.addEventListener('dragover', this.handleTopDragOver as EventListener)\n\t\ttarget.addEventListener(\n\t\t\t'dragover',\n\t\t\tthis.handleTopDragOverCapture as EventListener,\n\t\t\ttrue,\n\t\t)\n\t\ttarget.addEventListener('drop', this.handleTopDrop as EventListener)\n\t\ttarget.addEventListener(\n\t\t\t'drop',\n\t\t\tthis.handleTopDropCapture as EventListener,\n\t\t\ttrue,\n\t\t)\n\t}\n\n\tprivate removeEventListeners(target: Node) {\n\t\t// SSR Fix (https://github.com/react-dnd/react-dnd/pull/813\n\t\tif (!target.removeEventListener) {\n\t\t\treturn\n\t\t}\n\t\ttarget.removeEventListener('dragstart', this.handleTopDragStart as any)\n\t\ttarget.removeEventListener(\n\t\t\t'dragstart',\n\t\t\tthis.handleTopDragStartCapture,\n\t\t\ttrue,\n\t\t)\n\t\ttarget.removeEventListener('dragend', this.handleTopDragEndCapture, true)\n\t\ttarget.removeEventListener(\n\t\t\t'dragenter',\n\t\t\tthis.handleTopDragEnter as EventListener,\n\t\t)\n\t\ttarget.removeEventListener(\n\t\t\t'dragenter',\n\t\t\tthis.handleTopDragEnterCapture as EventListener,\n\t\t\ttrue,\n\t\t)\n\t\ttarget.removeEventListener(\n\t\t\t'dragleave',\n\t\t\tthis.handleTopDragLeaveCapture as EventListener,\n\t\t\ttrue,\n\t\t)\n\t\ttarget.removeEventListener(\n\t\t\t'dragover',\n\t\t\tthis.handleTopDragOver as EventListener,\n\t\t)\n\t\ttarget.removeEventListener(\n\t\t\t'dragover',\n\t\t\tthis.handleTopDragOverCapture as EventListener,\n\t\t\ttrue,\n\t\t)\n\t\ttarget.removeEventListener('drop', this.handleTopDrop as EventListener)\n\t\ttarget.removeEventListener(\n\t\t\t'drop',\n\t\t\tthis.handleTopDropCapture as EventListener,\n\t\t\ttrue,\n\t\t)\n\t}\n\n\tprivate getCurrentSourceNodeOptions() {\n\t\tconst sourceId = this.monitor.getSourceId() as string\n\t\tconst sourceNodeOptions = this.sourceNodeOptions.get(sourceId)\n\n\t\treturn {\n\t\t\tdropEffect: this.altKeyPressed ? 'copy' : 'move',\n\t\t\t...(sourceNodeOptions || {}),\n\t\t}\n\t}\n\n\tprivate getCurrentDropEffect() {\n\t\tif (this.isDraggingNativeItem()) {\n\t\t\t// It makes more sense to default to 'copy' for native resources\n\t\t\treturn 'copy'\n\t\t}\n\n\t\treturn this.getCurrentSourceNodeOptions().dropEffect\n\t}\n\n\tprivate getCurrentSourcePreviewNodeOptions() {\n\t\tconst sourceId = this.monitor.getSourceId() as string\n\t\tconst sourcePreviewNodeOptions = this.sourcePreviewNodeOptions.get(sourceId)\n\n\t\treturn {\n\t\t\tanchorX: 0.5,\n\t\t\tanchorY: 0.5,\n\t\t\tcaptureDraggingState: false,\n\t\t\t...(sourcePreviewNodeOptions || {}),\n\t\t}\n\t}\n\n\tprivate getSourceClientOffset = (sourceId: string): XYCoord | null => {\n\t\tconst source = this.sourceNodes.get(sourceId)\n\t\treturn (source && getNodeClientOffset(source as HTMLElement)) || null\n\t}\n\n\tprivate isDraggingNativeItem() {\n\t\tconst itemType = this.monitor.getItemType()\n\t\treturn Object.keys(NativeTypes).some(\n\t\t\t(key: string) => (NativeTypes as any)[key] === itemType,\n\t\t)\n\t}\n\n\tprivate beginDragNativeItem(type: string, dataTransfer?: DataTransfer) {\n\t\tthis.clearCurrentDragSourceNode()\n\n\t\tthis.currentNativeSource = createNativeDragSource(type, dataTransfer)\n\t\tthis.currentNativeHandle = this.registry.addSource(\n\t\t\ttype,\n\t\t\tthis.currentNativeSource,\n\t\t)\n\t\tthis.actions.beginDrag([this.currentNativeHandle])\n\t}\n\n\tprivate endDragNativeItem = (): void => {\n\t\tif (!this.isDraggingNativeItem()) {\n\t\t\treturn\n\t\t}\n\n\t\tthis.actions.endDrag()\n\t\tif (this.currentNativeHandle) {\n\t\t\tthis.registry.removeSource(this.currentNativeHandle)\n\t\t}\n\t\tthis.currentNativeHandle = null\n\t\tthis.currentNativeSource = null\n\t}\n\n\tprivate isNodeInDocument = (node: Node | null | undefined): boolean => {\n\t\t// Check the node either in the main document or in the current context\n\t\treturn Boolean(\n\t\t\tnode &&\n\t\t\t\tthis.document &&\n\t\t\t\tthis.document.body &&\n\t\t\t\tthis.document.body.contains(node),\n\t\t)\n\t}\n\n\tprivate endDragIfSourceWasRemovedFromDOM = (): void => {\n\t\tconst node = this.currentDragSourceNode\n\t\tif (node == null || this.isNodeInDocument(node)) {\n\t\t\treturn\n\t\t}\n\n\t\tif (this.clearCurrentDragSourceNode() && this.monitor.isDragging()) {\n\t\t\tthis.actions.endDrag()\n\t\t}\n\t\tthis.cancelHover()\n\t}\n\n\tprivate setCurrentDragSourceNode(node: Element | null) {\n\t\tthis.clearCurrentDragSourceNode()\n\t\tthis.currentDragSourceNode = node\n\n\t\t// A timeout of > 0 is necessary to resolve Firefox issue referenced\n\t\t// See:\n\t\t//   * https://github.com/react-dnd/react-dnd/pull/928\n\t\t//   * https://github.com/react-dnd/react-dnd/issues/869\n\t\tconst MOUSE_MOVE_TIMEOUT = 1000\n\n\t\t// Receiving a mouse event in the middle of a dragging operation\n\t\t// means it has ended and the drag source node disappeared from DOM,\n\t\t// so the browser didn't dispatch the dragend event.\n\t\t//\n\t\t// We need to wait before we start listening for mousemove events.\n\t\t// This is needed because the drag preview needs to be drawn or else it fires an 'mousemove' event\n\t\t// immediately in some browsers.\n\t\t//\n\t\t// See:\n\t\t//   * https://github.com/react-dnd/react-dnd/pull/928\n\t\t//   * https://github.com/react-dnd/react-dnd/issues/869\n\t\t//\n\t\tthis.mouseMoveTimeoutTimer = setTimeout(() => {\n\t\t\treturn this.rootElement?.addEventListener(\n\t\t\t\t'mousemove',\n\t\t\t\tthis.endDragIfSourceWasRemovedFromDOM,\n\t\t\t\ttrue,\n\t\t\t)\n\t\t}, MOUSE_MOVE_TIMEOUT) as any as number\n\t}\n\n\tprivate clearCurrentDragSourceNode() {\n\t\tif (this.currentDragSourceNode) {\n\t\t\tthis.currentDragSourceNode = null\n\n\t\t\tif (this.rootElement) {\n\t\t\t\tthis.window?.clearTimeout(this.mouseMoveTimeoutTimer || undefined)\n\t\t\t\tthis.rootElement.removeEventListener(\n\t\t\t\t\t'mousemove',\n\t\t\t\t\tthis.endDragIfSourceWasRemovedFromDOM,\n\t\t\t\t\ttrue,\n\t\t\t\t)\n\t\t\t}\n\n\t\t\tthis.mouseMoveTimeoutTimer = null\n\t\t\treturn true\n\t\t}\n\n\t\treturn false\n\t}\n\n\tprivate scheduleHover = (dragOverTargetIds: string[] | null) => {\n\t\tif (\n\t\t\tthis.hoverRafId === null &&\n\t\t\ttypeof requestAnimationFrame !== 'undefined'\n\t\t) {\n\t\t\tthis.hoverRafId = requestAnimationFrame(() => {\n\t\t\t\tif (this.monitor.isDragging()) {\n\t\t\t\t\tthis.actions.hover(dragOverTargetIds || [], {\n\t\t\t\t\t\tclientOffset: this.lastClientOffset,\n\t\t\t\t\t})\n\t\t\t\t}\n\n\t\t\t\tthis.hoverRafId = null\n\t\t\t})\n\t\t}\n\t}\n\n\tprivate cancelHover = () => {\n\t\tif (\n\t\t\tthis.hoverRafId !== null &&\n\t\t\ttypeof cancelAnimationFrame !== 'undefined'\n\t\t) {\n\t\t\tcancelAnimationFrame(this.hoverRafId)\n\t\t\tthis.hoverRafId = null\n\t\t}\n\t}\n\n\tpublic handleTopDragStartCapture = (): void => {\n\t\tthis.clearCurrentDragSourceNode()\n\t\tthis.dragStartSourceIds = []\n\t}\n\n\tpublic handleDragStart(e: DragEvent, sourceId: string): void {\n\t\tif (e.defaultPrevented) {\n\t\t\treturn\n\t\t}\n\n\t\tif (!this.dragStartSourceIds) {\n\t\t\tthis.dragStartSourceIds = []\n\t\t}\n\t\tthis.dragStartSourceIds.unshift(sourceId)\n\t}\n\n\tpublic handleTopDragStart = (e: DragEvent): void => {\n\t\tif (e.defaultPrevented) {\n\t\t\treturn\n\t\t}\n\n\t\tconst { dragStartSourceIds } = this\n\t\tthis.dragStartSourceIds = null\n\n\t\tconst clientOffset = getEventClientOffset(e)\n\n\t\t// Avoid crashing if we missed a drop event or our previous drag died\n\t\tif (this.monitor.isDragging()) {\n\t\t\tthis.actions.endDrag()\n\t\t\tthis.cancelHover()\n\t\t}\n\n\t\t// Don't publish the source just yet (see why below)\n\t\tthis.actions.beginDrag(dragStartSourceIds || [], {\n\t\t\tpublishSource: false,\n\t\t\tgetSourceClientOffset: this.getSourceClientOffset,\n\t\t\tclientOffset,\n\t\t})\n\n\t\tconst { dataTransfer } = e\n\t\tconst nativeType = matchNativeItemType(dataTransfer)\n\n\t\tif (this.monitor.isDragging()) {\n\t\t\tif (dataTransfer && typeof dataTransfer.setDragImage === 'function') {\n\t\t\t\t// Use custom drag image if user specifies it.\n\t\t\t\t// If child drag source refuses drag but parent agrees,\n\t\t\t\t// use parent's node as drag image. Neither works in IE though.\n\t\t\t\tconst sourceId: string = this.monitor.getSourceId() as string\n\t\t\t\tconst sourceNode = this.sourceNodes.get(sourceId)\n\t\t\t\tconst dragPreview = this.sourcePreviewNodes.get(sourceId) || sourceNode\n\n\t\t\t\tif (dragPreview) {\n\t\t\t\t\tconst { anchorX, anchorY, offsetX, offsetY } =\n\t\t\t\t\t\tthis.getCurrentSourcePreviewNodeOptions()\n\t\t\t\t\tconst anchorPoint = { anchorX, anchorY }\n\t\t\t\t\tconst offsetPoint = { offsetX, offsetY }\n\t\t\t\t\tconst dragPreviewOffset = getDragPreviewOffset(\n\t\t\t\t\t\tsourceNode as HTMLElement,\n\t\t\t\t\t\tdragPreview as HTMLElement,\n\t\t\t\t\t\tclientOffset,\n\t\t\t\t\t\tanchorPoint,\n\t\t\t\t\t\toffsetPoint,\n\t\t\t\t\t)\n\n\t\t\t\t\tdataTransfer.setDragImage(\n\t\t\t\t\t\tdragPreview,\n\t\t\t\t\t\tdragPreviewOffset.x,\n\t\t\t\t\t\tdragPreviewOffset.y,\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\t// Firefox won't drag without setting data\n\t\t\t\tdataTransfer?.setData('application/json', {} as any)\n\t\t\t} catch (err) {\n\t\t\t\t// IE doesn't support MIME types in setData\n\t\t\t}\n\n\t\t\t// Store drag source node so we can check whether\n\t\t\t// it is removed from DOM and trigger endDrag manually.\n\t\t\tthis.setCurrentDragSourceNode(e.target as Element)\n\n\t\t\t// Now we are ready to publish the drag source.. or are we not?\n\t\t\tconst { captureDraggingState } = this.getCurrentSourcePreviewNodeOptions()\n\t\t\tif (!captureDraggingState) {\n\t\t\t\t// Usually we want to publish it in the next tick so that browser\n\t\t\t\t// is able to screenshot the current (not yet dragging) state.\n\t\t\t\t//\n\t\t\t\t// It also neatly avoids a situation where render() returns null\n\t\t\t\t// in the same tick for the source element, and browser freaks out.\n\t\t\t\tsetTimeout(() => this.actions.publishDragSource(), 0)\n\t\t\t} else {\n\t\t\t\t// In some cases the user may want to override this behavior, e.g.\n\t\t\t\t// to work around IE not supporting custom drag previews.\n\t\t\t\t//\n\t\t\t\t// When using a custom drag layer, the only way to prevent\n\t\t\t\t// the default drag preview from drawing in IE is to screenshot\n\t\t\t\t// the dragging state in which the node itself has zero opacity\n\t\t\t\t// and height. In this case, though, returning null from render()\n\t\t\t\t// will abruptly end the dragging, which is not obvious.\n\t\t\t\t//\n\t\t\t\t// This is the reason such behavior is strictly opt-in.\n\t\t\t\tthis.actions.publishDragSource()\n\t\t\t}\n\t\t} else if (nativeType) {\n\t\t\t// A native item (such as URL) dragged from inside the document\n\t\t\tthis.beginDragNativeItem(nativeType)\n\t\t} else if (\n\t\t\tdataTransfer &&\n\t\t\t!dataTransfer.types &&\n\t\t\t((e.target && !(e.target as Element).hasAttribute) ||\n\t\t\t\t!(e.target as Element).hasAttribute('draggable'))\n\t\t) {\n\t\t\t// Looks like a Safari bug: dataTransfer.types is null, but there was no draggable.\n\t\t\t// Just let it drag. It's a native type (URL or text) and will be picked up in\n\t\t\t// dragenter handler.\n\t\t\treturn\n\t\t} else {\n\t\t\t// If by this time no drag source reacted, tell browser not to drag.\n\t\t\te.preventDefault()\n\t\t}\n\t}\n\n\tpublic handleTopDragEndCapture = (): void => {\n\t\tif (this.clearCurrentDragSourceNode() && this.monitor.isDragging()) {\n\t\t\t// Firefox can dispatch this event in an infinite loop\n\t\t\t// if dragend handler does something like showing an alert.\n\t\t\t// Only proceed if we have not handled it already.\n\t\t\tthis.actions.endDrag()\n\t\t}\n\t\tthis.cancelHover()\n\t}\n\n\tpublic handleTopDragEnterCapture = (e: DragEvent): void => {\n\t\tthis.dragEnterTargetIds = []\n\n\t\tif (this.isDraggingNativeItem()) {\n\t\t\tthis.currentNativeSource?.loadDataTransfer(e.dataTransfer)\n\t\t}\n\n\t\tconst isFirstEnter = this.enterLeaveCounter.enter(e.target)\n\t\tif (!isFirstEnter || this.monitor.isDragging()) {\n\t\t\treturn\n\t\t}\n\n\t\tconst { dataTransfer } = e\n\t\tconst nativeType = matchNativeItemType(dataTransfer)\n\n\t\tif (nativeType) {\n\t\t\t// A native item (such as file or URL) dragged from outside the document\n\t\t\tthis.beginDragNativeItem(nativeType, dataTransfer as DataTransfer)\n\t\t}\n\t}\n\n\tpublic handleDragEnter(_e: DragEvent, targetId: string): void {\n\t\tthis.dragEnterTargetIds.unshift(targetId)\n\t}\n\n\tpublic handleTopDragEnter = (e: DragEvent): void => {\n\t\tconst { dragEnterTargetIds } = this\n\t\tthis.dragEnterTargetIds = []\n\n\t\tif (!this.monitor.isDragging()) {\n\t\t\t// This is probably a native item type we don't understand.\n\t\t\treturn\n\t\t}\n\n\t\tthis.altKeyPressed = e.altKey\n\n\t\t// If the target changes position as the result of `dragenter`, `dragover` might still\n\t\t// get dispatched despite target being no longer there. The easy solution is to check\n\t\t// whether there actually is a target before firing `hover`.\n\t\tif (dragEnterTargetIds.length > 0) {\n\t\t\tthis.actions.hover(dragEnterTargetIds, {\n\t\t\t\tclientOffset: getEventClientOffset(e),\n\t\t\t})\n\t\t}\n\n\t\tconst canDrop = dragEnterTargetIds.some((targetId) =>\n\t\t\tthis.monitor.canDropOnTarget(targetId),\n\t\t)\n\n\t\tif (canDrop) {\n\t\t\t// IE requires this to fire dragover events\n\t\t\te.preventDefault()\n\t\t\tif (e.dataTransfer) {\n\t\t\t\te.dataTransfer.dropEffect = this.getCurrentDropEffect()\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic handleTopDragOverCapture = (e: DragEvent): void => {\n\t\tthis.dragOverTargetIds = []\n\n\t\tif (this.isDraggingNativeItem()) {\n\t\t\tthis.currentNativeSource?.loadDataTransfer(e.dataTransfer)\n\t\t}\n\t}\n\n\tpublic handleDragOver(_e: DragEvent, targetId: string): void {\n\t\tif (this.dragOverTargetIds === null) {\n\t\t\tthis.dragOverTargetIds = []\n\t\t}\n\t\tthis.dragOverTargetIds.unshift(targetId)\n\t}\n\n\tpublic handleTopDragOver = (e: DragEvent): void => {\n\t\tconst { dragOverTargetIds } = this\n\t\tthis.dragOverTargetIds = []\n\n\t\tif (!this.monitor.isDragging()) {\n\t\t\t// This is probably a native item type we don't understand.\n\t\t\t// Prevent default \"drop and blow away the whole document\" action.\n\t\t\te.preventDefault()\n\t\t\tif (e.dataTransfer) {\n\t\t\t\te.dataTransfer.dropEffect = 'none'\n\t\t\t}\n\t\t\treturn\n\t\t}\n\n\t\tthis.altKeyPressed = e.altKey\n\t\tthis.lastClientOffset = getEventClientOffset(e)\n\n\t\tthis.scheduleHover(dragOverTargetIds)\n\n\t\tconst canDrop = (dragOverTargetIds || []).some((targetId) =>\n\t\t\tthis.monitor.canDropOnTarget(targetId),\n\t\t)\n\n\t\tif (canDrop) {\n\t\t\t// Show user-specified drop effect.\n\t\t\te.preventDefault()\n\t\t\tif (e.dataTransfer) {\n\t\t\t\te.dataTransfer.dropEffect = this.getCurrentDropEffect()\n\t\t\t}\n\t\t} else if (this.isDraggingNativeItem()) {\n\t\t\t// Don't show a nice cursor but still prevent default\n\t\t\t// \"drop and blow away the whole document\" action.\n\t\t\te.preventDefault()\n\t\t} else {\n\t\t\te.preventDefault()\n\t\t\tif (e.dataTransfer) {\n\t\t\t\te.dataTransfer.dropEffect = 'none'\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic handleTopDragLeaveCapture = (e: DragEvent): void => {\n\t\tif (this.isDraggingNativeItem()) {\n\t\t\te.preventDefault()\n\t\t}\n\n\t\tconst isLastLeave = this.enterLeaveCounter.leave(e.target)\n\t\tif (!isLastLeave) {\n\t\t\treturn\n\t\t}\n\n\t\tif (this.isDraggingNativeItem()) {\n\t\t\tsetTimeout(() => this.endDragNativeItem(), 0)\n\t\t}\n\t\tthis.cancelHover()\n\t}\n\n\tpublic handleTopDropCapture = (e: DragEvent): void => {\n\t\tthis.dropTargetIds = []\n\n\t\tif (this.isDraggingNativeItem()) {\n\t\t\te.preventDefault()\n\t\t\tthis.currentNativeSource?.loadDataTransfer(e.dataTransfer)\n\t\t} else if (matchNativeItemType(e.dataTransfer)) {\n\t\t\t// Dragging some elements, like <a> and <img> may still behave like a native drag event,\n\t\t\t// even if the current drag event matches a user-defined type.\n\t\t\t// Stop the default behavior when we're not expecting a native item to be dropped.\n\n\t\t\te.preventDefault()\n\t\t}\n\n\t\tthis.enterLeaveCounter.reset()\n\t}\n\n\tpublic handleDrop(_e: DragEvent, targetId: string): void {\n\t\tthis.dropTargetIds.unshift(targetId)\n\t}\n\n\tpublic handleTopDrop = (e: DragEvent): void => {\n\t\tconst { dropTargetIds } = this\n\t\tthis.dropTargetIds = []\n\n\t\tthis.actions.hover(dropTargetIds, {\n\t\t\tclientOffset: getEventClientOffset(e),\n\t\t})\n\t\tthis.actions.drop({ dropEffect: this.getCurrentDropEffect() })\n\n\t\tif (this.isDraggingNativeItem()) {\n\t\t\tthis.endDragNativeItem()\n\t\t} else if (this.monitor.isDragging()) {\n\t\t\tthis.actions.endDrag()\n\t\t}\n\t\tthis.cancelHover()\n\t}\n\n\tpublic handleSelectStart = (e: DragEvent): void => {\n\t\tconst target = e.target as HTMLElement & { dragDrop: () => void }\n\n\t\t// Only IE requires us to explicitly say\n\t\t// we want drag drop operation to start\n\t\tif (typeof target.dragDrop !== 'function') {\n\t\t\treturn\n\t\t}\n\n\t\t// Inputs and textareas should be selectable\n\t\tif (\n\t\t\ttarget.tagName === 'INPUT' ||\n\t\t\ttarget.tagName === 'SELECT' ||\n\t\t\ttarget.tagName === 'TEXTAREA' ||\n\t\t\ttarget.isContentEditable\n\t\t) {\n\t\t\treturn\n\t\t}\n\n\t\t// For other targets, ask IE\n\t\t// to enable drag and drop\n\t\te.preventDefault()\n\t\ttarget.dragDrop()\n\t}\n}\n","import type { BackendFactory, DragDropManager } from 'dnd-core'\n\nimport { HTML5BackendImpl } from './HTML5BackendImpl.js'\nimport type { HTML5BackendContext, HTML5BackendOptions } from './types.js'\nexport { getEmptyImage } from './getEmptyImage.js'\nexport * as NativeTypes from './NativeTypes.js'\nexport type { HTML5BackendContext, HTML5BackendOptions } from './types.js'\n\nexport const HTML5Backend: BackendFactory = function createBackend(\n\tmanager: DragDropManager,\n\tcontext?: HTML5BackendContext,\n\toptions?: HTML5BackendOptions,\n): HTML5BackendImpl {\n\treturn new HTML5BackendImpl(manager, context, options)\n}\n","import type { DragDropManager } from 'dnd-core'\nimport { createContext } from 'react'\n\n/**\n * The React context type\n */\nexport interface DndContextType {\n\tdragDropManager: DragDropManager | undefined\n}\n\n/**\n * Create the React Context\n */\nexport const DndContext = createContext<DndContextType>({\n\tdragDropManager: undefined,\n})\n","// cheap lodash replacements\n\n/**\n * drop-in replacement for _.get\n * @param obj\n * @param path\n * @param defaultValue\n */\nexport function get<T>(obj: any, path: string, defaultValue: T): T {\n\treturn path\n\t\t.split('.')\n\t\t.reduce((a, c) => (a && a[c] ? a[c] : defaultValue || null), obj) as T\n}\n\n/**\n * drop-in replacement for _.without\n */\nexport function without<T>(items: T[], item: T): T[] {\n\treturn items.filter((i) => i !== item)\n}\n\n/**\n * drop-in replacement for _.isString\n * @param input\n */\nexport function isString(input: any): boolean {\n\treturn typeof input === 'string'\n}\n\n/**\n * drop-in replacement for _.isString\n * @param input\n */\nexport function isObject(input: any): boolean {\n\treturn typeof input === 'object'\n}\n\n/**\n * replacement for _.xor\n * @param itemsA\n * @param itemsB\n */\nexport function xor<T extends string | number>(itemsA: T[], itemsB: T[]): T[] {\n\tconst map = new Map<T, number>()\n\tconst insertItem = (item: T) => {\n\t\tmap.set(item, map.has(item) ? (map.get(item) as number) + 1 : 1)\n\t}\n\titemsA.forEach(insertItem)\n\titemsB.forEach(insertItem)\n\n\tconst result: T[] = []\n\tmap.forEach((count, key) => {\n\t\tif (count === 1) {\n\t\t\tresult.push(key)\n\t\t}\n\t})\n\treturn result\n}\n\n/**\n * replacement for _.intersection\n * @param itemsA\n * @param itemsB\n */\nexport function intersection<T>(itemsA: T[], itemsB: T[]): T[] {\n\treturn itemsA.filter((t) => itemsB.indexOf(t) > -1)\n}\n","export const INIT_COORDS = 'dnd-core/INIT_COORDS'\nexport const BEGIN_DRAG = 'dnd-core/BEGIN_DRAG'\nexport const PUBLISH_DRAG_SOURCE = 'dnd-core/PUBLISH_DRAG_SOURCE'\nexport const HOVER = 'dnd-core/HOVER'\nexport const DROP = 'dnd-core/DROP'\nexport const END_DRAG = 'dnd-core/END_DRAG'\n","import type { AnyAction } from 'redux'\n\nimport type { XYCoord } from '../../../interfaces.js'\nimport { INIT_COORDS } from '../types.js'\n\nexport function setClientOffset(\n\tclientOffset: XYCoord | null | undefined,\n\tsourceClientOffset?: XYCoord | null | undefined,\n): AnyAction {\n\treturn {\n\t\ttype: INIT_COORDS,\n\t\tpayload: {\n\t\t\tsourceClientOffset: sourceClientOffset || null,\n\t\t\tclientOffset: clientOffset || null,\n\t\t},\n\t}\n}\n","import { invariant } from '@react-dnd/invariant'\n\nimport type {\n\tAction,\n\tBeginDragOptions,\n\tBeginDragPayload,\n\tDragDropManager,\n\tDragDropMonitor,\n\tHandlerRegistry,\n\tIdentifier,\n\tXYCoord,\n} from '../../interfaces.js'\nimport { isObject } from '../../utils/js_utils.js'\nimport { setClientOffset } from './local/setClientOffset.js'\nimport { BEGIN_DRAG, INIT_COORDS } from './types.js'\n\nconst ResetCoordinatesAction = {\n\ttype: INIT_COORDS,\n\tpayload: {\n\t\tclientOffset: null,\n\t\tsourceClientOffset: null,\n\t},\n}\n\nexport function createBeginDrag(manager: DragDropManager) {\n\treturn function beginDrag(\n\t\tsourceIds: Identifier[] = [],\n\t\toptions: BeginDragOptions = {\n\t\t\tpublishSource: true,\n\t\t},\n\t): Action<BeginDragPayload> | undefined {\n\t\tconst {\n\t\t\tpublishSource = true,\n\t\t\tclientOffset,\n\t\t\tgetSourceClientOffset,\n\t\t}: BeginDragOptions = options\n\t\tconst monitor = manager.getMonitor()\n\t\tconst registry = manager.getRegistry()\n\n\t\t// Initialize the coordinates using the client offset\n\t\tmanager.dispatch(setClientOffset(clientOffset))\n\n\t\tverifyInvariants(sourceIds, monitor, registry)\n\n\t\t// Get the draggable source\n\t\tconst sourceId = getDraggableSource(sourceIds, monitor)\n\t\tif (sourceId == null) {\n\t\t\tmanager.dispatch(ResetCoordinatesAction)\n\t\t\treturn\n\t\t}\n\n\t\t// Get the source client offset\n\t\tlet sourceClientOffset: XYCoord | null = null\n\t\tif (clientOffset) {\n\t\t\tif (!getSourceClientOffset) {\n\t\t\t\tthrow new Error('getSourceClientOffset must be defined')\n\t\t\t}\n\t\t\tverifyGetSourceClientOffsetIsFunction(getSourceClientOffset)\n\t\t\tsourceClientOffset = getSourceClientOffset(sourceId)\n\t\t}\n\n\t\t// Initialize the full coordinates\n\t\tmanager.dispatch(setClientOffset(clientOffset, sourceClientOffset))\n\n\t\tconst source = registry.getSource(sourceId)\n\t\tconst item = source.beginDrag(monitor, sourceId)\n\t\t// If source.beginDrag returns null, this is an indicator to cancel the drag\n\t\tif (item == null) {\n\t\t\treturn undefined\n\t\t}\n\t\tverifyItemIsObject(item)\n\t\tregistry.pinSource(sourceId)\n\n\t\tconst itemType = registry.getSourceType(sourceId)\n\t\treturn {\n\t\t\ttype: BEGIN_DRAG,\n\t\t\tpayload: {\n\t\t\t\titemType,\n\t\t\t\titem,\n\t\t\t\tsourceId,\n\t\t\t\tclientOffset: clientOffset || null,\n\t\t\t\tsourceClientOffset: sourceClientOffset || null,\n\t\t\t\tisSourcePublic: !!publishSource,\n\t\t\t},\n\t\t}\n\t}\n}\n\nfunction verifyInvariants(\n\tsourceIds: Identifier[],\n\tmonitor: DragDropMonitor,\n\tregistry: HandlerRegistry,\n) {\n\tinvariant(!monitor.isDragging(), 'Cannot call beginDrag while dragging.')\n\tsourceIds.forEach(function (sourceId) {\n\t\tinvariant(\n\t\t\tregistry.getSource(sourceId),\n\t\t\t'Expected sourceIds to be registered.',\n\t\t)\n\t})\n}\n\nfunction verifyGetSourceClientOffsetIsFunction(getSourceClientOffset: any) {\n\tinvariant(\n\t\ttypeof getSourceClientOffset === 'function',\n\t\t'When clientOffset is provided, getSourceClientOffset must be a function.',\n\t)\n}\n\nfunction verifyItemIsObject(item: any) {\n\tinvariant(isObject(item), 'Item must be an object.')\n}\n\nfunction getDraggableSource(sourceIds: Identifier[], monitor: DragDropMonitor) {\n\tlet sourceId = null\n\tfor (let i = sourceIds.length - 1; i >= 0; i--) {\n\t\tif (monitor.canDragSource(sourceIds[i])) {\n\t\t\tsourceId = sourceIds[i]\n\t\t\tbreak\n\t\t}\n\t}\n\treturn sourceId\n}\n","import { invariant } from '@react-dnd/invariant'\n\nimport type {\n\tAction,\n\tDragDropManager,\n\tDragDropMonitor,\n\tDropPayload,\n\tHandlerRegistry,\n\tIdentifier,\n} from '../../interfaces.js'\nimport { isObject } from '../../utils/js_utils.js'\nimport { DROP } from './types.js'\n\nexport function createDrop(manager: DragDropManager) {\n\treturn function drop(options = {}): void {\n\t\tconst monitor = manager.getMonitor()\n\t\tconst registry = manager.getRegistry()\n\t\tverifyInvariants(monitor)\n\t\tconst targetIds = getDroppableTargets(monitor)\n\n\t\t// Multiple actions are dispatched here, which is why this doesn't return an action\n\t\ttargetIds.forEach((targetId, index) => {\n\t\t\tconst dropResult = determineDropResult(targetId, index, registry, monitor)\n\t\t\tconst action: Action<DropPayload> = {\n\t\t\t\ttype: DROP,\n\t\t\t\tpayload: {\n\t\t\t\t\tdropResult: {\n\t\t\t\t\t\t...options,\n\t\t\t\t\t\t...dropResult,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t}\n\t\t\tmanager.dispatch(action)\n\t\t})\n\t}\n}\n\nfunction verifyInvariants(monitor: DragDropMonitor) {\n\tinvariant(monitor.isDragging(), 'Cannot call drop while not dragging.')\n\tinvariant(\n\t\t!monitor.didDrop(),\n\t\t'Cannot call drop twice during one drag operation.',\n\t)\n}\n\nfunction determineDropResult(\n\ttargetId: Identifier,\n\tindex: number,\n\tregistry: HandlerRegistry,\n\tmonitor: DragDropMonitor,\n) {\n\tconst target = registry.getTarget(targetId)\n\tlet dropResult = target ? target.drop(monitor, targetId) : undefined\n\tverifyDropResultType(dropResult)\n\tif (typeof dropResult === 'undefined') {\n\t\tdropResult = index === 0 ? {} : monitor.getDropResult()\n\t}\n\treturn dropResult\n}\n\nfunction verifyDropResultType(dropResult: any) {\n\tinvariant(\n\t\ttypeof dropResult === 'undefined' || isObject(dropResult),\n\t\t'Drop result must either be an object or undefined.',\n\t)\n}\n\nfunction getDroppableTargets(monitor: DragDropMonitor) {\n\tconst targetIds = monitor\n\t\t.getTargetIds()\n\t\t.filter(monitor.canDropOnTarget, monitor)\n\ttargetIds.reverse()\n\treturn targetIds\n}\n","import { invariant } from '@react-dnd/invariant'\n\nimport type {\n\tDragDropManager,\n\tDragDropMonitor,\n\tSentinelAction,\n} from '../../interfaces.js'\nimport { END_DRAG } from './types.js'\n\nexport function createEndDrag(manager: DragDropManager) {\n\treturn function endDrag(): SentinelAction {\n\t\tconst monitor = manager.getMonitor()\n\t\tconst registry = manager.getRegistry()\n\t\tverifyIsDragging(monitor)\n\n\t\tconst sourceId = monitor.getSourceId()\n\t\tif (sourceId != null) {\n\t\t\tconst source = registry.getSource(sourceId, true)\n\t\t\tsource.endDrag(monitor, sourceId)\n\t\t\tregistry.unpinSource()\n\t\t}\n\t\treturn { type: END_DRAG }\n\t}\n}\n\nfunction verifyIsDragging(monitor: DragDropMonitor) {\n\tinvariant(monitor.isDragging(), 'Cannot call endDrag while not dragging.')\n}\n","import type { Identifier } from '../interfaces.js'\n\nexport function matchesType(\n\ttargetType: Identifier | Identifier[] | null,\n\tdraggedItemType: Identifier | null,\n): boolean {\n\tif (draggedItemType === null) {\n\t\treturn targetType === null\n\t}\n\treturn Array.isArray(targetType)\n\t\t? (targetType as Identifier[]).some((t) => t === draggedItemType)\n\t\t: targetType === draggedItemType\n}\n","import { invariant } from '@react-dnd/invariant'\n\nimport type {\n\tAction,\n\tDragDropManager,\n\tDragDropMonitor,\n\tHandlerRegistry,\n\tHoverOptions,\n\tHoverPayload,\n\tIdentifier,\n} from '../../interfaces.js'\nimport { matchesType } from '../../utils/matchesType.js'\nimport { HOVER } from './types.js'\n\nexport function createHover(manager: DragDropManager) {\n\treturn function hover(\n\t\ttargetIdsArg: string[],\n\t\t{ clientOffset }: HoverOptions = {},\n\t): Action<HoverPayload> {\n\t\tverifyTargetIdsIsArray(targetIdsArg)\n\t\tconst targetIds = targetIdsArg.slice(0)\n\t\tconst monitor = manager.getMonitor()\n\t\tconst registry = manager.getRegistry()\n\t\tconst draggedItemType = monitor.getItemType()\n\t\tremoveNonMatchingTargetIds(targetIds, registry, draggedItemType)\n\t\tcheckInvariants(targetIds, monitor, registry)\n\t\thoverAllTargets(targetIds, monitor, registry)\n\n\t\treturn {\n\t\t\ttype: HOVER,\n\t\t\tpayload: {\n\t\t\t\ttargetIds,\n\t\t\t\tclientOffset: clientOffset || null,\n\t\t\t},\n\t\t}\n\t}\n}\n\nfunction verifyTargetIdsIsArray(targetIdsArg: string[]) {\n\tinvariant(Array.isArray(targetIdsArg), 'Expected targetIds to be an array.')\n}\n\nfunction checkInvariants(\n\ttargetIds: string[],\n\tmonitor: DragDropMonitor,\n\tregistry: HandlerRegistry,\n) {\n\tinvariant(monitor.isDragging(), 'Cannot call hover while not dragging.')\n\tinvariant(!monitor.didDrop(), 'Cannot call hover after drop.')\n\tfor (let i = 0; i < targetIds.length; i++) {\n\t\tconst targetId = targetIds[i] as string\n\t\tinvariant(\n\t\t\ttargetIds.lastIndexOf(targetId) === i,\n\t\t\t'Expected targetIds to be unique in the passed array.',\n\t\t)\n\n\t\tconst target = registry.getTarget(targetId)\n\t\tinvariant(target, 'Expected targetIds to be registered.')\n\t}\n}\n\nfunction removeNonMatchingTargetIds(\n\ttargetIds: string[],\n\tregistry: HandlerRegistry,\n\tdraggedItemType: Identifier | null,\n) {\n\t// Remove those targetIds that don't match the targetType.  This\n\t// fixes shallow isOver which would only be non-shallow because of\n\t// non-matching targets.\n\tfor (let i = targetIds.length - 1; i >= 0; i--) {\n\t\tconst targetId = targetIds[i] as string\n\t\tconst targetType = registry.getTargetType(targetId)\n\t\tif (!matchesType(targetType, draggedItemType)) {\n\t\t\ttargetIds.splice(i, 1)\n\t\t}\n\t}\n}\n\nfunction hoverAllTargets(\n\ttargetIds: string[],\n\tmonitor: DragDropMonitor,\n\tregistry: HandlerRegistry,\n) {\n\t// Finally call hover on all matching targets.\n\ttargetIds.forEach(function (targetId) {\n\t\tconst target = registry.getTarget(targetId)\n\t\ttarget.hover(monitor, targetId)\n\t})\n}\n","import type { DragDropManager, SentinelAction } from '../../interfaces.js'\nimport { PUBLISH_DRAG_SOURCE } from './types.js'\n\nexport function createPublishDragSource(manager: DragDropManager) {\n\treturn function publishDragSource(): SentinelAction | undefined {\n\t\tconst monitor = manager.getMonitor()\n\t\tif (monitor.isDragging()) {\n\t\t\treturn { type: PUBLISH_DRAG_SOURCE }\n\t\t}\n\t\treturn\n\t}\n}\n","import type { Action, Store } from 'redux'\n\nimport { createDragDropActions } from '../actions/dragDrop/index.js'\nimport type {\n\tActionCreator,\n\tBackend,\n\tDragDropActions,\n\tDragDropManager,\n\tDragDropMonitor,\n\tHandlerRegistry,\n} from '../interfaces.js'\nimport type { State } from '../reducers/index.js'\nimport type { DragDropMonitorImpl } from './DragDropMonitorImpl.js'\n\nexport class DragDropManagerImpl implements DragDropManager {\n\tprivate store: Store<State>\n\tprivate monitor: DragDropMonitor\n\tprivate backend: Backend | undefined\n\tprivate isSetUp = false\n\n\tpublic constructor(store: Store<State>, monitor: DragDropMonitor) {\n\t\tthis.store = store\n\t\tthis.monitor = monitor\n\t\tstore.subscribe(this.handleRefCountChange)\n\t}\n\n\tpublic receiveBackend(backend: Backend): void {\n\t\tthis.backend = backend\n\t}\n\n\tpublic getMonitor(): DragDropMonitor {\n\t\treturn this.monitor\n\t}\n\n\tpublic getBackend(): Backend {\n\t\treturn this.backend as Backend\n\t}\n\n\tpublic getRegistry(): HandlerRegistry {\n\t\treturn (this.monitor as DragDropMonitorImpl).registry\n\t}\n\n\tpublic getActions(): DragDropActions {\n\t\t/* eslint-disable-next-line @typescript-eslint/no-this-alias */\n\t\tconst manager = this\n\t\tconst { dispatch } = this.store\n\n\t\tfunction bindActionCreator(actionCreator: ActionCreator<any>) {\n\t\t\treturn (...args: any[]) => {\n\t\t\t\tconst action = actionCreator.apply(manager, args as any)\n\t\t\t\tif (typeof action !== 'undefined') {\n\t\t\t\t\tdispatch(action)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tconst actions = createDragDropActions(this)\n\n\t\treturn Object.keys(actions).reduce(\n\t\t\t(boundActions: DragDropActions, key: string) => {\n\t\t\t\tconst action: ActionCreator<any> = (actions as any)[\n\t\t\t\t\tkey\n\t\t\t\t] as ActionCreator<any>\n\t\t\t\t;(boundActions as any)[key] = bindActionCreator(action)\n\t\t\t\treturn boundActions\n\t\t\t},\n\t\t\t{} as DragDropActions,\n\t\t)\n\t}\n\n\tpublic dispatch(action: Action<any>): void {\n\t\tthis.store.dispatch(action)\n\t}\n\n\tprivate handleRefCountChange = (): void => {\n\t\tconst shouldSetUp = this.store.getState().refCount > 0\n\t\tif (this.backend) {\n\t\t\tif (shouldSetUp && !this.isSetUp) {\n\t\t\t\tthis.backend.setup()\n\t\t\t\tthis.isSetUp = true\n\t\t\t} else if (!shouldSetUp && this.isSetUp) {\n\t\t\t\tthis.backend.teardown()\n\t\t\t\tthis.isSetUp = false\n\t\t\t}\n\t\t}\n\t}\n}\n","import type { DragDropActions, DragDropManager } from '../../interfaces.js'\nimport { createBeginDrag } from './beginDrag.js'\nimport { createDrop } from './drop.js'\nimport { createEndDrag } from './endDrag.js'\nimport { createHover } from './hover.js'\nimport { createPublishDragSource } from './publishDragSource.js'\n\nexport * from './types.js'\n\nexport function createDragDropActions(\n\tmanager: DragDropManager,\n): DragDropActions {\n\treturn {\n\t\tbeginDrag: createBeginDrag(manager),\n\t\tpublishDragSource: createPublishDragSource(manager),\n\t\thover: createHover(manager),\n\t\tdrop: createDrop(manager),\n\t\tendDrag: createEndDrag(manager),\n\t}\n}\n","import type { XYCoord } from '../interfaces.js'\nimport type { State } from '../reducers/dragOffset.js'\n\n/**\n * Coordinate addition\n * @param a The first coordinate\n * @param b The second coordinate\n */\nexport function add(a: XYCoord, b: XYCoord): XYCoord {\n\treturn {\n\t\tx: a.x + b.x,\n\t\ty: a.y + b.y,\n\t}\n}\n\n/**\n * Coordinate subtraction\n * @param a The first coordinate\n * @param b The second coordinate\n */\nexport function subtract(a: XYCoord, b: XYCoord): XYCoord {\n\treturn {\n\t\tx: a.x - b.x,\n\t\ty: a.y - b.y,\n\t}\n}\n\n/**\n * Returns the cartesian distance of the drag source component's position, based on its position\n * at the time when the current drag operation has started, and the movement difference.\n *\n * Returns null if no item is being dragged.\n *\n * @param state The offset state to compute from\n */\nexport function getSourceClientOffset(state: State): XYCoord | null {\n\tconst { clientOffset, initialClientOffset, initialSourceClientOffset } = state\n\tif (!clientOffset || !initialClientOffset || !initialSourceClientOffset) {\n\t\treturn null\n\t}\n\treturn subtract(\n\t\tadd(clientOffset, initialSourceClientOffset),\n\t\tinitialClientOffset,\n\t)\n}\n\n/**\n * Determines the x,y offset between the client offset and the initial client offset\n *\n * @param state The offset state to compute from\n */\nexport function getDifferenceFromInitialOffset(state: State): XYCoord | null {\n\tconst { clientOffset, initialClientOffset } = state\n\tif (!clientOffset || !initialClientOffset) {\n\t\treturn null\n\t}\n\treturn subtract(clientOffset, initialClientOffset)\n}\n","import { intersection } from './js_utils.js'\n\nexport const NONE: string[] = []\nexport const ALL: string[] = []\n// Add these flags for debug\n;(NONE as any).__IS_NONE__ = true\n;(ALL as any).__IS_ALL__ = true\n\n/**\n * Determines if the given handler IDs are dirty or not.\n *\n * @param dirtyIds The set of dirty handler ids\n * @param handlerIds The set of handler ids to check\n */\nexport function areDirty(\n\tdirtyIds: string[],\n\thandlerIds: string[] | undefined,\n): boolean {\n\tif (dirtyIds === NONE) {\n\t\treturn false\n\t}\n\n\tif (dirtyIds === ALL || typeof handlerIds === 'undefined') {\n\t\treturn true\n\t}\n\n\tconst commonIds = intersection(handlerIds, dirtyIds)\n\treturn commonIds.length > 0\n}\n","import { invariant } from '@react-dnd/invariant'\nimport type { Store } from 'redux'\n\nimport type {\n\tDragDropMonitor,\n\tHandlerRegistry,\n\tIdentifier,\n\tListener,\n\tUnsubscribe,\n\tXYCoord,\n} from '../interfaces.js'\nimport type { State } from '../reducers/index.js'\nimport {\n\tgetDifferenceFromInitialOffset,\n\tgetSourceClientOffset,\n} from '../utils/coords.js'\nimport { areDirty } from '../utils/dirtiness.js'\nimport { matchesType } from '../utils/matchesType.js'\n\nexport class DragDropMonitorImpl implements DragDropMonitor {\n\tprivate store: Store<State>\n\tpublic readonly registry: HandlerRegistry\n\n\tpublic constructor(store: Store<State>, registry: HandlerRegistry) {\n\t\tthis.store = store\n\t\tthis.registry = registry\n\t}\n\n\tpublic subscribeToStateChange(\n\t\tlistener: Listener,\n\t\toptions: { handlerIds?: string[] } = {},\n\t): Unsubscribe {\n\t\tconst { handlerIds } = options\n\t\tinvariant(typeof listener === 'function', 'listener must be a function.')\n\t\tinvariant(\n\t\t\ttypeof handlerIds === 'undefined' || Array.isArray(handlerIds),\n\t\t\t'handlerIds, when specified, must be an array of strings.',\n\t\t)\n\n\t\tlet prevStateId = this.store.getState().stateId\n\t\tconst handleChange = () => {\n\t\t\tconst state = this.store.getState()\n\t\t\tconst currentStateId = state.stateId\n\t\t\ttry {\n\t\t\t\tconst canSkipListener =\n\t\t\t\t\tcurrentStateId === prevStateId ||\n\t\t\t\t\t(currentStateId === prevStateId + 1 &&\n\t\t\t\t\t\t!areDirty(state.dirtyHandlerIds, handlerIds))\n\n\t\t\t\tif (!canSkipListener) {\n\t\t\t\t\tlistener()\n\t\t\t\t}\n\t\t\t} finally {\n\t\t\t\tprevStateId = currentStateId\n\t\t\t}\n\t\t}\n\n\t\treturn this.store.subscribe(handleChange)\n\t}\n\n\tpublic subscribeToOffsetChange(listener: Listener): Unsubscribe {\n\t\tinvariant(typeof listener === 'function', 'listener must be a function.')\n\n\t\tlet previousState = this.store.getState().dragOffset\n\t\tconst handleChange = () => {\n\t\t\tconst nextState = this.store.getState().dragOffset\n\t\t\tif (nextState === previousState) {\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\tpreviousState = nextState\n\t\t\tlistener()\n\t\t}\n\n\t\treturn this.store.subscribe(handleChange)\n\t}\n\n\tpublic canDragSource(sourceId: string | undefined): boolean {\n\t\tif (!sourceId) {\n\t\t\treturn false\n\t\t}\n\t\tconst source = this.registry.getSource(sourceId)\n\t\tinvariant(source, `Expected to find a valid source. sourceId=${sourceId}`)\n\n\t\tif (this.isDragging()) {\n\t\t\treturn false\n\t\t}\n\n\t\treturn source.canDrag(this, sourceId)\n\t}\n\n\tpublic canDropOnTarget(targetId: string | undefined): boolean {\n\t\t// undefined on initial render\n\t\tif (!targetId) {\n\t\t\treturn false\n\t\t}\n\t\tconst target = this.registry.getTarget(targetId)\n\t\tinvariant(target, `Expected to find a valid target. targetId=${targetId}`)\n\n\t\tif (!this.isDragging() || this.didDrop()) {\n\t\t\treturn false\n\t\t}\n\n\t\tconst targetType = this.registry.getTargetType(targetId)\n\t\tconst draggedItemType = this.getItemType()\n\t\treturn (\n\t\t\tmatchesType(targetType, draggedItemType) && target.canDrop(this, targetId)\n\t\t)\n\t}\n\n\tpublic isDragging(): boolean {\n\t\treturn Boolean(this.getItemType())\n\t}\n\n\tpublic isDraggingSource(sourceId: string | undefined): boolean {\n\t\t// undefined on initial render\n\t\tif (!sourceId) {\n\t\t\treturn false\n\t\t}\n\t\tconst source = this.registry.getSource(sourceId, true)\n\t\tinvariant(source, `Expected to find a valid source. sourceId=${sourceId}`)\n\n\t\tif (!this.isDragging() || !this.isSourcePublic()) {\n\t\t\treturn false\n\t\t}\n\n\t\tconst sourceType = this.registry.getSourceType(sourceId)\n\t\tconst draggedItemType = this.getItemType()\n\t\tif (sourceType !== draggedItemType) {\n\t\t\treturn false\n\t\t}\n\n\t\treturn source.isDragging(this, sourceId)\n\t}\n\n\tpublic isOverTarget(\n\t\ttargetId: string | undefined,\n\t\toptions = { shallow: false },\n\t): boolean {\n\t\t// undefined on initial render\n\t\tif (!targetId) {\n\t\t\treturn false\n\t\t}\n\n\t\tconst { shallow } = options\n\t\tif (!this.isDragging()) {\n\t\t\treturn false\n\t\t}\n\n\t\tconst targetType = this.registry.getTargetType(targetId)\n\t\tconst draggedItemType = this.getItemType()\n\t\tif (draggedItemType && !matchesType(targetType, draggedItemType)) {\n\t\t\treturn false\n\t\t}\n\n\t\tconst targetIds = this.getTargetIds()\n\t\tif (!targetIds.length) {\n\t\t\treturn false\n\t\t}\n\n\t\tconst index = targetIds.indexOf(targetId)\n\t\tif (shallow) {\n\t\t\treturn index === targetIds.length - 1\n\t\t} else {\n\t\t\treturn index > -1\n\t\t}\n\t}\n\n\tpublic getItemType(): Identifier {\n\t\treturn this.store.getState().dragOperation.itemType as Identifier\n\t}\n\n\tpublic getItem(): any {\n\t\treturn this.store.getState().dragOperation.item\n\t}\n\n\tpublic getSourceId(): string | null {\n\t\treturn this.store.getState().dragOperation.sourceId\n\t}\n\n\tpublic getTargetIds(): string[] {\n\t\treturn this.store.getState().dragOperation.targetIds\n\t}\n\n\tpublic getDropResult(): any {\n\t\treturn this.store.getState().dragOperation.dropResult\n\t}\n\n\tpublic didDrop(): boolean {\n\t\treturn this.store.getState().dragOperation.didDrop\n\t}\n\n\tpublic isSourcePublic(): boolean {\n\t\treturn Boolean(this.store.getState().dragOperation.isSourcePublic)\n\t}\n\n\tpublic getInitialClientOffset(): XYCoord | null {\n\t\treturn this.store.getState().dragOffset.initialClientOffset\n\t}\n\n\tpublic getInitialSourceClientOffset(): XYCoord | null {\n\t\treturn this.store.getState().dragOffset.initialSourceClientOffset\n\t}\n\n\tpublic getClientOffset(): XYCoord | null {\n\t\treturn this.store.getState().dragOffset.clientOffset\n\t}\n\n\tpublic getSourceClientOffset(): XYCoord | null {\n\t\treturn getSourceClientOffset(this.store.getState().dragOffset)\n\t}\n\n\tpublic getDifferenceFromInitialOffset(): XYCoord | null {\n\t\treturn getDifferenceFromInitialOffset(this.store.getState().dragOffset)\n\t}\n}\n","// Safari 6 and 6.1 for desktop, iPad, and iPhone are the only browsers that\n// have WebKitMutationObserver but not un-prefixed MutationObserver.\n// Must use `global` or `self` instead of `window` to work in both frames and web\n// workers. `global` is a provision of Browserify, Mr, Mrs, or Mop.\n\n/* globals self */\nconst scope = typeof global !== 'undefined' ? global : self\nconst BrowserMutationObserver =\n\t(scope as any).MutationObserver || (scope as any).WebKitMutationObserver\n\nexport function makeRequestCallFromTimer(callback: () => void) {\n\treturn function requestCall() {\n\t\t// We dispatch a timeout with a specified delay of 0 for engines that\n\t\t// can reliably accommodate that request. This will usually be snapped\n\t\t// to a 4 milisecond delay, but once we're flushing, there's no delay\n\t\t// between events.\n\t\tconst timeoutHandle = setTimeout(handleTimer, 0)\n\t\t// However, since this timer gets frequently dropped in Firefox\n\t\t// workers, we enlist an interval handle that will try to fire\n\t\t// an event 20 times per second until it succeeds.\n\t\tconst intervalHandle = setInterval(handleTimer, 50)\n\n\t\tfunction handleTimer() {\n\t\t\t// Whichever timer succeeds will cancel both timers and\n\t\t\t// execute the callback.\n\t\t\tclearTimeout(timeoutHandle)\n\t\t\tclearInterval(intervalHandle)\n\t\t\tcallback()\n\t\t}\n\t}\n}\n\n// To request a high priority event, we induce a mutation observer by toggling\n// the text of a text node between \"1\" and \"-1\".\nexport function makeRequestCallFromMutationObserver(callback: () => void) {\n\tlet toggle = 1\n\tconst observer = new BrowserMutationObserver(callback)\n\tconst node = document.createTextNode('')\n\tobserver.observe(node, { characterData: true })\n\treturn function requestCall() {\n\t\ttoggle = -toggle\n\t\t;(node as any).data = toggle\n\t}\n}\n\nexport const makeRequestCall =\n\ttypeof BrowserMutationObserver === 'function'\n\t\t? // MutationObservers are desirable because they have high priority and work\n\t\t  // reliably everywhere they are implemented.\n\t\t  // They are implemented in all modern browsers.\n\t\t  //\n\t\t  // - Android 4-4.3\n\t\t  // - Chrome 26-34\n\t\t  // - Firefox 14-29\n\t\t  // - Internet Explorer 11\n\t\t  // - iPad Safari 6-7.1\n\t\t  // - iPhone Safari 7-7.1\n\t\t  // - Safari 6-7\n\t\t  makeRequestCallFromMutationObserver\n\t\t: // MessageChannels are desirable because they give direct access to the HTML\n\t\t  // task queue, are implemented in Internet Explorer 10, Safari 5.0-1, and Opera\n\t\t  // 11-12, and in web workers in many engines.\n\t\t  // Although message channels yield to any queued rendering and IO tasks, they\n\t\t  // would be better than imposing the 4ms delay of timers.\n\t\t  // However, they do not work reliably in Internet Explorer or Safari.\n\n\t\t  // Internet Explorer 10 is the only browser that has setImmediate but does\n\t\t  // not have MutationObservers.\n\t\t  // Although setImmediate yields to the browser's renderer, it would be\n\t\t  // preferrable to falling back to setTimeout since it does not have\n\t\t  // the minimum 4ms penalty.\n\t\t  // Unfortunately there appears to be a bug in Internet Explorer 10 Mobile (and\n\t\t  // Desktop to a lesser extent) that renders both setImmediate and\n\t\t  // MessageChannel useless for the purposes of ASAP.\n\t\t  // https://github.com/kriskowal/q/issues/396\n\n\t\t  // Timers are implemented universally.\n\t\t  // We fall back to timers in workers in most engines, and in foreground\n\t\t  // contexts in the following browsers.\n\t\t  // However, note that even this simple case requires nuances to operate in a\n\t\t  // broad spectrum of browsers.\n\t\t  //\n\t\t  // - Firefox 3-13\n\t\t  // - Internet Explorer 6-9\n\t\t  // - iPad Safari 4.3\n\t\t  // - Lynx 2.8.7\n\t\t  makeRequestCallFromTimer\n","// We wrap tasks with recyclable task objects.  A task object implements\n\nimport type { Task, TaskFn } from 'types'\n\n// `call`, just like a function.\nexport class RawTask implements Task {\n\tpublic task: TaskFn | null = null\n\n\tpublic constructor(\n\t\tprivate onError: (err: any) => void,\n\t\tprivate release: (t: RawTask) => void,\n\t) {}\n\n\tpublic call() {\n\t\ttry {\n\t\t\tthis.task && this.task()\n\t\t} catch (error) {\n\t\t\tthis.onError(error)\n\t\t} finally {\n\t\t\tthis.task = null\n\t\t\tthis.release(this)\n\t\t}\n\t}\n}\n","import { AsapQueue } from './AsapQueue.js'\nimport { TaskFactory } from './TaskFactory.js'\nimport type { TaskFn } from './types.js'\n\nconst asapQueue = new AsapQueue()\nconst taskFactory = new TaskFactory(asapQueue.registerPendingError)\n\n/**\n * Calls a task as soon as possible after returning, in its own event, with priority\n * over other events like animation, reflow, and repaint. An error thrown from an\n * event will not interrupt, nor even substantially slow down the processing of\n * other events, but will be rather postponed to a lower priority event.\n * @param {{call}} task A callable object, typically a function that takes no\n * arguments.\n */\nexport function asap(task: TaskFn) {\n\tasapQueue.enqueueTask(taskFactory.create(task))\n}\n","/* eslint-disable no-restricted-globals, @typescript-eslint/ban-ts-comment, @typescript-eslint/no-unused-vars, @typescript-eslint/no-non-null-assertion */\nimport { makeRequestCall, makeRequestCallFromTimer } from './makeRequestCall.js'\nimport type { Task } from './types.js'\n\nexport class AsapQueue {\n\tprivate queue: Task[] = []\n\t// We queue errors to ensure they are thrown in right order (FIFO).\n\t// Array-as-queue is good enough here, since we are just dealing with exceptions.\n\tprivate pendingErrors: any[] = []\n\t// Once a flush has been requested, no further calls to `requestFlush` are\n\t// necessary until the next `flush` completes.\n\t// @ts-ignore\n\tprivate flushing = false\n\t// `requestFlush` is an implementation-specific method that attempts to kick\n\t// off a `flush` event as quickly as possible. `flush` will attempt to exhaust\n\t// the event queue before yielding to the browser's own event loop.\n\tprivate requestFlush: () => void\n\n\tprivate requestErrorThrow: () => void\n\t// The position of the next task to execute in the task queue. This is\n\t// preserved between calls to `flush` so that it can be resumed if\n\t// a task throws an exception.\n\tprivate index = 0\n\t// If a task schedules additional tasks recursively, the task queue can grow\n\t// unbounded. To prevent memory exhaustion, the task queue will periodically\n\t// truncate already-completed tasks.\n\tprivate capacity = 1024\n\n\tpublic constructor() {\n\t\t// `requestFlush` requests that the high priority event queue be flushed as\n\t\t// soon as possible.\n\t\t// This is useful to prevent an error thrown in a task from stalling the event\n\t\t// queue if the exception handled by Node.js’s\n\t\t// `process.on(\"uncaughtException\")` or by a domain.\n\n\t\t// `requestFlush` is implemented using a strategy based on data collected from\n\t\t// every available SauceLabs Selenium web driver worker at time of writing.\n\t\t// https://docs.google.com/spreadsheets/d/1mG-5UYGup5qxGdEMWkhP6BWCz053NUb2E1QoUTU16uA/edit#gid=783724593\n\t\tthis.requestFlush = makeRequestCall(this.flush)\n\t\tthis.requestErrorThrow = makeRequestCallFromTimer(() => {\n\t\t\t// Throw first error\n\t\t\tif (this.pendingErrors.length) {\n\t\t\t\tthrow this.pendingErrors.shift()\n\t\t\t}\n\t\t})\n\t}\n\n\t// Use the fastest means possible to execute a task in its own turn, with\n\t// priority over other events including IO, animation, reflow, and redraw\n\t// events in browsers.\n\t//\n\t// An exception thrown by a task will permanently interrupt the processing of\n\t// subsequent tasks. The higher level `asap` function ensures that if an\n\t// exception is thrown by a task, that the task queue will continue flushing as\n\t// soon as possible, but if you use `rawAsap` directly, you are responsible to\n\t// either ensure that no exceptions are thrown from your task, or to manually\n\t// call `rawAsap.requestFlush` if an exception is thrown.\n\tpublic enqueueTask(task: Task): void {\n\t\tconst { queue: q, requestFlush } = this\n\t\tif (!q.length) {\n\t\t\trequestFlush()\n\t\t\tthis.flushing = true\n\t\t}\n\t\t// Equivalent to push, but avoids a function call.\n\t\tq[q.length] = task\n\t}\n\n\t// The flush function processes all tasks that have been scheduled with\n\t// `rawAsap` unless and until one of those tasks throws an exception.\n\t// If a task throws an exception, `flush` ensures that its state will remain\n\t// consistent and will resume where it left off when called again.\n\t// However, `flush` does not make any arrangements to be called again if an\n\t// exception is thrown.\n\tprivate flush = () => {\n\t\tconst { queue: q } = this\n\t\twhile (this.index < q.length) {\n\t\t\tconst currentIndex = this.index\n\t\t\t// Advance the index before calling the task. This ensures that we will\n\t\t\t// begin flushing on the next task the task throws an error.\n\t\t\tthis.index++\n\t\t\tq[currentIndex]!.call()\n\t\t\t// Prevent leaking memory for long chains of recursive calls to `asap`.\n\t\t\t// If we call `asap` within tasks scheduled by `asap`, the queue will\n\t\t\t// grow, but to avoid an O(n) walk for every task we execute, we don't\n\t\t\t// shift tasks off the queue after they have been executed.\n\t\t\t// Instead, we periodically shift 1024 tasks off the queue.\n\t\t\tif (this.index > this.capacity) {\n\t\t\t\t// Manually shift all values starting at the index back to the\n\t\t\t\t// beginning of the queue.\n\t\t\t\tfor (\n\t\t\t\t\tlet scan = 0, newLength = q.length - this.index;\n\t\t\t\t\tscan < newLength;\n\t\t\t\t\tscan++\n\t\t\t\t) {\n\t\t\t\t\tq[scan] = q[scan + this.index]!\n\t\t\t\t}\n\t\t\t\tq.length -= this.index\n\t\t\t\tthis.index = 0\n\t\t\t}\n\t\t}\n\t\tq.length = 0\n\t\tthis.index = 0\n\t\tthis.flushing = false\n\t}\n\n\t// In a web browser, exceptions are not fatal. However, to avoid\n\t// slowing down the queue of pending tasks, we rethrow the error in a\n\t// lower priority turn.\n\tpublic registerPendingError = (err: any) => {\n\t\tthis.pendingErrors.push(err)\n\t\tthis.requestErrorThrow()\n\t}\n}\n\n// The message channel technique was discovered by Malte Ubl and was the\n// original foundation for this library.\n// http://www.nonblocking.io/2011/06/windownexttick.html\n\n// Safari 6.0.5 (at least) intermittently fails to create message ports on a\n// page's first load. Thankfully, this version of Safari supports\n// MutationObservers, so we don't need to fall back in that case.\n\n// function makeRequestCallFromMessageChannel(callback) {\n//     var channel = new MessageChannel();\n//     channel.port1.onmessage = callback;\n//     return function requestCall() {\n//         channel.port2.postMessage(0);\n//     };\n// }\n\n// For reasons explained above, we are also unable to use `setImmediate`\n// under any circumstances.\n// Even if we were, there is another bug in Internet Explorer 10.\n// It is not sufficient to assign `setImmediate` to `requestFlush` because\n// `setImmediate` must be called *by name* and therefore must be wrapped in a\n// closure.\n// Never forget.\n\n// function makeRequestCallFromSetImmediate(callback) {\n//     return function requestCall() {\n//         setImmediate(callback);\n//     };\n// }\n\n// Safari 6.0 has a problem where timers will get lost while the user is\n// scrolling. This problem does not impact ASAP because Safari 6.0 supports\n// mutation observers, so that implementation is used instead.\n// However, if we ever elect to use timers in Safari, the prevalent work-around\n// is to add a scroll event listener that calls for a flush.\n\n// `setTimeout` does not call the passed callback if the delay is less than\n// approximately 7 in web workers in Firefox 8 through 18, and sometimes not\n// even then.\n\n// This is for `asap.js` only.\n// Its name will be periodically randomized to break any code that depends on\n// // its existence.\n// rawAsap.makeRequestCallFromTimer = makeRequestCallFromTimer\n\n// ASAP was originally a nextTick shim included in Q. This was factored out\n// into this ASAP package. It was later adapted to RSVP which made further\n// amendments. These decisions, particularly to marginalize MessageChannel and\n// to capture the MutationObserver implementation in a closure, were integrated\n// back into ASAP proper.\n// https://github.com/tildeio/rsvp.js/blob/cddf7232546a9cf858524b75cde6f9edf72620a7/lib/rsvp/asap.js\n","import { RawTask } from './RawTask.js'\nimport type { Task } from './types.js'\n\nexport class TaskFactory {\n\tprivate freeTasks: RawTask[] = []\n\n\tpublic constructor(private onError: (err: any) => void) {}\n\n\tpublic create(task: () => void): Task {\n\t\tconst tasks = this.freeTasks\n\t\tconst t = tasks.length\n\t\t\t? (tasks.pop() as RawTask)\n\t\t\t: new RawTask(this.onError, (t) => (tasks[tasks.length] = t))\n\t\tt.task = task\n\t\treturn t\n\t}\n}\n","import type { Action, SourceIdPayload, TargetIdPayload } from '../interfaces.js'\n\nexport const ADD_SOURCE = 'dnd-core/ADD_SOURCE'\nexport const ADD_TARGET = 'dnd-core/ADD_TARGET'\nexport const REMOVE_SOURCE = 'dnd-core/REMOVE_SOURCE'\nexport const REMOVE_TARGET = 'dnd-core/REMOVE_TARGET'\n\nexport function addSource(sourceId: string): Action<SourceIdPayload> {\n\treturn {\n\t\ttype: ADD_SOURCE,\n\t\tpayload: {\n\t\t\tsourceId,\n\t\t},\n\t}\n}\n\nexport function addTarget(targetId: string): Action<TargetIdPayload> {\n\treturn {\n\t\ttype: ADD_TARGET,\n\t\tpayload: {\n\t\t\ttargetId,\n\t\t},\n\t}\n}\n\nexport function removeSource(sourceId: string): Action<SourceIdPayload> {\n\treturn {\n\t\ttype: REMOVE_SOURCE,\n\t\tpayload: {\n\t\t\tsourceId,\n\t\t},\n\t}\n}\n\nexport function removeTarget(targetId: string): Action<TargetIdPayload> {\n\treturn {\n\t\ttype: REMOVE_TARGET,\n\t\tpayload: {\n\t\t\ttargetId,\n\t\t},\n\t}\n}\n","import { invariant } from '@react-dnd/invariant'\n\nimport type { DragSource, DropTarget, Identifier } from './interfaces.js'\n\nexport function validateSourceContract(source: DragSource): void {\n\tinvariant(\n\t\ttypeof source.canDrag === 'function',\n\t\t'Expected canDrag to be a function.',\n\t)\n\tinvariant(\n\t\ttypeof source.beginDrag === 'function',\n\t\t'Expected beginDrag to be a function.',\n\t)\n\tinvariant(\n\t\ttypeof source.endDrag === 'function',\n\t\t'Expected endDrag to be a function.',\n\t)\n}\n\nexport function validateTargetContract(target: DropTarget): void {\n\tinvariant(\n\t\ttypeof target.canDrop === 'function',\n\t\t'Expected canDrop to be a function.',\n\t)\n\tinvariant(\n\t\ttypeof target.hover === 'function',\n\t\t'Expected hover to be a function.',\n\t)\n\tinvariant(\n\t\ttypeof target.drop === 'function',\n\t\t'Expected beginDrag to be a function.',\n\t)\n}\n\nexport function validateType(\n\ttype: Identifier | Identifier[],\n\tallowArray?: boolean,\n): void {\n\tif (allowArray && Array.isArray(type)) {\n\t\ttype.forEach((t) => validateType(t, false))\n\t\treturn\n\t}\n\n\tinvariant(\n\t\ttypeof type === 'string' || typeof type === 'symbol',\n\t\tallowArray\n\t\t\t? 'Type can only be a string, a symbol, or an array of either.'\n\t\t\t: 'Type can only be a string or a symbol.',\n\t)\n}\n","export type Identifier = string | symbol\nexport type SourceType = Identifier\nexport type TargetType = Identifier | Identifier[]\nexport type Unsubscribe = () => void\nexport type Listener = () => void\n\nexport interface XYCoord {\n\tx: number\n\ty: number\n}\n\nexport enum HandlerRole {\n\tSOURCE = 'SOURCE',\n\tTARGET = 'TARGET',\n}\n\nexport interface Backend {\n\tsetup(): void\n\tteardown(): void\n\tconnectDragSource(sourceId: any, node?: any, options?: any): Unsubscribe\n\tconnectDragPreview(sourceId: any, node?: any, options?: any): Unsubscribe\n\tconnectDropTarget(targetId: any, node?: any, options?: any): Unsubscribe\n\tprofile(): Record<string, number>\n}\n\nexport interface DragDropMonitor {\n\tsubscribeToStateChange(\n\t\tlistener: Listener,\n\t\toptions?: {\n\t\t\thandlerIds?: Identifier[]\n\t\t},\n\t): Unsubscribe\n\tsubscribeToOffsetChange(listener: Listener): Unsubscribe\n\tcanDragSource(sourceId: Identifier | undefined): boolean\n\tcanDropOnTarget(targetId: Identifier | undefined): boolean\n\n\t/**\n\t * Returns true if a drag operation is in progress, and either the owner initiated the drag, or its isDragging()\n\t * is defined and returns true.\n\t */\n\tisDragging(): boolean\n\tisDraggingSource(sourceId: Identifier | undefined): boolean\n\tisOverTarget(\n\t\ttargetId: Identifier | undefined,\n\t\toptions?: {\n\t\t\tshallow?: boolean\n\t\t},\n\t): boolean\n\n\t/**\n\t * Returns a string or a symbol identifying the type of the current dragged item. Returns null if no item is being dragged.\n\t */\n\tgetItemType(): Identifier | null\n\n\t/**\n\t * Returns a plain object representing the currently dragged item. Every drag source must specify it by returning an object\n\t * from its beginDrag() method. Returns null if no item is being dragged.\n\t */\n\tgetItem(): any\n\tgetSourceId(): Identifier | null\n\tgetTargetIds(): Identifier[]\n\t/**\n\t * Returns a plain object representing the last recorded drop result. The drop targets may optionally specify it by returning an\n\t * object from their drop() methods. When a chain of drop() is dispatched for the nested targets, bottom up, any parent that\n\t * explicitly returns its own result from drop() overrides the child drop result previously set by the child. Returns null if\n\t * called outside endDrag().\n\t */\n\tgetDropResult(): any\n\t/**\n\t * Returns true if some drop target has handled the drop event, false otherwise. Even if a target did not return a drop result,\n\t * didDrop() returns true. Use it inside endDrag() to test whether any drop target has handled the drop. Returns false if called\n\t * outside endDrag().\n\t */\n\tdidDrop(): boolean\n\tisSourcePublic(): boolean | null\n\t/**\n\t * Returns the { x, y } client offset of the pointer at the time when the current drag operation has started.\n\t * Returns null if no item is being dragged.\n\t */\n\tgetInitialClientOffset(): XYCoord | null\n\t/**\n\t * Returns the { x, y } client offset of the drag source component's root DOM node at the time when the current drag\n\t * operation has started. Returns null if no item is being dragged.\n\t */\n\tgetInitialSourceClientOffset(): XYCoord | null\n\n\t/**\n\t * Returns the last recorded { x, y } client offset of the pointer while a drag operation is in progress.\n\t * Returns null if no item is being dragged.\n\t */\n\tgetClientOffset(): XYCoord | null\n\n\t/**\n\t * Returns the projected { x, y } client offset of the drag source component's root DOM node, based on its position at the time\n\t * when the current drag operation has started, and the movement difference. Returns null if no item is being dragged.\n\t */\n\tgetSourceClientOffset(): XYCoord | null\n\n\t/**\n\t * Returns the { x, y } difference between the last recorded client offset of the pointer and the client offset when the current\n\t * drag operation has started. Returns null if no item is being dragged.\n\t */\n\tgetDifferenceFromInitialOffset(): XYCoord | null\n}\n\nexport interface HandlerRegistry {\n\taddSource(type: SourceType, source: DragSource): Identifier\n\taddTarget(type: TargetType, target: DropTarget): Identifier\n\tcontainsHandler(handler: DragSource | DropTarget): boolean\n\tgetSource(sourceId: Identifier, includePinned?: boolean): DragSource\n\tgetSourceType(sourceId: Identifier): SourceType\n\tgetTargetType(targetId: Identifier): TargetType\n\tgetTarget(targetId: Identifier): DropTarget\n\tisSourceId(handlerId: Identifier): boolean\n\tisTargetId(handlerId: Identifier): boolean\n\tremoveSource(sourceId: Identifier): void\n\tremoveTarget(targetId: Identifier): void\n\tpinSource(sourceId: Identifier): void\n\tunpinSource(): void\n}\n\nexport interface Action<Payload> {\n\ttype: Identifier\n\tpayload: Payload\n}\nexport interface SentinelAction {\n\ttype: Identifier\n}\n\nexport type ActionCreator<Payload> = (args: any[]) => Action<Payload>\n\nexport interface BeginDragOptions {\n\tpublishSource?: boolean\n\tclientOffset?: XYCoord\n\tgetSourceClientOffset?: (sourceId: Identifier | undefined) => XYCoord\n}\n\nexport interface InitCoordsPayload {\n\tclientOffset: XYCoord | null\n\tsourceClientOffset: XYCoord | null\n}\n\nexport interface BeginDragPayload {\n\titemType: Identifier\n\titem: any\n\tsourceId: Identifier\n\tclientOffset: XYCoord | null\n\tsourceClientOffset: XYCoord | null\n\tisSourcePublic: boolean\n}\n\nexport interface HoverPayload {\n\ttargetIds: Identifier[]\n\tclientOffset: XYCoord | null\n}\n\nexport interface HoverOptions {\n\tclientOffset?: XYCoord\n}\n\nexport interface DropPayload {\n\tdropResult: any\n}\n\nexport interface TargetIdPayload {\n\ttargetId: Identifier\n}\n\nexport interface SourceIdPayload {\n\tsourceId: Identifier\n}\n\nexport interface DragDropActions {\n\tbeginDrag(\n\t\tsourceIds?: Identifier[],\n\t\toptions?: any,\n\t): Action<BeginDragPayload> | undefined\n\tpublishDragSource(): SentinelAction | undefined\n\thover(targetIds: Identifier[], options?: any): Action<HoverPayload>\n\tdrop(options?: any): void\n\tendDrag(): SentinelAction\n}\n\nexport interface DragDropManager {\n\tgetMonitor(): DragDropMonitor\n\tgetBackend(): Backend\n\tgetRegistry(): HandlerRegistry\n\tgetActions(): DragDropActions\n\tdispatch(action: any): void\n}\n\nexport type BackendFactory = (\n\tmanager: DragDropManager,\n\tglobalContext?: any,\n\tconfiguration?: any,\n) => Backend\n\nexport interface DragSource {\n\tbeginDrag(monitor: DragDropMonitor, targetId: Identifier): void\n\tendDrag(monitor: DragDropMonitor, targetId: Identifier): void\n\tcanDrag(monitor: DragDropMonitor, targetId: Identifier): boolean\n\tisDragging(monitor: DragDropMonitor, targetId: Identifier): boolean\n}\n\nexport interface DropTarget {\n\tcanDrop(monitor: DragDropMonitor, targetId: Identifier): boolean\n\thover(monitor: DragDropMonitor, targetId: Identifier): void\n\tdrop(monitor: DragDropMonitor, targetId: Identifier): any\n}\n","let nextUniqueId = 0\n\nexport function getNextUniqueId(): number {\n\treturn nextUniqueId++\n}\n","import { asap } from '@react-dnd/asap'\nimport { invariant } from '@react-dnd/invariant'\nimport type { Store } from 'redux'\n\nimport {\n\taddSource,\n\taddTarget,\n\tremoveSource,\n\tremoveTarget,\n} from '../actions/registry.js'\nimport {\n\tvalidateSourceContract,\n\tvalidateTargetContract,\n\tvalidateType,\n} from '../contracts.js'\nimport type {\n\tDragSource,\n\tDropTarget,\n\tHandlerRegistry,\n\tIdentifier,\n\tSourceType,\n\tTargetType,\n} from '../interfaces.js'\nimport { HandlerRole } from '../interfaces.js'\nimport type { State } from '../reducers/index.js'\nimport { getNextUniqueId } from '../utils/getNextUniqueId.js'\n\nfunction getNextHandlerId(role: HandlerRole): string {\n\tconst id = getNextUniqueId().toString()\n\tswitch (role) {\n\t\tcase HandlerRole.SOURCE:\n\t\t\treturn `S${id}`\n\t\tcase HandlerRole.TARGET:\n\t\t\treturn `T${id}`\n\t\tdefault:\n\t\t\tthrow new Error(`Unknown Handler Role: ${role}`)\n\t}\n}\n\nfunction parseRoleFromHandlerId(handlerId: string) {\n\tswitch (handlerId[0]) {\n\t\tcase 'S':\n\t\t\treturn HandlerRole.SOURCE\n\t\tcase 'T':\n\t\t\treturn HandlerRole.TARGET\n\t\tdefault:\n\t\t\tthrow new Error(`Cannot parse handler ID: ${handlerId}`)\n\t}\n}\n\nfunction mapContainsValue<T>(map: Map<string, T>, searchValue: T) {\n\tconst entries = map.entries()\n\tlet isDone = false\n\tdo {\n\t\tconst {\n\t\t\tdone,\n\t\t\tvalue: [, value],\n\t\t} = entries.next()\n\t\tif (value === searchValue) {\n\t\t\treturn true\n\t\t}\n\t\tisDone = !!done\n\t} while (!isDone)\n\treturn false\n}\n\nexport class HandlerRegistryImpl implements HandlerRegistry {\n\tprivate types: Map<string, SourceType | TargetType> = new Map()\n\tprivate dragSources: Map<string, DragSource> = new Map()\n\tprivate dropTargets: Map<string, DropTarget> = new Map()\n\tprivate pinnedSourceId: string | null = null\n\tprivate pinnedSource: any = null\n\tprivate store: Store<State>\n\n\tpublic constructor(store: Store<State>) {\n\t\tthis.store = store\n\t}\n\n\tpublic addSource(type: SourceType, source: DragSource): string {\n\t\tvalidateType(type)\n\t\tvalidateSourceContract(source)\n\n\t\tconst sourceId = this.addHandler(HandlerRole.SOURCE, type, source)\n\t\tthis.store.dispatch(addSource(sourceId))\n\t\treturn sourceId\n\t}\n\n\tpublic addTarget(type: TargetType, target: DropTarget): string {\n\t\tvalidateType(type, true)\n\t\tvalidateTargetContract(target)\n\n\t\tconst targetId = this.addHandler(HandlerRole.TARGET, type, target)\n\t\tthis.store.dispatch(addTarget(targetId))\n\t\treturn targetId\n\t}\n\n\tpublic containsHandler(handler: DragSource | DropTarget): boolean {\n\t\treturn (\n\t\t\tmapContainsValue(this.dragSources, handler) ||\n\t\t\tmapContainsValue(this.dropTargets, handler)\n\t\t)\n\t}\n\n\tpublic getSource(sourceId: string, includePinned = false): DragSource {\n\t\tinvariant(this.isSourceId(sourceId), 'Expected a valid source ID.')\n\t\tconst isPinned = includePinned && sourceId === this.pinnedSourceId\n\t\tconst source = isPinned ? this.pinnedSource : this.dragSources.get(sourceId)\n\t\treturn source\n\t}\n\n\tpublic getTarget(targetId: string): DropTarget {\n\t\tinvariant(this.isTargetId(targetId), 'Expected a valid target ID.')\n\t\treturn this.dropTargets.get(targetId) as DropTarget\n\t}\n\n\tpublic getSourceType(sourceId: string): Identifier {\n\t\tinvariant(this.isSourceId(sourceId), 'Expected a valid source ID.')\n\t\treturn this.types.get(sourceId) as Identifier\n\t}\n\n\tpublic getTargetType(targetId: string): Identifier | Identifier[] {\n\t\tinvariant(this.isTargetId(targetId), 'Expected a valid target ID.')\n\t\treturn this.types.get(targetId) as Identifier | Identifier[]\n\t}\n\n\tpublic isSourceId(handlerId: string): boolean {\n\t\tconst role = parseRoleFromHandlerId(handlerId)\n\t\treturn role === HandlerRole.SOURCE\n\t}\n\n\tpublic isTargetId(handlerId: string): boolean {\n\t\tconst role = parseRoleFromHandlerId(handlerId)\n\t\treturn role === HandlerRole.TARGET\n\t}\n\n\tpublic removeSource(sourceId: string): void {\n\t\tinvariant(this.getSource(sourceId), 'Expected an existing source.')\n\t\tthis.store.dispatch(removeSource(sourceId))\n\t\tasap(() => {\n\t\t\tthis.dragSources.delete(sourceId)\n\t\t\tthis.types.delete(sourceId)\n\t\t})\n\t}\n\n\tpublic removeTarget(targetId: string): void {\n\t\tinvariant(this.getTarget(targetId), 'Expected an existing target.')\n\t\tthis.store.dispatch(removeTarget(targetId))\n\t\tthis.dropTargets.delete(targetId)\n\t\tthis.types.delete(targetId)\n\t}\n\n\tpublic pinSource(sourceId: string): void {\n\t\tconst source = this.getSource(sourceId)\n\t\tinvariant(source, 'Expected an existing source.')\n\n\t\tthis.pinnedSourceId = sourceId\n\t\tthis.pinnedSource = source\n\t}\n\n\tpublic unpinSource(): void {\n\t\tinvariant(this.pinnedSource, 'No source is pinned at the time.')\n\n\t\tthis.pinnedSourceId = null\n\t\tthis.pinnedSource = null\n\t}\n\n\tprivate addHandler(\n\t\trole: HandlerRole,\n\t\ttype: SourceType | TargetType,\n\t\thandler: DragSource | DropTarget,\n\t): string {\n\t\tconst id = getNextHandlerId(role)\n\t\tthis.types.set(id, type)\n\t\tif (role === HandlerRole.SOURCE) {\n\t\t\tthis.dragSources.set(id, handler as DragSource)\n\t\t} else if (role === HandlerRole.TARGET) {\n\t\t\tthis.dropTargets.set(id, handler as DropTarget)\n\t\t}\n\t\treturn id\n\t}\n}\n","import type { XYCoord } from '../interfaces.js'\n\nexport type EqualityCheck<T> = (a: T, b: T) => boolean\nexport const strictEquality = <T>(a: T, b: T): boolean => a === b\n\n/**\n * Determine if two cartesian coordinate offsets are equal\n * @param offsetA\n * @param offsetB\n */\nexport function areCoordsEqual(\n\toffsetA: XYCoord | null | undefined,\n\toffsetB: XYCoord | null | undefined,\n): boolean {\n\tif (!offsetA && !offsetB) {\n\t\treturn true\n\t} else if (!offsetA || !offsetB) {\n\t\treturn false\n\t} else {\n\t\treturn offsetA.x === offsetB.x && offsetA.y === offsetB.y\n\t}\n}\n\n/**\n * Determines if two arrays of items are equal\n * @param a The first array of items\n * @param b The second array of items\n */\nexport function areArraysEqual<T>(\n\ta: T[],\n\tb: T[],\n\tisEqual: EqualityCheck<T> = strictEquality,\n): boolean {\n\tif (a.length !== b.length) {\n\t\treturn false\n\t}\n\tfor (let i = 0; i < a.length; ++i) {\n\t\tif (!isEqual(a[i] as T, b[i] as T)) {\n\t\t\treturn false\n\t\t}\n\t}\n\treturn true\n}\n","import {\n\tBEGIN_DRAG,\n\tDROP,\n\tEND_DRAG,\n\tHOVER,\n\tPUBLISH_DRAG_SOURCE,\n} from '../actions/dragDrop/index.js'\nimport {\n\tADD_SOURCE,\n\tADD_TARGET,\n\tREMOVE_SOURCE,\n\tREMOVE_TARGET,\n} from '../actions/registry.js'\nimport type { Action } from '../interfaces.js'\nimport { ALL, NONE } from '../utils/dirtiness.js'\nimport { areArraysEqual } from '../utils/equality.js'\nimport { xor } from '../utils/js_utils.js'\n\nexport type State = string[]\n\nexport interface DirtyHandlerIdPayload {\n\ttargetIds: string[]\n\tprevTargetIds: string[]\n}\n\nexport function reduce(\n\t// eslint-disable-next-line @typescript-eslint/no-unused-vars\n\t_state: State = NONE,\n\taction: Action<DirtyHandlerIdPayload>,\n): State {\n\tswitch (action.type) {\n\t\tcase HOVER:\n\t\t\tbreak\n\t\tcase ADD_SOURCE:\n\t\tcase ADD_TARGET:\n\t\tcase REMOVE_TARGET:\n\t\tcase REMOVE_SOURCE:\n\t\t\treturn NONE\n\t\tcase BEGIN_DRAG:\n\t\tcase PUBLISH_DRAG_SOURCE:\n\t\tcase END_DRAG:\n\t\tcase DROP:\n\t\tdefault:\n\t\t\treturn ALL\n\t}\n\n\tconst { targetIds = [], prevTargetIds = [] } = action.payload\n\tconst result = xor(targetIds, prevTargetIds)\n\tconst didChange =\n\t\tresult.length > 0 || !areArraysEqual(targetIds, prevTargetIds)\n\n\tif (!didChange) {\n\t\treturn NONE\n\t}\n\n\t// Check the target ids at the innermost position. If they are valid, add them\n\t// to the result\n\tconst prevInnermostTargetId = prevTargetIds[prevTargetIds.length - 1]\n\tconst innermostTargetId = targetIds[targetIds.length - 1]\n\tif (prevInnermostTargetId !== innermostTargetId) {\n\t\tif (prevInnermostTargetId) {\n\t\t\tresult.push(prevInnermostTargetId)\n\t\t}\n\t\tif (innermostTargetId) {\n\t\t\tresult.push(innermostTargetId)\n\t\t}\n\t}\n\n\treturn result\n}\n","import {\n\tBEGIN_DRAG,\n\tDROP,\n\tEND_DRAG,\n\tHOVER,\n\tINIT_COORDS,\n} from '../actions/dragDrop/index.js'\nimport type { Action, XYCoord } from '../interfaces.js'\nimport { areCoordsEqual } from '../utils/equality.js'\n\nexport interface State {\n\tinitialSourceClientOffset: XYCoord | null\n\tinitialClientOffset: XYCoord | null\n\tclientOffset: XYCoord | null\n}\n\nconst initialState: State = {\n\tinitialSourceClientOffset: null,\n\tinitialClientOffset: null,\n\tclientOffset: null,\n}\n\nexport function reduce(\n\tstate: State = initialState,\n\taction: Action<{\n\t\tsourceClientOffset: XYCoord\n\t\tclientOffset: XYCoord\n\t}>,\n): State {\n\tconst { payload } = action\n\tswitch (action.type) {\n\t\tcase INIT_COORDS:\n\t\tcase BEGIN_DRAG:\n\t\t\treturn {\n\t\t\t\tinitialSourceClientOffset: payload.sourceClientOffset,\n\t\t\t\tinitialClientOffset: payload.clientOffset,\n\t\t\t\tclientOffset: payload.clientOffset,\n\t\t\t}\n\t\tcase HOVER:\n\t\t\tif (areCoordsEqual(state.clientOffset, payload.clientOffset)) {\n\t\t\t\treturn state\n\t\t\t}\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tclientOffset: payload.clientOffset,\n\t\t\t}\n\t\tcase END_DRAG:\n\t\tcase DROP:\n\t\t\treturn initialState\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n","import {\n\tBEGIN_DRAG,\n\tDROP,\n\tEND_DRAG,\n\tHOVER,\n\tPUBLISH_DRAG_SOURCE,\n} from '../actions/dragDrop/index.js'\nimport { REMOVE_TARGET } from '../actions/registry.js'\nimport type { Action, Identifier } from '../interfaces.js'\nimport { without } from '../utils/js_utils.js'\n\nexport interface State {\n\titemType: Identifier | Identifier[] | null\n\titem: any\n\tsourceId: string | null\n\ttargetIds: string[]\n\tdropResult: any\n\tdidDrop: boolean\n\tisSourcePublic: boolean | null\n}\n\nconst initialState: State = {\n\titemType: null,\n\titem: null,\n\tsourceId: null,\n\ttargetIds: [],\n\tdropResult: null,\n\tdidDrop: false,\n\tisSourcePublic: null,\n}\n\nexport function reduce(\n\tstate: State = initialState,\n\taction: Action<{\n\t\titemType: Identifier | Identifier[]\n\t\titem: any\n\t\tsourceId: string\n\t\ttargetId: string\n\t\ttargetIds: string[]\n\t\tisSourcePublic: boolean\n\t\tdropResult: any\n\t}>,\n): State {\n\tconst { payload } = action\n\tswitch (action.type) {\n\t\tcase BEGIN_DRAG:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\titemType: payload.itemType,\n\t\t\t\titem: payload.item,\n\t\t\t\tsourceId: payload.sourceId,\n\t\t\t\tisSourcePublic: payload.isSourcePublic,\n\t\t\t\tdropResult: null,\n\t\t\t\tdidDrop: false,\n\t\t\t}\n\t\tcase PUBLISH_DRAG_SOURCE:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tisSourcePublic: true,\n\t\t\t}\n\t\tcase HOVER:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\ttargetIds: payload.targetIds,\n\t\t\t}\n\t\tcase REMOVE_TARGET:\n\t\t\tif (state.targetIds.indexOf(payload.targetId) === -1) {\n\t\t\t\treturn state\n\t\t\t}\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\ttargetIds: without(state.targetIds, payload.targetId),\n\t\t\t}\n\t\tcase DROP:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tdropResult: payload.dropResult,\n\t\t\t\tdidDrop: true,\n\t\t\t\ttargetIds: [],\n\t\t\t}\n\t\tcase END_DRAG:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\titemType: null,\n\t\t\t\titem: null,\n\t\t\t\tsourceId: null,\n\t\t\t\tdropResult: null,\n\t\t\t\tdidDrop: false,\n\t\t\t\tisSourcePublic: null,\n\t\t\t\ttargetIds: [],\n\t\t\t}\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n","import {\n\tADD_SOURCE,\n\tADD_TARGET,\n\tREMOVE_SOURCE,\n\tREMOVE_TARGET,\n} from '../actions/registry.js'\nimport type { Action } from '../interfaces.js'\n\nexport type State = number\n\nexport function reduce(state: State = 0, action: Action<any>): State {\n\tswitch (action.type) {\n\t\tcase ADD_SOURCE:\n\t\tcase ADD_TARGET:\n\t\t\treturn state + 1\n\t\tcase REMOVE_SOURCE:\n\t\tcase REMOVE_TARGET:\n\t\t\treturn state - 1\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n","export type State = number\n\nexport function reduce(state: State = 0): State {\n\treturn state + 1\n}\n","import type { Action } from '../interfaces.js'\nimport { get } from '../utils/js_utils.js'\nimport type { State as DirtyHandlerIdsState } from './dirtyHandlerIds.js'\nimport { reduce as dirtyHandlerIds } from './dirtyHandlerIds.js'\nimport type { State as DragOffsetState } from './dragOffset.js'\nimport { reduce as dragOffset } from './dragOffset.js'\nimport type { State as DragOperationState } from './dragOperation.js'\nimport { reduce as dragOperation } from './dragOperation.js'\nimport type { State as RefCountState } from './refCount.js'\nimport { reduce as refCount } from './refCount.js'\nimport type { State as StateIdState } from './stateId.js'\nimport { reduce as stateId } from './stateId.js'\n\nexport interface State {\n\tdirtyHandlerIds: DirtyHandlerIdsState\n\tdragOffset: DragOffsetState\n\trefCount: RefCountState\n\tdragOperation: DragOperationState\n\tstateId: StateIdState\n}\n\nexport function reduce(state: State = {} as State, action: Action<any>): State {\n\treturn {\n\t\tdirtyHandlerIds: dirtyHandlerIds(state.dirtyHandlerIds, {\n\t\t\ttype: action.type,\n\t\t\tpayload: {\n\t\t\t\t...action.payload,\n\t\t\t\tprevTargetIds: get<string[]>(state, 'dragOperation.targetIds', []),\n\t\t\t},\n\t\t}),\n\t\tdragOffset: dragOffset(state.dragOffset, action),\n\t\trefCount: refCount(state.refCount, action),\n\t\tdragOperation: dragOperation(state.dragOperation, action),\n\t\tstateId: stateId(state.stateId),\n\t}\n}\n","import type { Store } from 'redux'\nimport { createStore } from 'redux'\n\nimport { DragDropManagerImpl } from './classes/DragDropManagerImpl.js'\nimport { DragDropMonitorImpl } from './classes/DragDropMonitorImpl.js'\nimport { HandlerRegistryImpl } from './classes/HandlerRegistryImpl.js'\nimport type { BackendFactory, DragDropManager } from './interfaces.js'\nimport type { State } from './reducers/index.js'\nimport { reduce } from './reducers/index.js'\n\nexport function createDragDropManager(\n\tbackendFactory: BackendFactory,\n\tglobalContext: unknown = undefined,\n\tbackendOptions: unknown = {},\n\tdebugMode = false,\n): DragDropManager {\n\tconst store = makeStoreInstance(debugMode)\n\tconst monitor = new DragDropMonitorImpl(store, new HandlerRegistryImpl(store))\n\tconst manager = new DragDropManagerImpl(store, monitor)\n\tconst backend = backendFactory(manager, globalContext, backendOptions)\n\tmanager.receiveBackend(backend)\n\treturn manager\n}\n\nfunction makeStoreInstance(debugMode: boolean): Store<State> {\n\t// TODO: if we ever make a react-native version of this,\n\t// we'll need to consider how to pull off dev-tooling\n\tconst reduxDevTools =\n\t\ttypeof window !== 'undefined' &&\n\t\t(window as any).__REDUX_DEVTOOLS_EXTENSION__\n\treturn createStore(\n\t\treduce,\n\t\tdebugMode &&\n\t\t\treduxDevTools &&\n\t\t\treduxDevTools({\n\t\t\t\tname: 'dnd-core',\n\t\t\t\tinstanceId: 'dnd-core',\n\t\t\t}),\n\t)\n}\n","import type { BackendFactory, DragDropManager } from 'dnd-core'\nimport { createDragDropManager } from 'dnd-core'\nimport type { FC, ReactNode } from 'react'\nimport { memo, useEffect } from 'react'\n\nimport { DndContext } from './DndContext.js'\n\nexport type DndProviderProps<BackendContext, BackendOptions> =\n\t| {\n\t\t\tchildren?: ReactNode\n\t\t\tmanager: DragDropManager\n\t  }\n\t| {\n\t\t\tbackend: BackendFactory\n\t\t\tchildren?: ReactNode\n\t\t\tcontext?: BackendContext\n\t\t\toptions?: BackendOptions\n\t\t\tdebugMode?: boolean\n\t  }\n\nlet refCount = 0\nconst INSTANCE_SYM = Symbol.for('__REACT_DND_CONTEXT_INSTANCE__')\n\n/**\n * A React component that provides the React-DnD context\n */\nexport const DndProvider: FC<DndProviderProps<unknown, unknown>> = memo(\n\tfunction DndProvider({ children, ...props }) {\n\t\tconst [manager, isGlobalInstance] = getDndContextValue(props) // memoized from props\n\t\t/**\n\t\t * If the global context was used to store the DND context\n\t\t * then where theres no more references to it we should\n\t\t * clean it up to avoid memory leaks\n\t\t */\n\t\tuseEffect(() => {\n\t\t\tif (isGlobalInstance) {\n\t\t\t\tconst context = getGlobalContext()\n\t\t\t\t++refCount\n\n\t\t\t\treturn () => {\n\t\t\t\t\tif (--refCount === 0) {\n\t\t\t\t\t\tcontext[INSTANCE_SYM] = null\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn\n\t\t}, [])\n\n\t\treturn <DndContext.Provider value={manager}>{children}</DndContext.Provider>\n\t},\n)\n\nfunction getDndContextValue(props: DndProviderProps<unknown, unknown>) {\n\tif ('manager' in props) {\n\t\tconst manager = { dragDropManager: props.manager }\n\t\treturn [manager, false]\n\t}\n\n\tconst manager = createSingletonDndContext(\n\t\tprops.backend,\n\t\tprops.context,\n\t\tprops.options,\n\t\tprops.debugMode,\n\t)\n\tconst isGlobalInstance = !props.context\n\n\treturn [manager, isGlobalInstance]\n}\n\nfunction createSingletonDndContext<BackendContext, BackendOptions>(\n\tbackend: BackendFactory,\n\tcontext: BackendContext = getGlobalContext(),\n\toptions: BackendOptions,\n\tdebugMode?: boolean,\n) {\n\tconst ctx = context as any\n\tif (!ctx[INSTANCE_SYM]) {\n\t\tctx[INSTANCE_SYM] = {\n\t\t\tdragDropManager: createDragDropManager(\n\t\t\t\tbackend,\n\t\t\t\tcontext,\n\t\t\t\toptions,\n\t\t\t\tdebugMode,\n\t\t\t),\n\t\t}\n\t}\n\treturn ctx[INSTANCE_SYM]\n}\n\ndeclare const global: any\nfunction getGlobalContext() {\n\treturn typeof global !== 'undefined' ? global : (window as any)\n}\n"],"names":["createSvgIcon","_jsx","d","invariant","condition","format","args","process","undefined","Error","error","argIndex","replace","name","framesToPop","memoize","fn","result","memoized","EnterLeaveCounter","enter","enteringNode","previousLength","this","entered","length","itemsA","itemsB","set","Set","insertItem","item","add","forEach","key","push","union","filter","node","isNodeInDocument","contains","leave","leavingNode","items","i","reset","constructor","NativeDragSource","initializeExposedProperties","Object","keys","config","exposeProperties","property","defineProperty","configurable","enumerable","get","console","warn","loadDataTransfer","dataTransfer","newProperties","propertyFn","value","matchesTypes","defineProperties","canDrag","beginDrag","isDragging","monitor","handle","getSourceId","endDrag","FILE","URL","TEXT","HTML","getDataFromDataTransfer","typesToTry","defaultValue","reduce","resultSoFar","typeToTry","getData","nativeTypesConfig","NativeTypes","files","Array","prototype","slice","call","html","urls","split","text","matchNativeItemType","dataTransferTypes","types","nativeItemType","typeConfig","some","t","indexOf","isFirefox","test","navigator","userAgent","isSafari","Boolean","window","safari","MonotonicInterpolant","interpolate","x","xs","ys","c1s","c2s","c3s","mid","low","high","Math","floor","xHere","max","diff","diffSq","indexes","sort","a","b","dys","dxs","ms","dx","dy","m2","mNext","dxNext","common","m","c1","invDx","ELEMENT_NODE","getNodeClientOffset","el","nodeType","parentElement","top","left","getBoundingClientRect","y","getEventClientOffset","e","clientX","clientY","getDragPreviewOffset","sourceNode","dragPreview","clientOffset","anchorPoint","offsetPoint","isImage","document","nodeName","documentElement","isImageNode","dragPreviewNodeOffsetFromClient","offsetFromDragPreview","offsetWidth","sourceWidth","offsetHeight","sourceHeight","anchorX","anchorY","dragPreviewWidth","dragPreviewHeight","width","height","devicePixelRatio","getDragPreviewSize","offsetX","offsetY","isManualOffsetY","calculateYOffset","OptionsReader","globalContext","ref","rootElement","optionsArgs","options","ownerDocument","HTML5BackendImpl","profile","ref1","sourcePreviewNodes","size","sourcePreviewNodeOptions","sourceNodeOptions","sourceNodes","dragStartSourceIds","dropTargetIds","dragEnterTargetIds","dragOverTargetIds","setup","root","__isReactDndBackendSetUp","addEventListeners","teardown","removeEventListeners","clearCurrentDragSourceNode","asyncEndDragFrameId","cancelAnimationFrame","connectDragPreview","sourceId","delete","connectDragSource","handleDragStart","handleSelectStart","setAttribute","addEventListener","removeEventListener","connectDropTarget","targetId","handleDragEnter","handleDragOver","handleDrop","target","handleTopDragStart","handleTopDragStartCapture","handleTopDragEndCapture","handleTopDragEnter","handleTopDragEnterCapture","handleTopDragLeaveCapture","handleTopDragOver","handleTopDragOverCapture","handleTopDrop","handleTopDropCapture","getCurrentSourceNodeOptions","_objectSpread","dropEffect","altKeyPressed","getCurrentDropEffect","isDraggingNativeItem","getCurrentSourcePreviewNodeOptions","captureDraggingState","itemType","getItemType","beginDragNativeItem","type","currentNativeSource","createNativeDragSource","currentNativeHandle","registry","addSource","actions","setCurrentDragSourceNode","currentDragSourceNode","mouseMoveTimeoutTimer","setTimeout","endDragIfSourceWasRemovedFromDOM","clearTimeout","defaultPrevented","unshift","_e","manager","Map","lastClientOffset","hoverRafId","getSourceClientOffset","source","endDragNativeItem","removeSource","body","cancelHover","scheduleHover","requestAnimationFrame","hover","publishSource","nativeType","setDragImage","dragPreviewOffset","setData","err","publishDragSource","hasAttribute","preventDefault","enterLeaveCounter","altKey","canDropOnTarget","drop","dragDrop","tagName","isContentEditable","getActions","getMonitor","getRegistry","HTML5Backend","context","DndContext","createContext","dragDropManager","isObject","input","INIT_COORDS","BEGIN_DRAG","PUBLISH_DRAG_SOURCE","HOVER","DROP","END_DRAG","setClientOffset","sourceClientOffset","payload","ResetCoordinatesAction","createBeginDrag","sourceIds","dispatch","getSource","verifyInvariants","canDragSource","getDraggableSource","verifyGetSourceClientOffsetIsFunction","verifyItemIsObject","pinSource","getSourceType","isSourcePublic","createDrop","didDrop","targetIds","getTargetIds","reverse","getDroppableTargets","index","dropResult","getTarget","verifyDropResultType","getDropResult","determineDropResult","action","createEndDrag","verifyIsDragging","unpinSource","matchesType","targetType","draggedItemType","isArray","createHover","targetIdsArg","verifyTargetIdsIsArray","getTargetType","splice","removeNonMatchingTargetIds","lastIndexOf","checkInvariants","hoverAllTargets","createPublishDragSource","DragDropManagerImpl","receiveBackend","backend","getBackend","store","createDragDropActions","boundActions","actionCreator","apply","isSetUp","handleRefCountChange","shouldSetUp","getState","refCount","subscribe","subtract","NONE","ALL","__IS_NONE__","__IS_ALL__","DragDropMonitorImpl","subscribeToStateChange","listener","handlerIds","prevStateId","stateId","handleChange","state","currentStateId","canSkipListener","dirtyIds","areDirty","dirtyHandlerIds","subscribeToOffsetChange","previousState","dragOffset","nextState","canDrop","isDraggingSource","isOverTarget","shallow","dragOperation","getItem","getInitialClientOffset","initialClientOffset","getInitialSourceClientOffset","initialSourceClientOffset","getClientOffset","getDifferenceFromInitialOffset","scope","global","self","BrowserMutationObserver","MutationObserver","WebKitMutationObserver","makeRequestCallFromTimer","callback","timeoutHandle","handleTimer","intervalHandle","setInterval","clearInterval","makeRequestCall","toggle","observer","createTextNode","observe","characterData","data","RawTask","task","onError","release","asapQueue","enqueueTask","queue","q","requestFlush","flushing","pendingErrors","capacity","flush","currentIndex","scan","newLength","registerPendingError","requestErrorThrow","shift","taskFactory","create","tasks","freeTasks","pop","ADD_SOURCE","ADD_TARGET","REMOVE_SOURCE","REMOVE_TARGET","validateType","allowArray","HandlerRole","SOURCE","TARGET","nextUniqueId","getNextHandlerId","role","id","toString","parseRoleFromHandlerId","handlerId","mapContainsValue","map","searchValue","entries","isDone","done","next","HandlerRegistryImpl","validateSourceContract","addHandler","addTarget","validateTargetContract","containsHandler","handler","dragSources","dropTargets","includePinned","isSourceId","pinnedSourceId","pinnedSource","isTargetId","removeTarget","strictEquality","prevTargetIds","has","count","xor","didChange","isEqual","areArraysEqual","prevInnermostTargetId","innermostTargetId","initialState","offsetA","offsetB","obj","path","c","createDragDropManager","backendFactory","backendOptions","debugMode","reduxDevTools","__REDUX_DEVTOOLS_EXTENSION__","createStore","instanceId","makeStoreInstance","INSTANCE_SYM","Symbol","for","DndProvider","memo","_param","children","props","isGlobalInstance","getGlobalContext","ctx","createSingletonDndContext","getDndContextValue","useEffect","Provider"],"sourceRoot":""}
{"version":3,"file":"static/js/5168.627204bc.chunk.js","mappings":"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","sources":["pages/academy/components/LessonCard.js","pages/academy/components/LectureCard.js","pages/academy/components/CourseCard.js","pages/academy/course-editor/AddLectures.js"],"sourcesContent":["import React from 'react';\n\nimport {\n  BorderColor,\n  ContentCopy,\n  Done,\n  DragIndicator,\n  Edit,\n  InsertLink,\n  Delete,\n  AddBox,\n  Queue,\n} from '@mui/icons-material';\nimport {\n  Checkbox,\n  FormControlLabel,\n  Grid,\n  IconButton,\n  TextField,\n  Tooltip,\n  Typography,\n} from '@mui/material';\nimport { PropTypes } from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\n\nimport { uuid } from '../../../components/common/CommonFunction';\nimport {\n  setLectureEdit,\n  lectureEditSelector,\n  setLessonEdit,\n  courseEditSelector,\n  setCourseEdit,\n} from '../../../store/academy';\n\nexport default function LessonCard({\n  lesson,\n  lessonIndex,\n  lectureIndex,\n  lessonLength,\n}) {\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const [editLesson, setEditLesson] = React.useState({\n    lessonIndex: -1,\n    lectureIndex: -1,\n    name: '',\n  });\n  const courseEdit = useSelector(courseEditSelector);\n  const lectureEdit = useSelector(lectureEditSelector);\n  const lecture = lectureEdit[lectureIndex];\n\n  return (\n    <>\n      <Grid\n        key={lesson.name + lessonIndex}\n        display={'flex'}\n        alignItems=\"center\"\n        justifyContent={'space-between'}\n        pl={3}\n      >\n        <Grid display={'flex'} alignItems=\"center\" gap={1}>\n          <IconButton>\n            <DragIndicator sx={{ color: '#4C3B9C' }} />\n          </IconButton>\n          {editLesson.lessonIndex == lessonIndex &&\n          editLesson.lectureIndex === lectureIndex ? (\n            <>\n              <TextField\n                inputProps={{ style: { fontSize: 14 } }}\n                sx={{ width: 'auto' }}\n                variant=\"standard\"\n                value={editLesson.name}\n                onChange={(e) =>\n                  setEditLesson({\n                    ...editLesson,\n                    name: e.target.value,\n                  })\n                }\n              />\n            </>\n          ) : (\n            <Typography variant=\"subtitle2\">{lesson.name}</Typography>\n          )}\n\n          {editLesson.lessonIndex == lessonIndex &&\n          editLesson.lectureIndex === lectureIndex ? (\n            <Tooltip placement=\"top\" arrow={true} title={'Update lesson name'}>\n              <IconButton\n                onClick={() => {\n                  const newLesson = {\n                    ...lesson,\n                    name: editLesson.name,\n                  };\n                  const newLessons = [...lecture.lesson];\n                  newLessons[lessonIndex] = newLesson;\n                  const newLecture = {\n                    ...lecture,\n                    lesson: newLessons,\n                  };\n                  const newLectures = [...lectureEdit];\n                  newLectures[lectureIndex] = newLecture;\n                  dispatch(setLectureEdit(newLectures));\n                  dispatch(\n                    setCourseEdit({\n                      ...courseEdit,\n                      lectures: newLectures,\n                    })\n                  );\n                  setEditLesson({\n                    ...editLesson,\n                    lessonIndex: -1,\n                    lectureIndex: -1,\n                  });\n                }}\n              >\n                <Done sx={{ color: '#C4C4C4' }} />\n              </IconButton>\n            </Tooltip>\n          ) : (\n            <Tooltip placement=\"top\" arrow={true} title={'Edit lesson name'}>\n              <IconButton\n                onClick={() => {\n                  setEditLesson({\n                    name: lesson.name,\n                    lectureIndex,\n                    lessonIndex,\n                  });\n                }}\n              >\n                <BorderColor\n                  sx={{\n                    color: '#C4C4C4',\n                    width: '18px',\n                    height: '18px',\n                  }}\n                />\n              </IconButton>\n            </Tooltip>\n          )}\n        </Grid>\n        <Grid display=\"flex\" alignItems={'center'}>\n          <Tooltip\n            placement=\"top\"\n            arrow={true}\n            title={'Count lesson for course completion'}\n          >\n            <FormControlLabel\n              control={\n                <Checkbox\n                  checked={lesson.isRequired}\n                  sx={{\n                    '& .MuiSvgIcon-root': {\n                      fontSize: 18,\n                      color: '#FFD215',\n                    },\n                  }}\n                  onChange={(e) => {\n                    const { checked } = e.target;\n                    const newLesson = {\n                      ...lesson,\n                      isRequired: checked,\n                    };\n                    const newLessons = [...lecture.lesson];\n                    newLessons[lessonIndex] = newLesson;\n                    const newLecture = {\n                      ...lecture,\n                      lesson: newLessons,\n                    };\n                    const newLectures = [...lectureEdit];\n                    newLectures[lectureIndex] = newLecture;\n                    dispatch(setLectureEdit(newLectures));\n                    dispatch(\n                      setCourseEdit({\n                        ...courseEdit,\n                        lectures: newLectures,\n                      })\n                    );\n                  }}\n                />\n              }\n              label=\"Required\"\n            />\n          </Tooltip>\n          <Tooltip placement=\"top\" arrow={true} title={'Edit lesson'}>\n            <IconButton\n              // onClick={() => navigate('/academy/add-lecture/edit-lesson/')}\n              onClick={() => {\n                navigate('/academy/edit-lesson');\n                dispatch(setLessonEdit(lesson));\n              }}\n            >\n              <Edit\n                sx={{\n                  color: '#C4C4C4',\n                  width: '18px',\n                  height: '18px',\n                }}\n              />\n            </IconButton>\n          </Tooltip>\n          <Tooltip placement=\"top\" arrow={true} title={'Copy lesson'}>\n            <IconButton\n              onClick={() => {\n                const newLesson = {\n                  ...lesson,\n                  id: uuid(),\n                  name: 'Copy of ' + lesson.name,\n                };\n                const newLessons = [...lecture.lesson];\n                newLessons.splice(lessonIndex + 1, 0, newLesson);\n                const newLecture = {\n                  ...lecture,\n                  lesson: newLessons,\n                };\n                const newLectures = [...lectureEdit];\n                newLectures[lectureIndex] = newLecture;\n                dispatch(setLectureEdit(newLectures));\n                dispatch(\n                  setCourseEdit({\n                    ...courseEdit,\n                    lectures: newLectures,\n                  })\n                );\n              }}\n            >\n              <ContentCopy\n                sx={{\n                  color: '#C4C4C4',\n                  width: '18px',\n                  height: '18px',\n                }}\n              />\n            </IconButton>\n          </Tooltip>\n          <Tooltip placement=\"top\" arrow={true} title={'Lesson link'}>\n            <IconButton>\n              <InsertLink\n                sx={{\n                  color: '#C4C4C4',\n                  width: '18px',\n                  height: '18px',\n                }}\n              />\n            </IconButton>\n          </Tooltip>\n          {lessonLength > 1 ? (\n            <Tooltip placement=\"top\" arrow={true} title={'Delete lesson'}>\n              <IconButton\n                onClick={() => {\n                  const newLessons = [...lecture.lesson];\n                  newLessons.splice(lessonIndex, 1);\n                  const newLecture = {\n                    ...lecture,\n                    lesson: newLessons,\n                  };\n                  const newLectures = [...lectureEdit];\n                  newLectures[lectureIndex] = newLecture;\n                  dispatch(setLectureEdit(newLectures));\n                  dispatch(\n                    setCourseEdit({\n                      ...courseEdit,\n                      lectures: newLectures,\n                    })\n                  );\n                }}\n              >\n                <Delete\n                  sx={{\n                    color: '#C4C4C4',\n                    width: '18px',\n                    height: '18px',\n                  }}\n                />\n              </IconButton>\n            </Tooltip>\n          ) : null}\n          <Tooltip placement=\"top\" arrow={true} title={'Add lesson below'}>\n            <IconButton\n              onClick={() => {\n                const newLesson = {\n                  id: uuid(),\n                  name: 'Untitled lesson',\n                  isRequired: false,\n                  content: [],\n                };\n                const newLessons = [...lecture.lesson];\n                newLessons.splice(lessonIndex + 1, 0, newLesson);\n                const newLecture = {\n                  ...lecture,\n                  lesson: newLessons,\n                };\n                const newLectures = [...lectureEdit];\n                newLectures[lectureIndex] = newLecture;\n                dispatch(setLectureEdit(newLectures));\n                dispatch(\n                  setCourseEdit({\n                    ...courseEdit,\n                    lectures: newLectures,\n                  })\n                );\n              }}\n            >\n              <AddBox\n                sx={{\n                  color: '#C4C4C4',\n                  width: '18px',\n                  height: '18px',\n                }}\n              />\n            </IconButton>\n          </Tooltip>\n          <Tooltip placement=\"top\" arrow={true} title={'Add lecture below'}>\n            <IconButton\n              onClick={() => {\n                const newLectures = [...lectureEdit];\n                const lectureCopy = {\n                  ...lecture,\n                  id: uuid(),\n                  name: 'Untitled lecture',\n                  lesson: [\n                    {\n                      id: uuid(),\n                      name: 'Untitled lesson',\n                      isRequired: false,\n                      content: [],\n                    },\n                  ],\n                };\n                newLectures.splice(lectureIndex + 1, 0, lectureCopy);\n                // console.log('newLectures', newLectures);\n                dispatch(setLectureEdit(newLectures));\n                dispatch(\n                  setCourseEdit({\n                    ...courseEdit,\n                    lectures: newLectures,\n                  })\n                );\n              }}\n            >\n              <Queue\n                sx={{\n                  color: '#C4C4C4',\n                  width: '18px',\n                  height: '18px',\n                }}\n              />\n            </IconButton>\n          </Tooltip>\n        </Grid>\n      </Grid>\n    </>\n  );\n}\n\nLessonCard.propTypes = {\n  lesson: PropTypes.object,\n  lectureIndex: PropTypes.number,\n  lessonIndex: PropTypes.number,\n  lessonLength: PropTypes.number,\n  moveCard: PropTypes.func,\n  id: PropTypes.string,\n  lectureId: PropTypes.string,\n};\n","import React from 'react';\n\nimport {\n  ContentCopy,\n  Delete,\n  DragIndicator,\n  Done,\n  BorderColor,\n} from '@mui/icons-material';\nimport {\n  Grid,\n  IconButton,\n  TextField,\n  Tooltip,\n  Typography,\n} from '@mui/material';\nimport { PropTypes } from 'prop-types';\nimport { useDrag, useDrop } from 'react-dnd';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { uuid } from '../../../components/common/CommonFunction';\nimport {\n  setLectureEdit,\n  lectureEditSelector,\n  setCourseEdit,\n  courseEditSelector,\n} from '../../../store/academy';\nimport LessonCard from './LessonCard';\n\nexport default function LectureCard({\n  lecture,\n  lectureIndex,\n  lectureLength,\n  moveCard,\n  id,\n}) {\n  const dispatch = useDispatch();\n  const lectureEdit = useSelector(lectureEditSelector);\n  const courseData = useSelector(courseEditSelector);\n  const [editLecture, setEditLecture] = React.useState({\n    id: -1,\n    name: '',\n  });\n  const ref = React.useRef(null);\n  const [{ handlerId }, drop] = useDrop({\n    accept: 'card',\n    collect(monitor) {\n      return {\n        handlerId: monitor.getHandlerId(),\n      };\n    },\n    hover(item, monitor) {\n      if (!ref.current) {\n        return;\n      }\n      const dragIndex = item.lectureIndex;\n      const hoverIndex = lectureIndex;\n\n      // console.log(dragIndex, hoverIndex);\n      if (dragIndex === hoverIndex) {\n        return;\n      }\n      const hoverBoundingRect = ref.current?.getBoundingClientRect();\n      const hoverMiddleY =\n        (hoverBoundingRect.bottom - hoverBoundingRect.top) / 2;\n      const clientOffset = monitor.getClientOffset();\n      const hoverClientY = clientOffset.y - hoverBoundingRect.top;\n      if (dragIndex < hoverIndex && hoverClientY < hoverMiddleY) {\n        return;\n      }\n      if (dragIndex > hoverIndex && hoverClientY > hoverMiddleY) {\n        return;\n      }\n      moveCard(dragIndex, hoverIndex);\n      item.lectureIndex = hoverIndex;\n    },\n  });\n  const [{ isDragging }, drag, preview] = useDrag({\n    type: 'card',\n    item: () => {\n      // console.log(id, lectureIndex);\n      return { id, lectureIndex };\n    },\n    collect: (monitor) => ({\n      isDragging: monitor.isDragging(),\n    }),\n  });\n  const opacity = isDragging ? '0' : '1';\n  preview(drop(ref));\n\n  const renderLessonCards = (lessons) => {\n    return lessons?.map((lesson, lessonIndex) => (\n      <LessonCard\n        key={lessonIndex}\n        lesson={lesson}\n        lessonIndex={lessonIndex}\n        lectureIndex={lectureIndex}\n        lessonLength={lecture.lesson.length}\n        lectureId={lecture.id}\n      />\n    ));\n  };\n\n  return (\n    <div ref={ref} style={{ opacity }} data-handler-id={handlerId}>\n      <Grid display=\"flex\" flexDirection={'column'} gap={1}>\n        <Grid\n          display={'flex'}\n          alignItems=\"center\"\n          justifyContent={'space-between'}\n        >\n          <Grid display={'flex'} alignItems=\"center\" gap={1}>\n            <IconButton ref={drag} sx={{ cursor: 'move' }}>\n              <DragIndicator sx={{ color: '#4C3B9C' }} />\n            </IconButton>\n            {editLecture.id === id ? (\n              <TextField\n                inputProps={{ style: { fontSize: 16 } }}\n                sx={{ width: 'auto' }}\n                variant=\"standard\"\n                value={editLecture.name}\n                onChange={(e) => {\n                  // update the local state\n                  setEditLecture({\n                    ...editLecture,\n                    name: e.target.value,\n                  });\n                }}\n              />\n            ) : (\n              <Typography variant=\"subtitle1\">{lecture.name}</Typography>\n            )}\n            {editLecture.id === id ? (\n              <Tooltip\n                placement=\"top\"\n                arrow={true}\n                title={'Update lecture name'}\n              >\n                <IconButton\n                  onClick={() => {\n                    // update the lecture state\n                    let updatedLectures = [...lectureEdit];\n                    // find the lecture to update\n                    const lectureToUpdate = updatedLectures.find(\n                      (l) => l.id === id\n                    );\n                    // create the lecture update\n                    const lectureUpdate = {\n                      ...lectureToUpdate,\n                      name: editLecture.name,\n                    };\n                    // update the lecture\n                    updatedLectures = updatedLectures.map((l) => {\n                      if (l.id === id) {\n                        return lectureUpdate;\n                      }\n                      return l;\n                    });\n                    // update the lecture state\n                    dispatch(setLectureEdit(updatedLectures));\n                    // update the course state\n                    dispatch(\n                      setCourseEdit({\n                        ...courseData,\n                        lectures: updatedLectures,\n                      })\n                    );\n                    // reset the local state\n                    setEditLecture({\n                      id: -1,\n                      name: '',\n                    });\n                  }}\n                >\n                  <Done sx={{ color: '#C4C4C4' }} />\n                </IconButton>\n              </Tooltip>\n            ) : (\n              <Tooltip placement=\"top\" arrow={true} title={'Edit lecture name'}>\n                <IconButton\n                  onClick={() => {\n                    // console.log('edit lecture', lecture, editLecture);\n                    setEditLecture({\n                      ...lecture,\n                      id: lecture.id,\n                      name: lecture.name,\n                    });\n                    // console.log('edit lecture', lecture, editLecture);\n                  }}\n                >\n                  <BorderColor\n                    sx={{\n                      color: '#C4C4C4',\n                      height: '20px',\n                      width: '20px',\n                    }}\n                  />\n                </IconButton>\n              </Tooltip>\n            )}\n          </Grid>\n          <Grid>\n            {lectureLength > 1 ? (\n              <Tooltip placement=\"top\" arrow={true} title={'Delete lecture'}>\n                <IconButton\n                  onClick={() => {\n                    console.log('delete lecture', lecture);\n                    const lecturesUpdated = [...lectureEdit].filter(\n                      (l) => l.id !== lecture.id\n                    );\n                    console.log('lecturesUpdated', lecturesUpdated);\n                    dispatch(setLectureEdit(lecturesUpdated));\n                    dispatch(\n                      setCourseEdit({\n                        ...courseData,\n                        lectures: lecturesUpdated,\n                      })\n                    );\n                  }}\n                >\n                  <Delete\n                    sx={{\n                      color: '#C4C4C4',\n                      height: '20px',\n                      width: '20px',\n                    }}\n                  />\n                </IconButton>\n              </Tooltip>\n            ) : null}\n            <Tooltip placement=\"top\" arrow={true} title={'Copy lecture'}>\n              <IconButton\n                onClick={() => {\n                  //console.log('copy lecture', lecture);\n                  const newLectures = [...lectureEdit];\n                  const lectureCopy = {\n                    ...lecture,\n                    id: uuid(),\n                  };\n                  newLectures.splice(lectureIndex + 1, 0, lectureCopy);\n                  // console.log('newLectures', newLectures);\n                  dispatch(setLectureEdit(newLectures));\n                  dispatch(\n                    setCourseEdit({\n                      ...courseData,\n                      lectures: newLectures,\n                    })\n                  );\n                }}\n              >\n                <ContentCopy\n                  sx={{\n                    color: '#C4C4C4',\n                    height: '20px',\n                    width: '20px',\n                  }}\n                />\n              </IconButton>\n            </Tooltip>\n          </Grid>\n        </Grid>\n        {lecture && renderLessonCards(lecture.lesson)}\n      </Grid>\n    </div>\n  );\n}\n\nLectureCard.propTypes = {\n  lecture: PropTypes.object,\n  lectureIndex: PropTypes.number,\n  lectureLength: PropTypes.number,\n  moveCard: PropTypes.func,\n  id: PropTypes.string,\n};\n","import React from 'react';\n\nimport { Card } from '@mui/material';\nimport update from 'immutability-helper';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\n\nimport {\n  courseEditSelector,\n  courseSelector,\n  setLectureEdit,\n  lectureEditSelector,\n  setCourseEdit,\n} from './../../../store/academy';\nimport LectureCard from './LectureCard';\n\nfunction CourseCard({ editMode }) {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const courseData = useSelector(\n    editMode ? courseEditSelector : courseSelector\n  );\n  const lectures = useSelector(lectureEditSelector);\n  // console.log('course card courseData', courseData, lectures);\n\n  const moveCard = React.useCallback(\n    (dragIndex, hoverIndex) => {\n      let updatedLectures = update(lectures, {\n        $splice: [\n          [dragIndex, 1],\n          [hoverIndex, 0, lectures[dragIndex]],\n        ],\n      });\n      dispatch(setLectureEdit(updatedLectures));\n      dispatch(setCourseEdit({\n        ...courseData,\n        lectures: updatedLectures,\n      }));\n    },\n    [dispatch, lectures, courseData]\n  );\n\n  React.useEffect(() => {\n    // console.log('lectures', lectures);\n    // console.log('courseData.lectures', courseData);\n    if (!lectures) {\n      if (!courseData) {\n        navigate('/academy/add-course');\n      } else {\n        dispatch(setLectureEdit(courseData.lectures));\n      }\n    }\n    return () => {\n      return false;\n    };\n  }, [lectures, courseData, dispatch, navigate]);\n\n  const renderCard = React.useCallback(\n    (lecture, lectureIndex) => {\n      // console.log(lecture.id);\n      return (\n        <LectureCard\n          key={lecture.id}\n          lecture={lecture}\n          lectureIndex={lectureIndex}\n          id={lecture.id}\n          lectureLength={lectures.length}\n          moveCard={moveCard}\n        />\n      );\n    },\n    [lectures, moveCard]\n  );\n\n  if (!lectures) {\n    return null;\n  }\n\n  return (\n    <Card\n      elevation={0}\n      sx={{\n        p: 2.5,\n        display: 'flex',\n        flexDirection: 'column',\n        gap: 3,\n      }}\n    >\n      {lectures.map((lecture, lectureIndex) =>\n        renderCard(lecture, lectureIndex)\n      )}\n    </Card>\n  );\n}\n\nCourseCard.propTypes = {\n  editMode: PropTypes.bool,\n};\n\nexport default CourseCard;\n","import React from 'react';\n\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport {\n  Grid,\n  Card,\n  List,\n  ListItem,\n  ListItemText,\n  ListItemSecondaryAction,\n  IconButton,\n  Container,\n  Button,\n  Typography,\n  Box,\n  CardMedia,\n  Chip,\n  Switch,\n  LinearProgress,\n  Skeleton,\n} from '@mui/material';\nimport { Form, Formik } from 'formik';\nimport { DndProvider } from 'react-dnd';\nimport { HTML5Backend } from 'react-dnd-html5-backend';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport * as Yup from 'yup';\n\nimport {\n  courseEditSelector,\n  setCourseEdit,\n  // addCourse,\n  lectureEditSelector,\n} from '../../../store/academy';\nimport CourseCard from '../components/CourseCard';\n\nconst FORM_VALIDATION = Yup.object().shape({});\n\nfunction AddLectures() {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const courseData = useSelector(courseEditSelector);\n  const lectures = useSelector(lectureEditSelector);\n  // console.log('courseData', courseData);\n\n  React.useEffect(() => {\n    if (courseData === null) {\n      navigate('/academy/add-course');\n    }\n    return () => {\n      return false;\n    };\n  }, [courseData, navigate]);\n\n  if (courseData === null) {\n    return (\n      <Container>\n        <Grid container spacing={2}>\n          <Grid item xs={12} md={8}>\n            <Typography variant=\"h4\">Winston Academy Course Editor</Typography>\n            <Typography variant=\"h5\" mb={2}>\n              This is the course editor for Winston Academy.\n            </Typography>\n            <Card>\n              <Skeleton variant=\"rectangular\" width=\"100%\" height={200} />\n            </Card>\n            <Typography variant=\"body1\" mt={2}>\n              This is the course editor for Winston Academy. It is a work in\n              progress.\n            </Typography>\n          </Grid>\n          <Grid item xs={12} md={4}>\n            <Box display=\"flex\" justifyContent=\"space-between\" mt={2}>\n              <Typography variant=\"h5\">Learn to Earn</Typography>\n              <Typography variant=\"h5\">admin@winston.ser</Typography>\n            </Box>\n            <Box\n              display=\"flex\"\n              justifyContent=\"space-between\"\n              flexDirection={'column'}\n              mt={2}\n            >\n              <Typography variant=\"h5\">\n                Price:{' '}\n                <span style={{ float: 'right' }}>\n                  <Skeleton variant=\"text\" sx={{ fontSize: '1rem' }} />\n                </span>\n              </Typography>\n              <Typography variant=\"h5\">\n                Discount Price:{' '}\n                <span style={{ float: 'right' }}>\n                  <Skeleton variant=\"text\" sx={{ fontSize: '1rem' }} />\n                </span>\n              </Typography>\n              <Typography variant=\"h5\">\n                Tags:{' '}\n                <span style={{ float: 'right' }}>\n                  <Skeleton variant=\"text\" sx={{ fontSize: '1rem' }} />\n                </span>\n              </Typography>\n              <Typography variant=\"h5\">\n                Skills:{' '}\n                <span style={{ float: 'right' }}>\n                  <Skeleton variant=\"text\" sx={{ fontSize: '1rem' }} />\n                </span>\n              </Typography>\n              <Typography variant=\"h5\">\n                Progress:{' '}\n                <Box width=\"100%\" height={10} mt={1}>\n                  <Skeleton variant=\"rectangular\" width=\"100%\" height={10} />\n                </Box>\n              </Typography>\n              <Typography variant=\"h5\">\n                Template:{' '}\n                <span style={{ float: 'right' }}>\n                  <Skeleton variant=\"text\" sx={{ fontSize: '1rem' }} />\n                </span>\n              </Typography>\n              <Typography variant=\"h5\">\n                Submitted:{' '}\n                <span style={{ float: 'right' }}>\n                  <Skeleton variant=\"text\" sx={{ fontSize: '1rem' }} />\n                </span>\n              </Typography>\n              <Typography variant=\"h5\">\n                Reviewed:{' '}\n                <span style={{ float: 'right' }}>\n                  <Skeleton variant=\"text\" sx={{ fontSize: '1rem' }} />\n                </span>\n              </Typography>\n              <Typography variant=\"h5\">\n                Approved:{' '}\n                <span style={{ float: 'right' }}>\n                  <Skeleton variant=\"text\" sx={{ fontSize: '1rem' }} />\n                </span>\n              </Typography>\n              <Typography variant=\"h5\">\n                Published:{' '}\n                <span style={{ float: 'right' }}>\n                  <Skeleton variant=\"text\" sx={{ fontSize: '1rem' }} />\n                </span>\n              </Typography>\n              <Typography variant=\"h5\">\n                Rejected:{' '}\n                <span style={{ float: 'right' }}>\n                  <Skeleton variant=\"text\" sx={{ fontSize: '1rem' }} />\n                </span>\n              </Typography>\n              <Typography variant=\"h5\">\n                Saved:{' '}\n                <span style={{ float: 'right' }}>\n                  <Skeleton variant=\"text\" sx={{ fontSize: '1rem' }} />\n                </span>\n              </Typography>\n            </Box>\n          </Grid>\n        </Grid>\n      </Container>\n    );\n  }\n\n  return (\n    <Container>\n      <Grid container spacing={2}>\n        <Grid item xs={12} md={8}>\n          <Typography variant=\"h4\">{courseData.title}</Typography>\n          <Typography variant=\"h5\" mb={2}>\n            {courseData.description}\n          </Typography>\n          <Card>\n            <CardMedia\n              component=\"img\"\n              image={courseData.thumbnail}\n              alt={courseData.title}\n            />\n          </Card>\n          <Typography variant=\"body1\" mt={2}>\n            {courseData.summary}\n          </Typography>\n        </Grid>\n        <Grid item xs={12} md={4}>\n          <Box display=\"flex\" justifyContent=\"space-between\" mt={2}>\n            <Typography variant=\"h5\">{courseData?.teacher?.name}</Typography>\n            <Typography variant=\"h5\">{courseData?.teacher?.email}</Typography>\n          </Box>\n          <Box\n            display=\"flex\"\n            justifyContent=\"space-between\"\n            flexDirection={'column'}\n            mt={2}\n          >\n            <Typography variant=\"h5\">\n              Price:{' '}\n              <span style={{ float: 'right' }}>\n                {courseData.price > 0 ? (\n                  <>\n                    {courseData.currencySymbol}\n                    <span style={{ fontWeight: 'bold', color: 'lightgreen' }}>\n                      {courseData.price}\n                    </span>\n                  </>\n                ) : (\n                  <>FREE</>\n                )}\n              </span>\n            </Typography>\n            <Typography variant=\"h5\">\n              Discount Price:{' '}\n              {courseData.discountPrice > 0 ? (\n                <span style={{ float: 'right' }}>\n                  {courseData.currencySymbol}\n                  <span style={{ fontWeight: 'bold', color: 'red' }}>\n                    {courseData.discountPrice}\n                  </span>\n                </span>\n              ) : (\n                <span style={{ float: 'right' }}>None</span>\n              )}\n            </Typography>\n            <Typography variant=\"h5\">\n              Tags:{' '}\n              <span style={{ float: 'right' }}>\n                {courseData.tags.map((tag) => (\n                  <Chip key={tag} label={tag} />\n                ))}\n              </span>\n            </Typography>\n            <Typography variant=\"h5\">\n              Skills:{' '}\n              <span style={{ float: 'right' }}>\n                {courseData.skills.map((skill) => (\n                  <Chip key={skill} label={skill} />\n                ))}\n              </span>\n            </Typography>\n            <Typography variant=\"h5\">\n              Progress:{' '}\n              <Box width=\"100%\" height={10} mt={1}>\n                <LinearProgress\n                  variant=\"determinate\"\n                  value={courseData.progress + 1}\n                  color=\"info\"\n                />\n              </Box>\n            </Typography>\n            <Typography variant=\"h5\">\n              Template:{' '}\n              <span style={{ float: 'right' }}>\n                <Switch checked={courseData.isTemplate} />\n              </span>\n            </Typography>\n            <Typography variant=\"h5\">\n              Submitted:{' '}\n              <span style={{ float: 'right' }}>\n                <Switch checked={courseData.isSubmitted} />\n              </span>\n            </Typography>\n            <Typography variant=\"h5\">\n              Reviewed:{' '}\n              <span style={{ float: 'right' }}>\n                <Switch checked={courseData.isReviewed} />\n              </span>\n            </Typography>\n            <Typography variant=\"h5\">\n              Approved:{' '}\n              <span style={{ float: 'right' }}>\n                <Switch checked={courseData.isApproved} />\n              </span>\n            </Typography>\n            <Typography variant=\"h5\">\n              Published:{' '}\n              <span style={{ float: 'right' }}>\n                <Switch checked={courseData.isPublished} />\n              </span>\n            </Typography>\n            <Typography variant=\"h5\">\n              Rejected:{' '}\n              <span style={{ float: 'right' }}>\n                <Switch checked={courseData.isRejected} />\n              </span>\n            </Typography>\n            <Typography variant=\"h5\">\n              Saved:{' '}\n              <span style={{ float: 'right' }}>\n                <Switch checked={courseData.isSaved} />\n              </span>\n            </Typography>\n          </Box>\n        </Grid>\n      </Grid>\n      <Formik\n        initialValues={{\n          ...courseData,\n        }}\n        validationSchema={FORM_VALIDATION}\n        onSubmit={(values) => {\n          console.log('lectures', lectures);\n          console.log('courseData', courseData);\n          console.log('values', values);\n          dispatch(\n            setCourseEdit({\n              ...courseData,\n              lectures: lectures,\n            })\n          );\n        }}\n      >\n        <Form>\n          <Grid\n            mb={3}\n            display=\"flex\"\n            alignItems={'center'}\n            justifyContent=\"space-between\"\n            height={30}\n          >\n            <Typography variant=\"h5\">Course Contents</Typography>\n          </Grid>\n          <Grid container spacing={3}>\n            <Grid item xs={12} md={8}>\n              <DndProvider backend={HTML5Backend}>\n                <CourseCard editMode={true} />\n              </DndProvider>\n            </Grid>\n            <Grid item xs={12} md={4}>\n              <Box display=\"flex\" justifyContent=\"space-between\" mt={2}>\n                <Button sx={{ px: 2, ml: 2 }} type=\"submit\" fullWidth>\n                  Save\n                </Button>\n              </Box>\n              <Box display=\"flex\" justifyContent=\"space-between\" mt={2}>\n                <Typography variant=\"h5\">Course Index</Typography>\n                <List>\n                  {courseData?.lectures?.map((lecture) => (\n                    <React.Fragment key={lecture.id}>\n                      <ListItem>\n                        <ListItemText primary={lecture.name} />\n                        <ListItemSecondaryAction>\n                          <IconButton edge=\"end\" aria-label=\"delete\">\n                            <DeleteIcon />\n                          </IconButton>\n                        </ListItemSecondaryAction>\n                      </ListItem>\n                      <List component=\"div\" disablePadding>\n                        {lecture?.lesson?.map((lesson) => (\n                          <ListItem sx={{ pl: 4 }} key={lesson.id}>\n                            <ListItemText primary={lesson.name} />\n                            <ListItemSecondaryAction>\n                              <IconButton edge=\"end\" aria-label=\"delete\">\n                                <DeleteIcon />\n                              </IconButton>\n                            </ListItemSecondaryAction>\n                          </ListItem>\n                        ))}\n                      </List>\n                    </React.Fragment>\n                  ))}\n                </List>\n              </Box>\n            </Grid>\n          </Grid>\n        </Form>\n      </Formik>\n    </Container>\n  );\n}\n\nexport default AddLectures;\n"],"names":["LessonCard","_ref","lesson","lessonIndex","lectureIndex","lessonLength","navigate","useNavigate","dispatch","useDispatch","editLesson","setEditLesson","React","name","courseEdit","useSelector","courseEditSelector","lectureEdit","lectureEditSelector","lecture","_jsx","_Fragment","children","_jsxs","Grid","display","alignItems","justifyContent","pl","gap","IconButton","DragIndicator","sx","color","TextField","inputProps","style","fontSize","width","variant","value","onChange","e","target","Typography","Tooltip","placement","arrow","title","onClick","newLesson","newLessons","newLecture","newLectures","setLectureEdit","setCourseEdit","lectures","Done","BorderColor","height","FormControlLabel","control","Checkbox","checked","isRequired","label","setLessonEdit","Edit","id","uuid","splice","ContentCopy","InsertLink","Delete","content","AddBox","lectureCopy","Queue","LectureCard","lectureLength","moveCard","courseData","editLecture","setEditLecture","ref","handlerId","drop","useDrop","accept","collect","monitor","getHandlerId","hover","item","_ref$current","current","dragIndex","hoverIndex","hoverBoundingRect","getBoundingClientRect","hoverMiddleY","bottom","top","hoverClientY","getClientOffset","y","isDragging","drag","preview","useDrag","type","opacity","flexDirection","cursor","updatedLectures","lectureUpdate","find","l","map","console","log","lecturesUpdated","filter","lessons","length","lectureId","editMode","courseSelector","update","$splice","renderCard","Card","elevation","p","FORM_VALIDATION","Yup","shape","_courseData$teacher","_courseData$teacher2","_courseData$lectures","Container","container","spacing","xs","md","mb","Skeleton","mt","Box","float","description","CardMedia","component","image","thumbnail","alt","summary","teacher","email","price","currencySymbol","fontWeight","discountPrice","tags","tag","Chip","skills","skill","LinearProgress","progress","Switch","isTemplate","isSubmitted","isReviewed","isApproved","isPublished","isRejected","isSaved","Formik","initialValues","validationSchema","onSubmit","values","Form","DndProvider","backend","HTML5Backend","CourseCard","Button","px","ml","fullWidth","List","_lecture$lesson","ListItem","ListItemText","primary","ListItemSecondaryAction","edge","DeleteIcon","disablePadding"],"sourceRoot":""}
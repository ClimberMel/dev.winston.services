{"version":3,"file":"static/js/5020.c16fcbd6.chunk.js","mappings":"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","sources":["pages/sign-in/index.jsx","utils/wallet/index.js"],"sourcesContent":["import React, { useState } from 'react';\n\nimport {\n  Typography,\n  Button,\n  Input,\n  Box,\n  Link,\n  TextField,\n  // Grid,\n} from '@mui/material';\nimport { useNavigate } from 'react-router-dom';\n\nimport useAuth from '../../context/authContext';\nimport Wallet from './../../utils/wallet';\n// import { useDispatch } from 'react-redux';\n// import { setUserWallet } from '../../store/user';\n\nfunction SignIn() {\n  const navigate = useNavigate();\n  const auth = useAuth();\n  const [error, setError] = useState({});\n  const hiddenFileInput = React.useRef(null);\n  // const dispatch = useDispatch();\n  const login = (privateKey) => {\n    let tempWallet = new Wallet();\n    if (privateKey !== null) {\n      if (privateKey.substr(0, 27) !== '-----BEGIN PRIVATE KEY-----') {\n        return { error: 'Invalid Private Key, please try again.' };\n      }\n      try {\n        tempWallet.setPrivateKey(privateKey);\n      } catch (error) {\n        return { error };\n      }\n      if (tempWallet.key.isPrivate()) {\n        return { wallet: tempWallet };\n      } else {\n        return { error: 'Failed to load key.' };\n      }\n    } else {\n      return { error: 'Invalid Browser Key' };\n    }\n  };\n\n  const handleUploadFile = (event) => {\n    const fileUploaded = event.target.files[0];\n    const reader = new FileReader();\n    reader.readAsBinaryString(fileUploaded);\n    reader.onload = () => {\n      const privateKey = reader.result;\n      const loginResults = login(privateKey);\n      if ('error' in loginResults) {\n        setError(loginResults.error);\n      } else {\n        // dispatch(setUserWallet(loginResults.wallet));\n        auth.setAuth(loginResults.wallet);\n        navigate('/dashboard');\n      }\n    };\n  };\n\n  const loadKeyFromLocalStorage = (e) => {\n    e.preventDefault();\n    const loginResults = login(localStorage.getItem('privateKey'));\n    if ('error' in loginResults) {\n      setError(loginResults.error);\n    } else {\n      // dispatch(setUserWallet(loginResults.wallet));\n      auth.setAuth(loginResults.wallet);\n      navigate('/dashboard');\n    }\n  };\n  const handleUploadClick = (event) => {\n    event.preventDefault();\n    hiddenFileInput.current.firstChild.click();\n  };\n\n  return (\n    <Box>\n      <Typography variant=\"h3\">Sign in to</Typography>\n      <Typography variant=\"h2\" sx={{ mt: 2 }}>\n        Your Wallet\n      </Typography>\n      <Typography variant=\"subtitle2\" sx={{ my: 6 }}>\n        Note : Don&apos;t lose your wallet key! You have to store your private\n        key in safe place for accessing your wallet.\n      </Typography>\n      <TextField\n        fullWidth\n        variant=\"outlined\"\n        label={'Password'}\n        required\n        placeholder={'Enter your password'}\n        error={error.errors}\n        color={error.errors ? 'red' : ''}\n        helperText={error.errors}\n      />\n\n      <Box component=\"div\" sx={{ mt: 5 }}>\n        <Button\n          variant=\"outlined\"\n          sx={{ mr: { xs: 1, md: 3 } }}\n          onClick={loadKeyFromLocalStorage}\n        >\n          Browser Login\n        </Button>\n        <Button\n          variant=\"contained\"\n          color=\"secondary\"\n          // startIcon={<LockIcon />}\n          onClick={handleUploadClick}\n        >\n          Private Key\n        </Button>\n        <Input\n          onChange={handleUploadFile}\n          name=\"privateKeyFile\"\n          ref={hiddenFileInput}\n          type=\"file\"\n          sx={{ display: 'none' }}\n        />\n      </Box>\n      <Typography sx={{ mt: 5 }}>\n        Don’t have an wallet?\n        <Link\n          underline=\"none\"\n          onClick={() => navigate('/sign-up')}\n          sx={{ ml: 1 }}\n        >\n          Let’s create your wallet\n        </Link>\n      </Typography>\n    </Box>\n  );\n}\n\nexport default SignIn;\n","/* eslint-disable no-undef */\nvar NodeRSA = require('node-rsa');\nvar qrCode = require('qrcode-npm');\nconst HEADER_BANNER = '-----BEGIN PUBLIC KEY-----';\nconst FOOTER_BANNER = '-----END PUBLIC KEY-----';\nexport default class Wallet {\n  constructor() {\n    this.key = new NodeRSA();\n    return this;\n  }\n\n  generateKeyPair() {\n    this.key.generateKeyPair(512);\n    this.walletPrivateKey = this.key.exportKey('pkcs8-private-pem');\n    this.walletPublicKey = (() => {\n      const a = this.key.exportKey('pkcs8-public-pem').split('\\n');\n      a.shift();\n      return { a: a.shift(), b: a.shift() };\n    })();\n    return this;\n  }\n\n  setPublicKey(key) {\n    const key_1 = new NodeRSA();\n    key_1.importKey(\n      [HEADER_BANNER, key.a, key.b, FOOTER_BANNER].join('\\n'),\n      'pkcs8-public-pem'\n    );\n    if (key_1.isPublic()) {\n      this.key = key_1;\n      this.walletPublicKey = (() => {\n        const a = key_1.exportKey('pkcs8-public-pem').split('\\n');\n        a.shift();\n        return { a: a.shift(), b: a.shift() };\n      })();\n    }\n    return this;\n  }\n\n  setPrivateKey(key) {\n    const key_2 = new NodeRSA();\n    key_2.importKey(key, 'pkcs8-private-pem');\n    if (key_2.isPrivate()) {\n      this.key = key_2;\n      this.walletPrivateKey = key_2.exportKey('pkcs8-private-pem');\n      this.walletPublicKey = (() => {\n        const a = key_2.exportKey('pkcs8-public-pem').split('\\n');\n        a.shift();\n        return { a: a.shift(), b: a.shift() };\n      })();\n    }\n    return this.key.isPrivate();\n  }\n\n  verifySignature(data) {\n    this.setPublicKey(data.sender);\n    const trx = {\n      sender: data.sender,\n      amount: data.amount,\n      receiver: data.receiver,\n      data: [{ message: data.data[0].message }],\n      timestamp: data.timestamp,\n      txPreviousHash: data.txPreviousHash,\n    };\n    console.log(trx);\n    return this.key.verify(trx, new Buffer.from(data.signature));\n  }\n\n  signTransaction(\n    amount,\n    receiver,\n    txPreviousHash,\n    message = 'A message from me to you!',\n    // eslint-disable-next-line no-unused-vars\n    stake = []\n  ) {\n    const trx = {\n      sender: this.walletPublicKey,\n      amount,\n      receiver,\n      data: [{ message }],\n      timestamp: Date.now(),\n      txPreviousHash,\n    };\n    trx.signature = this.key.sign(trx);\n    return trx;\n  }\n\n  getQRImage() {\n    var qr = qrCode.qrcode(8, 'M');\n    let keyCode = [this.walletPublicKey.a, this.walletPublicKey.b].join('\\n');\n    qr.addData(keyCode);\n    qr.make();\n    return qr.createImgTag(2);\n  }\n}\n"],"names":["navigate","useNavigate","auth","useAuth","error","setError","useState","hiddenFileInput","React","login","privateKey","tempWallet","Wallet","substr","setPrivateKey","key","isPrivate","wallet","_jsxs","Box","children","_jsx","Typography","variant","sx","mt","my","TextField","fullWidth","label","required","placeholder","errors","color","helperText","component","Button","mr","xs","md","onClick","e","preventDefault","loginResults","localStorage","getItem","setAuth","event","current","firstChild","click","Input","onChange","fileUploaded","target","files","reader","FileReader","readAsBinaryString","onload","result","name","ref","type","display","Link","underline","ml","NodeRSA","require","qrCode","HEADER_BANNER","FOOTER_BANNER","constructor","this","generateKeyPair","walletPrivateKey","exportKey","walletPublicKey","a","split","shift","b","setPublicKey","key_1","importKey","join","isPublic","key_2","verifySignature","data","sender","trx","amount","receiver","message","timestamp","txPreviousHash","console","log","verify","Buffer","from","signature","signTransaction","arguments","length","undefined","Date","now","sign","getQRImage","qr","qrcode","keyCode","addData","make","createImgTag"],"sourceRoot":""}
{"version":3,"file":"static/js/4583.9ff0bc1b.chunk.js","mappings":"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","sources":["pages/dashboard/Messages/index.jsx"],"sourcesContent":["import React from 'react';\r\n\r\nimport { Grid, List, ListItem, Button, Card, CardContent, Typography } from '@mui/material';\r\nimport TextField from '@mui/material/TextField';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction MessageList({ messages }) {\r\n  const listRef = React.useRef(null);\r\n\r\n  React.useEffect(() => {\r\n    if (listRef.current) {\r\n      listRef.current.scrollTop = listRef.current.scrollHeight;\r\n    }\r\n  }, [messages]);\r\n\r\n  return (\r\n    <List ref={listRef} style={{ maxHeight: '400px', overflow: 'auto' }}>\r\n      {messages.map((msg, index) => (\r\n        <ListItem key={index}>\r\n          <Card variant=\"outlined\" style={{ width: '100%' }}>\r\n            <CardContent>\r\n              <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                <strong>To:</strong> {msg.to}\r\n              </Typography>\r\n              <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                <strong>Message:</strong> {msg.message}\r\n              </Typography>\r\n              <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                <strong>Date:</strong> {msg.date}\r\n              </Typography>\r\n            </CardContent>\r\n          </Card>\r\n        </ListItem>\r\n      ))}\r\n    </List>\r\n  );\r\n}\r\n\r\nMessageList.propTypes = {\r\n  messages: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      to: PropTypes.string.isRequired,\r\n      message: PropTypes.string.isRequired,\r\n      date: PropTypes.string.isRequired,\r\n    })\r\n  ).isRequired,\r\n};\r\n\r\nexport default function Messages() {\r\n  const [messages, setMessages] = React.useState([\r\n    { to: 'John Doe', message: 'Hello, how are you?', date: '2024-02-14' },\r\n    { to: 'Jane Smith', message: 'Meeting at 3 PM.', date: '2024-02-15' },\r\n    // Add more messages as needed\r\n  ]);\r\n  const [recipient, setRecipient] = React.useState('');\r\n  const [message, setMessage] = React.useState('');\r\n\r\n  function handleSendMessage(event) {\r\n    event.preventDefault();\r\n    const newMessage = {\r\n      to: recipient,\r\n      message: message,\r\n      date: new Date().toISOString().split('T')[0],\r\n    };\r\n    setMessages([...messages, newMessage]);\r\n    setRecipient('');\r\n    setMessage('');\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Grid container spacing={1}>\r\n        <Grid item xs={12}>\r\n          <h2>Message Log</h2>\r\n          <MessageList messages={messages} />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <h2>Send Message</h2>\r\n          <form onSubmit={handleSendMessage} style={{ display: 'flex', flexDirection: 'column', gap: '16px' }}>\r\n            <TextField\r\n              id=\"recipient\"\r\n              name=\"recipient\"\r\n              label=\"Recipient\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              required\r\n              value={recipient}\r\n              onChange={(e) => setRecipient(e.target.value)}\r\n              autoComplete=\"off\"\r\n            />\r\n            <TextField\r\n              id=\"message\"\r\n              name=\"message\"\r\n              label=\"Message\"\r\n              variant=\"outlined\"\r\n              multiline\r\n              rows={4}\r\n              fullWidth\r\n              required\r\n              value={message}\r\n              onChange={(e) => setMessage(e.target.value)}\r\n              autoComplete=\"off\"\r\n            />\r\n            <Button type=\"submit\" variant=\"contained\" color=\"primary\">Send</Button>\r\n          </form>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n"],"names":["MessageList","_ref","messages","listRef","React","current","scrollTop","scrollHeight","_jsx","List","ref","style","maxHeight","overflow","children","map","msg","index","ListItem","Card","variant","width","_jsxs","CardContent","Typography","color","component","to","message","date","Messages","setMessages","recipient","setRecipient","setMessage","Grid","container","spacing","item","xs","onSubmit","event","preventDefault","newMessage","Date","toISOString","split","display","flexDirection","gap","TextField","id","name","label","fullWidth","required","value","onChange","e","target","autoComplete","multiline","rows","Button","type"],"sourceRoot":""}
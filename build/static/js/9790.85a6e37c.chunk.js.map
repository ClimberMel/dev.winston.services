{"version":3,"file":"static/js/9790.85a6e37c.chunk.js","mappings":"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","sources":["pages/ico/index.js"],"sourcesContent":["import React from 'react';\n\nimport {\n  Card,\n  Container,\n  Grid,\n  TextField,\n  Typography,\n  Button,\n  CircularProgress,\n} from '@mui/material';\nimport { JsonRpcProvider, Contract, Wallet, InfuraProvider, parseUnits } from 'ethers';\n\nimport logo from './../../assets/logo_footer.svg';\nimport './index.css';\n\nconst provider = new JsonRpcProvider('https://bsc-dataseed.binance.org/');\nconst pancakeSwapContract = {\n  factory: '0xcA143Ce32Fe78f1f7019d7d551a6402fC5350c73', // PancakeSwap V2 factory\n  router: '0x10ED43C718714eb63d5aA57B78B54704E256024E', // PancakeSwap V2 router\n};\n\nconst paymentTypes = [\n  {\n    image: './assets/icons/wbnb.svg',\n    name: 'WBNB',\n    price: 405.18,\n  },\n  {\n    image: './assets/icons/busd.svg',\n    name: 'BUSD',\n    price: 1,\n  },\n  {\n    image: './assets/icons/rickel.svg',\n    name: 'RKL',\n    price: 12,\n  },\n  {\n    image: './assets/icons/field.svg',\n    name: 'FIELD',\n    price: 20,\n  },\n  {\n    image: './assets/icons/wmue.svg',\n    name: 'WMUE',\n    price: 0.00237,\n  },\n];\n\nconst tokens = {\n  BUSD: '0xe9e7cea3dedca5984780bafc599bd69add087d56',\n  RKL: '0xeca15e1bbff172d545dd6325f3bae7b737906737',\n  WBNB: '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c',\n  WIN: '0x75578ebBefe274F240B8E1b5859cA34f342157D9',\n  FIELD: '0x04D50c032F16a25d1449Ef04D893e95Bcc54d747',\n  WMUE: '0x00abaA93fAF8fDc4f382135a7A56F9Cf7C3EdD21',\n};\nconst router = new Contract(\n  pancakeSwapContract.router,\n  [\n    'function getAmountsOut(uint amountIn, address[] memory path) public view returns (uint[] memory amounts)',\n  ],\n  provider\n);\n\nconst priceHandler = async (token, token2) => {\n  if (token.indexOf('0x') === -1) {\n    token = tokens[token.toUpperCase()];\n  }\n  if (token2.indexOf('0x') === -1) {\n    token2 = tokens[token2.toUpperCase()];\n  }\n  if (token) {\n    // console.log(token, 'TOKENS', token2);\n    const price = await getPrice(token, token2);\n    return { status: 'success', token2: price };\n  } else {\n    return await new Promise.resolve(() => {\n      return {\n        status: 'error',\n        BUSD: 0,\n      };\n    });\n  }\n};\n\nasync function getPrice(inputCurrency, outputCurrency) {\n  const amounts = await router.getAmountsOut(parseUnits('1', 18), [\n    inputCurrency,\n    outputCurrency,\n  ]);\n  return amounts[1].toString() / 1e18;\n}\n\nfunction Ico() {\n  const [selectedPayment, SetSelectedPayment] = React.useState();\n  const [amount, setAmount] = React.useState(1);\n  const [winstonCoin, setWinstonCoin] = React.useState(0);\n  const [isLoading, setIsLoading] = React.useState(false);\n  const [isLoadingPurchase, setIsLoadingPurchase] = React.useState(false);\n\n  const tokenTransactionExecuter = async (\n    to_address,\n    coin_name,\n    send_token_amount\n  ) => {\n    setIsLoadingPurchase(true);\n    window.ethersProvider = new InfuraProvider('ropsten');\n    const privateKEY =\n      'ad9483ce666c5abab10d164deb7c3d60e25bc260070c2bba846507f3e3ce0a99';\n    let wallet = new Wallet(privateKEY);\n    let walletSigner = wallet.connect(window.ethersProvider);\n    let abiResponse;\n    await fetch(\n      'https://api.bscscan.com/api?module=contract&action=getabi&address=0xb5e7ff9a2f33a8a1e31eb79dc14659111f3dd51c&apikey=HH5C3ZYPGVQUT8FIVNIJXGDHQPNXUEC89U',\n      {\n        method: 'GET',\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json',\n        },\n      }\n    )\n      .then((res) => res.json())\n      .then((res) => {\n        const response = { isError: true, message: res.result };\n        if (res.status === '1' && res.message === 'OK') {\n          response.abiFile = JSON.parse(res.result);\n          response.isError = false;\n        }\n        abiResponse = response;\n        // console.log(abiResponse.abiFile);\n      })\n      .catch(() => {\n        console.log('error');\n      });\n    const tokenRouter = new Contract(\n      tokens[coin_name],\n      abiResponse.abiFile,\n      walletSigner\n    );\n    // console.log(tokenRouter);\n    const transactionExecutor = async () => {\n      const abc = await tokenRouter.functions.transfer(\n        to_address,\n        send_token_amount\n      );\n      setIsLoadingPurchase(false);\n      console.log(abc);\n    };\n    transactionExecutor();\n  };\n\n  const checker = async (name) => {\n    setIsLoading(true);\n    if (name === 'RKL') {\n      const WIN = await priceHandler(name, 'WIN');\n      // console.log(WIN, WIN.token2);\n      setWinstonCoin(WIN.token2);\n    } else if (name === 'BUSD') {\n      const RKL = await priceHandler(name, 'RKL');\n      const WIN = await priceHandler('RKL', 'WIN');\n      // console.log(RKL, WIN, RKL.token2 * WIN.token2);\n      setWinstonCoin(RKL.token2 * WIN.token2);\n    } else {\n      const BUSD = await priceHandler(name, 'BUSD');\n      const RKL = await priceHandler('BUSD', 'RKL');\n      const WIN = await priceHandler('RKL', 'WIN');\n      // console.log(BUSD, RKL, WIN, BUSD.token2 * RKL.token2 * WIN.token2);\n      setWinstonCoin(BUSD.token2 * RKL.token2 * WIN.token2);\n    }\n    setIsLoading(false);\n  };\n\n  const handleClick = () => {\n    tokenTransactionExecuter(\n      '0x65DB374cfE32aF9acd9D94771F7617440455be48',\n      selectedPayment.name,\n      amount\n    );\n  };\n  React.useEffect(() => {\n    if (amount < 0) setAmount(0);\n  }, [amount]);\n  React.useEffect(() => {\n    selectedPayment && checker(selectedPayment?.name);\n  }, [selectedPayment]);\n\n  return (\n    <Container>\n      <Grid textAlign={'center'}>\n        <img src={logo} style={{ textAlign: 'center' }} />\n      </Grid>\n      <Typography variant=\"h3\" textAlign={'center'} mt={8} mb={5}>\n        Initial Coin Offering\n      </Typography>\n      <Grid container spacing={{ xs: 2, md: 3 }}>\n        <Grid item xs={12} mb={2}>\n          <Grid container spacing={{ xs: 2, md: 3 }}>\n            <Grid item xs={12} sm={6} md={4}>\n              <Card elevation={0} sx={{ py: 6, px: 2 }}>\n                <Typography variant=\"h4\" textAlign={'center'}>\n                  Price\n                </Typography>\n                <Typography variant=\"h4\" mt={2} textAlign={'center'}>\n                  $150.00 USD\n                </Typography>\n              </Card>\n            </Grid>\n            <Grid item xs={12} sm={6} md={4}>\n              <Card elevation={0} sx={{ py: 6, px: 2 }}>\n                <Typography variant=\"h4\" textAlign={'center'}>\n                  Goal\n                </Typography>\n                <Typography variant=\"h4\" mt={2} textAlign={'center'}>\n                  $1,500,000.00 USD\n                </Typography>\n              </Card>\n            </Grid>\n            <Grid item xs={12} sm={6} md={4}>\n              <Card elevation={0} sx={{ py: 6, px: 2 }}>\n                <Typography variant=\"h4\" textAlign={'center'} color=\"#FFD215\">\n                  Raised\n                </Typography>\n                <Typography\n                  variant=\"h4\"\n                  mt={2}\n                  textAlign={'center'}\n                  color=\"#FFD215\"\n                >\n                  $0.00 USD\n                </Typography>\n              </Card>\n            </Grid>\n          </Grid>\n        </Grid>\n        {paymentTypes.map((item, index) => (\n          <Grid item key={item.name + index} xs={12} sm={6} md={4} lg={2.4}>\n            <Card\n              className={`icoCard ${\n                selectedPayment?.name === item.name && 'activeIcoCard'\n              }`}\n              onClick={() => SetSelectedPayment(item)}\n              elevation={0}\n              sx={{\n                py: { xs: 2.5, md: 5 },\n                display: 'flex',\n                flexDirection: 'column',\n                alignItems: 'center',\n                cursor: 'pointer',\n              }}\n            >\n              <Grid>\n                <img\n                  src={item.image}\n                  style={{\n                    borderRadius: '100px',\n                  }}\n                />\n              </Grid>\n              <Typography variant=\"h6\" textAlign={'center'} mt={2}>\n                {item.name}\n              </Typography>\n              <Typography variant=\"subtitle1\" textAlign={'center'}>\n                1 {item.name} ~= ${item.price} USD\n              </Typography>\n            </Card>\n          </Grid>\n        ))}\n      </Grid>\n      {selectedPayment && (\n        <Card elevation={0} sx={{ mt: 6, p: 5, textAlign: 'center' }}>\n          <Grid container display=\"flex\" justifyContent={'center'}>\n            <Grid item xs={12} sm={8} md={6} lg={5}>\n              <TextField\n                fullWidth\n                type={'number'}\n                value={amount}\n                onChange={(e) => setAmount(e.target.value)}\n                InputProps={{ inputProps: { min: 0 } }}\n                variant=\"outlined\"\n                label={selectedPayment?.name}\n                placeholder={`0.00 ${selectedPayment?.name}`}\n              />\n              <Grid mt={3}>\n                {isLoading ? (\n                  <CircularProgress />\n                ) : (\n                  <Typography variant=\"h5\">\n                    {amount * winstonCoin} WIN\n                  </Typography>\n                )}\n              </Grid>\n              <Button\n                fullWidth\n                disabled={isLoading || isLoadingPurchase}\n                variant=\"contained\"\n                color=\"secondary\"\n                sx={{ mt: 3 }}\n                onClick={handleClick}\n              >\n                {isLoadingPurchase && (\n                  <CircularProgress size={24} sx={{ mr: 2 }} />\n                )}\n                Confirm purchase\n              </Button>\n            </Grid>\n          </Grid>\n        </Card>\n      )}\n    </Container>\n  );\n}\n\nexport default Ico;\n"],"names":["provider","JsonRpcProvider","paymentTypes","image","name","price","tokens","BUSD","RKL","WBNB","WIN","FIELD","WMUE","router","Contract","priceHandler","async","token","token2","indexOf","toUpperCase","status","inputCurrency","outputCurrency","getAmountsOut","parseUnits","toString","getPrice","Promise","resolve","selectedPayment","SetSelectedPayment","React","amount","setAmount","winstonCoin","setWinstonCoin","isLoading","setIsLoading","isLoadingPurchase","setIsLoadingPurchase","checker","_jsxs","Container","children","_jsx","Grid","textAlign","src","logo","style","Typography","variant","mt","mb","container","spacing","xs","md","item","sm","Card","elevation","sx","py","px","color","map","index","lg","className","onClick","display","flexDirection","alignItems","cursor","borderRadius","p","justifyContent","TextField","fullWidth","type","value","onChange","e","target","InputProps","inputProps","min","label","placeholder","CircularProgress","Button","disabled","handleClick","to_address","coin_name","send_token_amount","window","ethersProvider","InfuraProvider","abiResponse","walletSigner","Wallet","connect","fetch","method","headers","Accept","then","res","json","response","isError","message","result","abiFile","JSON","parse","catch","console","log","tokenRouter","abc","functions","transfer","transactionExecutor","tokenTransactionExecuter","size","mr"],"sourceRoot":""}
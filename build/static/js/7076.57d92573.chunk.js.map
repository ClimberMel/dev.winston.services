{"version":3,"file":"static/js/7076.57d92573.chunk.js","mappings":"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","sources":["components/common/CheckBox.js","components/common/DropDown.js","components/common/TextField.js","pages/wizard/pages/coin/StepBlockReward.js","../node_modules/@mui/material/Card/cardClasses.js","../node_modules/@mui/material/Card/Card.js","../node_modules/@mui/material/Divider/dividerClasses.js","../node_modules/@mui/material/ListItemIcon/listItemIconClasses.js","../node_modules/@mui/material/ListItemText/listItemTextClasses.js","../node_modules/@mui/material/MenuItem/menuItemClasses.js","../node_modules/@mui/material/MenuItem/MenuItem.js"],"sourcesContent":["import React from 'react';\n\nimport {\n  Checkbox,\n  FormControl,\n  FormControlLabel,\n  FormGroup,\n  FormHelperText,\n  Grid,\n} from '@mui/material';\nimport { useField, useFormikContext } from 'formik';\nimport { PropTypes } from 'prop-types';\n\nconst CheckboxWrapper = ({\n  name,\n  label,\n  helperText = '',\n  onChange,\n  ...otherProps\n}) => {\n  const { setFieldValue } = useFormikContext();\n  const [field, meta] = useField(name);\n\n  const handleChange = (evt) => {\n    const { checked } = evt.target;\n    setFieldValue(name, checked);\n    if (onChange) {\n      onChange(checked);\n    }\n  };\n\n  const configCheckbox = {\n    ...field,\n    ...otherProps,\n    checked: field.value,\n    onChange: handleChange,\n  };\n\n  const configFormControl = {};\n  if (meta && meta.touched && meta.error) {\n    configFormControl.error = true;\n  }\n\n  return (\n    <FormControl {...configFormControl}>\n      <Grid display={'flex'} alignItems=\"center\">\n        <FormGroup>\n          <FormControlLabel\n            control={<Checkbox {...configCheckbox} />}\n            label={label}\n          />\n        </FormGroup>\n        {helperText && (\n          <FormHelperText sx={{ ml: -1 }}>\n            ({configFormControl.error ? label + 'must be selected' : helperText}\n            )\n          </FormHelperText>\n        )}\n      </Grid>\n    </FormControl>\n  );\n};\n\nCheckboxWrapper.propTypes = {\n  name: PropTypes.string,\n  label: PropTypes.string,\n  helperText: PropTypes.string,\n  onChange: PropTypes.func,\n};\n\nexport default CheckboxWrapper;\n","import React from 'react';\n\nimport { TextField, MenuItem } from '@mui/material';\nimport { useField, useFormikContext } from 'formik';\nimport { PropTypes } from 'prop-types';\n\nconst SelectWrapper = ({ name, options, onChange, ...otherProps }) => {\n  const { setFieldValue } = useFormikContext();\n  const [field, mata] = useField(name);\n  const handleChange = (evt) => {\n    const { value } = evt.target;\n    setFieldValue(name, value);\n    if (onChange) {\n      onChange(value);\n    }\n  };\n  const configSelect = {\n    ...field,\n    ...otherProps,\n    select: true,\n    variant: 'outlined',\n    fullWidth: true,\n    onChange: handleChange,\n  };\n  if (mata && mata.touched && mata.error) {\n    configSelect.error = true;\n    configSelect.helperText = mata.error;\n  }\n  return (\n    <TextField {...configSelect}>\n      {options?.map((value) => {\n        return (\n          <MenuItem key={value} value={value}>\n            {value}\n          </MenuItem>\n        );\n      })}\n    </TextField>\n  );\n};\n\nSelectWrapper.propTypes = {\n  name: PropTypes.string,\n  options: PropTypes.array,\n  onChange: PropTypes.func,\n};\n\nexport default SelectWrapper;\n","import React from 'react';\n\nimport { TextField } from '@mui/material';\nimport { useField } from 'formik';\nimport { PropTypes } from 'prop-types';\n\nconst TextFieldWrapper = ({ name, onChange, ...otherProps }) => {\n  const [field, meta, { setValue }] = useField(name);\n\n  const handleChange = (e) => {\n    setValue(e.target.value);\n    if (onChange) {\n      onChange(e.target.value);\n    }\n  };\n\n  const configTextField = {\n    ...field,\n    ...otherProps,\n    fullWidth: true,\n    variant: 'outlined',\n    onChange: handleChange,\n  };\n  if (meta && meta.touched && meta.error) {\n    configTextField.error = true;\n    configTextField.helperText = meta.error;\n  }\n  // console.log('render');\n  return <TextField autoComplete=\"off\" {...configTextField} />;\n};\n\nTextFieldWrapper.propTypes = {\n  name: PropTypes.node,\n  onChange: PropTypes.func,\n};\n\nexport default TextFieldWrapper;\n","import React from 'react';\n\nimport { Grid, Card, Button, Paper, Typography } from '@mui/material';\nimport { Formik, Form } from 'formik';\nimport { PropTypes } from 'prop-types';\nimport { useOutletContext } from 'react-router-dom';\nimport * as Yup from 'yup';\n\nimport CheckBox from './../../../../components/common/CheckBox';\nimport DropDown from './../../../../components/common/DropDown';\nimport TextField from './../../../../components/common/TextField';\nfunction StepCoinBlockReward({ wizardCoinData, setWizardCoinData }) {\n  const { previous, next } = useOutletContext();\n\n  const superBlockCal = (\n    (parseInt(wizardCoinData.blockReward) *\n      parseInt(wizardCoinData.superblockReward)) /\n    100\n  ).toFixed(8);\n\n  const masternodeCal = (\n    (superBlockCal * parseInt(wizardCoinData.masternodeReward)) /\n    100\n  ).toFixed(8);\n\n  const blockCal = (superBlockCal - masternodeCal).toFixed(8);\n\n  const budgetCal =\n    (parseInt(wizardCoinData.blockRewardPos).toFixed(8) / 100) *\n    wizardCoinData.superblockReward *\n    288 *\n    30;\n\n  const handleSubmit = ({\n    lastPowBlock,\n    blockRewardPos,\n    superblockReward,\n    masternodeReward,\n  }) => {\n    setWizardCoinData({\n      lastPowBlock,\n      blockRewardPos,\n      superblockReward,\n      masternodeReward,\n    });\n    next();\n  };\n\n  const FORM_VALIDATION = Yup.object().shape({\n    lastPowBlock:\n      [\n        'Scrypt- Proof of Work and Proof of Stack',\n        'Proof of Work and Proof of Stake + Masternode',\n      ].includes(wizardCoinData.coinAlgorithm) &&\n      Yup.number()\n        .required('The “Last PoW block” value cannot be empty.')\n        .min(\n          1000,\n          'The “Last PoW block” value must be a number between 1000 and 100000000.'\n        )\n        .max(\n          100000000,\n          'The “Last PoW block” value must be a number between 1000 and 100000000.'\n        ),\n    blockReward: Yup.number()\n      .required('The “Block reward” value cannot be empty.')\n      .min(1, 'The “Block reward” value must be a number between 1 and 10000.')\n      .max(\n        10000,\n        'The “Block reward” value must be a number between 1 and 10000.'\n      ),\n    blockRewardPos:\n      [\n        'Scrypt- Proof of Work and Proof of Stack',\n        'Proof of Work and Proof of Stake + Masternode',\n      ].includes(wizardCoinData.coinAlgorithm) &&\n      Yup.number()\n        .required('The “Block reward (PoS)” value cannot be empty.')\n        .min(\n          1,\n          'The “Block reward (PoS)” value must be a number between 1 and 10000.'\n        )\n        .max(\n          10000,\n          'The “Block reward (PoS)” value must be a number between 1 and 10000.'\n        ),\n    superblockReward:\n      [\n        'X11 - Proof of Work + Masternode',\n        'Proof of Work and Proof of Stake + Masternode',\n      ].includes(wizardCoinData.coinAlgorithm) &&\n      Yup.number()\n        .required('The “Superblock reward” value cannot be empty.')\n        .min(\n          1,\n          'The “Superblock reward” value must be a number between 1 and 99.'\n        )\n        .max(\n          99,\n          'The “Superblock reward” value must be a number between 1 and 99.'\n        ),\n    masternodeReward:\n      [\n        'X11 - Proof of Work + Masternode',\n        'Proof of Work and Proof of Stake + Masternode',\n      ].includes(wizardCoinData.coinAlgorithm) &&\n      Yup.number()\n        .required('The “Masternode reward” value cannot be empty.')\n        .min(\n          1,\n          'The “Masternode reward” value must be a number between 1 and 99.'\n        )\n        .max(\n          99,\n          'The “Masternode reward” value must be a number between 1 and 99.'\n        ),\n    blockHalving:\n      [\n        'Script - Proof of Work',\n        'SHA-256 - Proof of Work',\n        'X11 - Proof of Work + Masternode',\n      ].includes(wizardCoinData.coinAlgorithm) &&\n      Yup.number()\n        .required('The “Block halving” value cannot be empty.')\n        .min(\n          10,\n          'The “Block halving” value must be a number between 10 and 4000000.'\n        )\n        .max(\n          4000000,\n          'The “Block halving” value must be a number between 10 and 4000000.'\n        ),\n    coinSupplyWithoutPremine: Yup.number()\n      .required('The “Coin supply” value cannot be empty.')\n      .min(\n        10,\n        'The “Coin supply” value must be a number between 10 and 9999999999.'\n      )\n      .max(\n        9999999999,\n        'The “Coin supply” value must be a number between 10 and 9999999999.'\n      ),\n    premineAmount: Yup.number()\n      .required('The “Premine amount” value cannot be empty.')\n      .min(\n        0,\n        'The “Premine amount” value must be a number between 1 and 9999999999.'\n      )\n      .max(\n        9999999999,\n        'The “Premine amount” value must be a number between 1 and 9999999999.'\n      ),\n  });\n\n  return (\n    <Grid item xs={12}>\n      <Formik\n        initialValues={{ ...wizardCoinData }}\n        validationSchema={FORM_VALIDATION}\n        onSubmit={handleSubmit}\n      >\n        <Form>\n          <Card sx={{ p: { xs: 2.5, sm: 4, md: 5, lg: 6 } }} elevation={0}>\n            <Grid display={'flex'} flexDirection=\"column\" gap={3}>\n              {[\n                'Scrypt- Proof of Work and Proof of Stack',\n                'Proof of Work and Proof of Stake + Masternode',\n              ].includes(wizardCoinData.coinAlgorithm) && (\n                <TextField\n                  name=\"lastPowBlock\"\n                  label={'Last PoW block'}\n                  placeholder={'1000'}\n                  helperText=\"Last block height that can be mined with Proof of Work.\"\n                  autoComplete=\"off\"\n                  onChange={(value) =>\n                    setWizardCoinData({\n                      lastPowBlock: parseInt(value),\n                      coinSupplyWithoutPremine:\n                        wizardCoinData.fullPremine === true\n                          ? 0\n                          : value * wizardCoinData.blockReward,\n                      coinSupplyWithPremine:\n                        wizardCoinData.fullPremine === true\n                          ? wizardCoinData.premineAmount\n                          : value * wizardCoinData.blockReward,\n                    })\n                  }\n                />\n              )}\n\n              <TextField\n                disabled={wizardCoinData.fullPremine}\n                name=\"blockReward\"\n                label={'Block reward'}\n                placeholder={'50'}\n                helperText=\"Number of coins received for mining a block with Proof of Work.\"\n                autoComplete=\"off\"\n                onChange={(value) =>\n                  setWizardCoinData({\n                    blockReward: parseInt(value),\n                    coinSupplyWithoutPremine:\n                      wizardCoinData.coinAlgorithm ===\n                        'Scrypt- Proof of Work and Proof of Stack' ||\n                      wizardCoinData.coinAlgorithm ===\n                        'Proof of Work and Proof of Stake + Masternode'\n                        ? value * wizardCoinData.lastPowBlock\n                        : value * wizardCoinData.blockHalving * 2,\n                    coinSupplyWithPremine:\n                      wizardCoinData.coinAlgorithm ===\n                        'Scrypt- Proof of Work and Proof of Stack' ||\n                      wizardCoinData.coinAlgorithm ===\n                        'Proof of Work and Proof of Stake + Masternode'\n                        ? value * wizardCoinData.lastPowBlock\n                        : value * wizardCoinData.blockHalving * 2,\n                  })\n                }\n              />\n              {[\n                'Scrypt- Proof of Work and Proof of Stack',\n                'Proof of Work and Proof of Stake + Masternode',\n              ].includes(wizardCoinData.coinAlgorithm) && (\n                <TextField\n                  name=\"blockRewardPos\"\n                  label={'Block reward (PoS)'}\n                  placeholder={'5'}\n                  helperText=\"Number of coins received for mining a block with Proof of Stake.\"\n                  autoComplete=\"off\"\n                  onChange={(value) => {\n                    setWizardCoinData({\n                      blockRewardPos: value,\n                    });\n                  }}\n                />\n              )}\n              {[\n                'X11 - Proof of Work + Masternode',\n                'Proof of Work and Proof of Stake + Masternode',\n              ].includes(wizardCoinData.coinAlgorithm) && (\n                <>\n                  <TextField\n                    name=\"superblockReward\"\n                    label={'Superblock reward (%)'}\n                    placeholder={'10'}\n                    helperText=\"Percentage of the block reward reserved for decentralized governance budget.\"\n                    autoComplete=\"off\"\n                    onChange={(value) => {\n                      setWizardCoinData({\n                        superblockReward: value,\n                      });\n                    }}\n                  />\n                  {wizardCoinData.coinAlgorithm ===\n                  'Proof of Work and Proof of Stake + Masternode' ? (\n                    <Paper\n                      elevation={0}\n                      sx={{ padding: '20px', backgroundColor: '#4F409A' }}\n                    >\n                      <Typography>\n                        <strong>Governance budget structure</strong>\n                      </Typography>\n                      <Typography>\n                        Estimated amount of blocks per day: <strong>288</strong>\n                      </Typography>\n                      <Typography>\n                        Governance budget per month: ((\n                        <strong>\n                          {' '}\n                          {parseInt(wizardCoinData.blockRewardPos).toFixed(\n                            8\n                          )}{' '}\n                        </strong>\n                        / 100) *{' '}\n                        <strong>{wizardCoinData.superblockReward}</strong>) *\n                        <strong>288</strong> * 30 =\n                        <strong>{budgetCal.toFixed(8)}</strong>\n                      </Typography>\n                    </Paper>\n                  ) : (\n                    <></>\n                  )}\n                  <TextField\n                    name=\"masternodeReward\"\n                    label={'Masternode reward (%)'}\n                    placeholder={'50'}\n                    helperText=\"Percentage of the block reward.\"\n                    autoComplete=\"off\"\n                    onChange={(value) => {\n                      setWizardCoinData({\n                        masternodeReward: value,\n                      });\n                    }}\n                  />\n                  {wizardCoinData.coinAlgorithm ===\n                  'X11 - Proof of Work + Masternode' ? (\n                    <Paper\n                      elevation={0}\n                      sx={{ padding: '20px', backgroundColor: '#4F409A' }}\n                    >\n                      <Typography>\n                        <strong>Block reward structure</strong>\n                      </Typography>\n                      <Typography>\n                        Superblock reward: <strong>{superBlockCal}</strong>,\n                        masternode reward:\n                        <strong>{masternodeCal}</strong>, block reward:{' '}\n                        <strong>{blockCal}</strong>\n                      </Typography>\n                    </Paper>\n                  ) : (\n                    <></>\n                  )}\n                  {wizardCoinData.coinAlgorithm ===\n                  'Proof of Work and Proof of Stake + Masternode' ? (\n                    <Paper\n                      elevation={0}\n                      sx={{ padding: '20px', backgroundColor: '#4F409A' }}\n                    >\n                      <Typography>\n                        <strong>Block reward structure</strong>\n                      </Typography>\n                      <Typography>\n                        Proof-of-Work phase: Masternode reward:{' '}\n                        <strong>\n                          {' '}\n                          {(\n                            (wizardCoinData.blockReward / 100) *\n                            wizardCoinData.masternodeReward\n                          ).toFixed(8)}\n                        </strong>\n                        , block reward:{' '}\n                        <strong>\n                          {' '}\n                          {(\n                            (wizardCoinData.blockReward / 100) *\n                            (100 - wizardCoinData.masternodeReward)\n                          ).toFixed(8)}\n                        </strong>\n                      </Typography>\n                      <Typography>\n                        Proof-of-Stake phase: Masternode reward:{' '}\n                        <strong>\n                          {' '}\n                          {(\n                            (wizardCoinData.blockRewardPos / 100) *\n                            wizardCoinData.masternodeReward\n                          ).toFixed(8)}\n                        </strong>\n                        , block reward:{' '}\n                        <strong>\n                          {' '}\n                          {(\n                            (wizardCoinData.blockRewardPos / 100) *\n                            (100 - wizardCoinData.masternodeReward)\n                          ).toFixed(8)}\n                        </strong>\n                      </Typography>\n                    </Paper>\n                  ) : (\n                    <></>\n                  )}\n                </>\n              )}\n\n              {[\n                'Script - Proof of Work',\n                'SHA-256 - Proof of Work',\n                'X11 - Proof of Work + Masternode',\n              ].includes(wizardCoinData.coinAlgorithm) && (\n                <TextField\n                  disabled={wizardCoinData.fullPremine}\n                  name=\"blockHalving\"\n                  label={'Block halving'}\n                  placeholder={'210000'}\n                  helperText=\"Block halving splits the block reward in half.\"\n                  autoComplete=\"off\"\n                  onChange={(value) =>\n                    setWizardCoinData({\n                      blockHalving: value,\n                      coinSupplyWithoutPremine:\n                        value * wizardCoinData.blockReward * 2,\n                      coinSupplyWithPremine:\n                        value * wizardCoinData.blockReward * 2 +\n                        parseInt(wizardCoinData.premineAmount),\n                    })\n                  }\n                />\n              )}\n              <TextField\n                disabled={!wizardCoinData.fullPremine}\n                name=\"coinSupplyWithoutPremine\"\n                label={'Coin Supply without premine'}\n                placeholder={'21000000'}\n                helperText=\"Total number of coins your coin will create.\"\n                autoComplete=\"off\"\n                onChange={(value) =>\n                  setWizardCoinData({\n                    coinSupplyWithoutPremine: value,\n                    premineAmount: value,\n                    coinSupplyWithPremine: value,\n                  })\n                }\n                value={wizardCoinData.coinSupplyWithoutPremine}\n              />\n              <DropDown\n                disabled={wizardCoinData.fullPremine}\n                name=\"premine\"\n                label={'Premine'}\n                options={['Yes', 'No']}\n                helperText=\"Premine\"\n                onChange={(value) =>\n                  setWizardCoinData({\n                    premine: value,\n                    coinSupplyWithPremine:\n                      value === 'Yes'\n                        ? parseInt(wizardCoinData.premineAmount) +\n                          parseInt(wizardCoinData.coinSupplyWithoutPremine)\n                        : wizardCoinData.coinSupplyWithoutPremine,\n                  })\n                }\n              />\n              {[\n                'Script - Proof of Work',\n                'Scrypt- Proof of Work and Proof of Stack',\n                'SHA-256 - Proof of Work',\n              ].includes(wizardCoinData.coinAlgorithm) && (\n                <CheckBox\n                  disabled={wizardCoinData.premine === 'No' ? true : false}\n                  name=\"fullPremine\"\n                  label={'100% premine'}\n                  onChange={(value) =>\n                    setWizardCoinData({\n                      fullPremine: value,\n                      premineAmount: wizardCoinData.coinSupplyWithoutPremine,\n                      coinSupplyWithPremine: value\n                        ? wizardCoinData.coinSupplyWithoutPremine\n                        : parseInt(wizardCoinData.coinSupplyWithoutPremine) +\n                          parseInt(wizardCoinData.premineAmount),\n                      coinSupplyWithoutPremine:\n                        wizardCoinData.coinAlgorithm ===\n                          'Script - Proof of Work' ||\n                        wizardCoinData.coinAlgorithm ===\n                          'SHA-256 - Proof of Work'\n                          ? wizardCoinData.blockReward *\n                            wizardCoinData.blockHalving *\n                            2\n                          : wizardCoinData.lastPowBlock *\n                            wizardCoinData.blockReward,\n                    })\n                  }\n                  helperText=\"Your total coin supply is available after the mining of\n                      block #1.\"\n                />\n              )}\n              <TextField\n                disabled={\n                  wizardCoinData.fullPremine || wizardCoinData.premine === 'No'\n                    ? true\n                    : false\n                }\n                name=\"premineAmount\"\n                label={'Premine amount'}\n                placeholder={'0'}\n                helperText=\"Number of coins that is available after the mining of block #1.\"\n                autoComplete=\"off\"\n                value={wizardCoinData.premineAmount}\n                onChange={(value) =>\n                  setWizardCoinData({\n                    premineAmount: value,\n                    coinSupplyWithPremine:\n                      parseInt(value) +\n                      parseInt(wizardCoinData.coinSupplyWithoutPremine),\n                  })\n                }\n              />\n              <TextField\n                disabled\n                name=\"coinSupplyWithPremine\"\n                label={'Coin supply with premine'}\n                placeholder={'21000000'}\n                helperText=\"Total number of coins your coin will create.\"\n                autoComplete=\"off\"\n                value={wizardCoinData.coinSupplyWithPremine}\n              />\n            </Grid>\n          </Card>\n          <Grid mt={4} display=\"flex\" justifyContent=\"flex-end\" gap={2}>\n            <Button\n              variant=\"outlined\"\n              onClick={previous}\n              onChange={() => {\n                setWizardCoinData({ fullPremine: false });\n              }}\n              sx={{ width: { xs: '50%', sm: 'auto' } }}\n            >\n              Previous\n            </Button>\n            <Button\n              variant=\"contained\"\n              color=\"secondary\"\n              type=\"submit\"\n              sx={{ width: { xs: '50%', sm: 'auto' } }}\n            >\n              Next\n            </Button>\n          </Grid>\n        </Form>\n      </Formik>\n    </Grid>\n  );\n}\nStepCoinBlockReward.propTypes = {\n  wizardData: PropTypes.object,\n  wizardCoinData: PropTypes.object,\n  setWizardCoinData: PropTypes.func,\n};\nexport default StepCoinBlockReward;\n","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getCardUtilityClass(slot) {\n  return generateUtilityClass('MuiCard', slot);\n}\nconst cardClasses = generateUtilityClasses('MuiCard', ['root']);\nexport default cardClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"raised\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport Paper from '../Paper';\nimport { getCardUtilityClass } from './cardClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardUtilityClass, classes);\n};\n\nconst CardRoot = styled(Paper, {\n  name: 'MuiCard',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(() => {\n  return {\n    overflow: 'hidden'\n  };\n});\nconst Card = /*#__PURE__*/React.forwardRef(function Card(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCard'\n  });\n\n  const {\n    className,\n    raised = false\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    raised\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardRoot, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : undefined,\n    ref: ref,\n    ownerState: ownerState\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the card will use raised styling.\n   * @default false\n   */\n  raised: chainPropTypes(PropTypes.bool, props => {\n    if (props.raised && props.variant === 'outlined') {\n      return new Error('MUI: Combining `raised={true}` with `variant=\"outlined\"` has no effect.');\n    }\n\n    return null;\n  }),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Card;","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getDividerUtilityClass(slot) {\n  return generateUtilityClass('MuiDivider', slot);\n}\nconst dividerClasses = generateUtilityClasses('MuiDivider', ['root', 'absolute', 'fullWidth', 'inset', 'middle', 'flexItem', 'light', 'vertical', 'withChildren', 'withChildrenVertical', 'textAlignRight', 'textAlignLeft', 'wrapper', 'wrapperVertical']);\nexport default dividerClasses;","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getListItemIconUtilityClass(slot) {\n  return generateUtilityClass('MuiListItemIcon', slot);\n}\nconst listItemIconClasses = generateUtilityClasses('MuiListItemIcon', ['root', 'alignItemsFlexStart']);\nexport default listItemIconClasses;","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getListItemTextUtilityClass(slot) {\n  return generateUtilityClass('MuiListItemText', slot);\n}\nconst listItemTextClasses = generateUtilityClasses('MuiListItemText', ['root', 'multiline', 'dense', 'inset', 'primary', 'secondary']);\nexport default listItemTextClasses;","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getMenuItemUtilityClass(slot) {\n  return generateUtilityClass('MuiMenuItem', slot);\n}\nconst menuItemClasses = generateUtilityClasses('MuiMenuItem', ['root', 'focusVisible', 'dense', 'disabled', 'divider', 'gutters', 'selected']);\nexport default menuItemClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"autoFocus\", \"component\", \"dense\", \"divider\", \"disableGutters\", \"focusVisibleClassName\", \"role\", \"tabIndex\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { alpha } from '@mui/system';\nimport styled, { rootShouldForwardProp } from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport ListContext from '../List/ListContext';\nimport ButtonBase from '../ButtonBase';\nimport useEnhancedEffect from '../utils/useEnhancedEffect';\nimport useForkRef from '../utils/useForkRef';\nimport { dividerClasses } from '../Divider';\nimport { listItemIconClasses } from '../ListItemIcon';\nimport { listItemTextClasses } from '../ListItemText';\nimport menuItemClasses, { getMenuItemUtilityClass } from './menuItemClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const overridesResolver = (props, styles) => {\n  const {\n    ownerState\n  } = props;\n  return [styles.root, ownerState.dense && styles.dense, ownerState.divider && styles.divider, !ownerState.disableGutters && styles.gutters];\n};\n\nconst useUtilityClasses = ownerState => {\n  const {\n    disabled,\n    dense,\n    divider,\n    disableGutters,\n    selected,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', dense && 'dense', disabled && 'disabled', !disableGutters && 'gutters', divider && 'divider', selected && 'selected']\n  };\n  const composedClasses = composeClasses(slots, getMenuItemUtilityClass, classes);\n  return _extends({}, classes, composedClasses);\n};\n\nconst MenuItemRoot = styled(ButtonBase, {\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === 'classes',\n  name: 'MuiMenuItem',\n  slot: 'Root',\n  overridesResolver\n})(({\n  theme,\n  ownerState\n}) => _extends({}, theme.typography.body1, {\n  display: 'flex',\n  justifyContent: 'flex-start',\n  alignItems: 'center',\n  position: 'relative',\n  textDecoration: 'none',\n  minHeight: 48,\n  paddingTop: 6,\n  paddingBottom: 6,\n  boxSizing: 'border-box',\n  whiteSpace: 'nowrap'\n}, !ownerState.disableGutters && {\n  paddingLeft: 16,\n  paddingRight: 16\n}, ownerState.divider && {\n  borderBottom: `1px solid ${theme.palette.divider}`,\n  backgroundClip: 'padding-box'\n}, {\n  '&:hover': {\n    textDecoration: 'none',\n    backgroundColor: theme.palette.action.hover,\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: 'transparent'\n    }\n  },\n  [`&.${menuItemClasses.selected}`]: {\n    backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity),\n    [`&.${menuItemClasses.focusVisible}`]: {\n      backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.focusOpacity)\n    }\n  },\n  [`&.${menuItemClasses.selected}:hover`]: {\n    backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.hoverOpacity),\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity)\n    }\n  },\n  [`&.${menuItemClasses.focusVisible}`]: {\n    backgroundColor: theme.palette.action.focus\n  },\n  [`&.${menuItemClasses.disabled}`]: {\n    opacity: theme.palette.action.disabledOpacity\n  },\n  [`& + .${dividerClasses.root}`]: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1)\n  },\n  [`& + .${dividerClasses.inset}`]: {\n    marginLeft: 52\n  },\n  [`& .${listItemTextClasses.root}`]: {\n    marginTop: 0,\n    marginBottom: 0\n  },\n  [`& .${listItemTextClasses.inset}`]: {\n    paddingLeft: 36\n  },\n  [`& .${listItemIconClasses.root}`]: {\n    minWidth: 36\n  }\n}, !ownerState.dense && {\n  [theme.breakpoints.up('sm')]: {\n    minHeight: 'auto'\n  }\n}, ownerState.dense && _extends({\n  minHeight: 32,\n  // https://material.io/components/menus#specs > Dense\n  paddingTop: 4,\n  paddingBottom: 4\n}, theme.typography.body2, {\n  [`& .${listItemIconClasses.root} svg`]: {\n    fontSize: '1.25rem'\n  }\n})));\nconst MenuItem = /*#__PURE__*/React.forwardRef(function MenuItem(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiMenuItem'\n  });\n\n  const {\n    autoFocus = false,\n    component = 'li',\n    dense = false,\n    divider = false,\n    disableGutters = false,\n    focusVisibleClassName,\n    role = 'menuitem',\n    tabIndex: tabIndexProp\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const context = React.useContext(ListContext);\n  const childContext = {\n    dense: dense || context.dense || false,\n    disableGutters\n  };\n  const menuItemRef = React.useRef(null);\n  useEnhancedEffect(() => {\n    if (autoFocus) {\n      if (menuItemRef.current) {\n        menuItemRef.current.focus();\n      } else if (process.env.NODE_ENV !== 'production') {\n        console.error('MUI: Unable to set focus to a MenuItem whose component has not been rendered.');\n      }\n    }\n  }, [autoFocus]);\n\n  const ownerState = _extends({}, props, {\n    dense: childContext.dense,\n    divider,\n    disableGutters\n  });\n\n  const classes = useUtilityClasses(props);\n  const handleRef = useForkRef(menuItemRef, ref);\n  let tabIndex;\n\n  if (!props.disabled) {\n    tabIndex = tabIndexProp !== undefined ? tabIndexProp : -1;\n  }\n\n  return /*#__PURE__*/_jsx(ListContext.Provider, {\n    value: childContext,\n    children: /*#__PURE__*/_jsx(MenuItemRoot, _extends({\n      ref: handleRef,\n      role: role,\n      tabIndex: tabIndex,\n      component: component,\n      focusVisibleClassName: clsx(classes.focusVisible, focusVisibleClassName)\n    }, other, {\n      ownerState: ownerState,\n      classes: classes\n    }))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? MenuItem.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the list item is focused during the first mount.\n   * Focus will also be triggered if the value changes from false to true.\n   * @default false\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, compact vertical padding designed for keyboard and mouse input is used.\n   * The prop defaults to the value inherited from the parent Menu component.\n   * @default false\n   */\n  dense: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the left and right padding is removed.\n   * @default false\n   */\n  disableGutters: PropTypes.bool,\n\n  /**\n   * If `true`, a 1px light border is added to the bottom of the menu item.\n   * @default false\n   */\n  divider: PropTypes.bool,\n\n  /**\n   * This prop can help identify which element has keyboard focus.\n   * The class name will be applied when the element gains the focus through keyboard interaction.\n   * It's a polyfill for the [CSS :focus-visible selector](https://drafts.csswg.org/selectors-4/#the-focus-visible-pseudo).\n   * The rationale for using this feature [is explained here](https://github.com/WICG/focus-visible/blob/HEAD/explainer.md).\n   * A [polyfill can be used](https://github.com/WICG/focus-visible) to apply a `focus-visible` class to other components\n   * if needed.\n   */\n  focusVisibleClassName: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  role: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .string,\n\n  /**\n   * @ignore\n   */\n  selected: PropTypes.bool,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * @default 0\n   */\n  tabIndex: PropTypes.number\n} : void 0;\nexport default MenuItem;"],"names":["_ref","name","label","helperText","onChange","otherProps","setFieldValue","useFormikContext","field","meta","useField","configCheckbox","checked","value","evt","target","configFormControl","touched","error","_jsx","FormControl","children","_jsxs","Grid","display","alignItems","FormGroup","FormControlLabel","control","Checkbox","FormHelperText","sx","ml","options","mata","configSelect","select","variant","fullWidth","TextField","map","MenuItem","setValue","configTextField","e","autoComplete","wizardCoinData","setWizardCoinData","previous","next","useOutletContext","superBlockCal","parseInt","blockReward","superblockReward","toFixed","masternodeCal","masternodeReward","blockCal","budgetCal","blockRewardPos","FORM_VALIDATION","Yup","shape","lastPowBlock","includes","coinAlgorithm","required","min","max","blockHalving","coinSupplyWithoutPremine","premineAmount","item","xs","Formik","initialValues","validationSchema","onSubmit","_ref2","Form","Card","p","sm","md","lg","elevation","flexDirection","gap","placeholder","fullPremine","coinSupplyWithPremine","disabled","_Fragment","Paper","padding","backgroundColor","Typography","DropDown","premine","CheckBox","mt","justifyContent","Button","onClick","width","color","type","getCardUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","CardRoot","styled","overridesResolver","props","styles","root","overflow","React","inProps","ref","useThemeProps","className","raised","other","_objectWithoutPropertiesLoose","ownerState","_extends","classes","composeClasses","useUtilityClasses","clsx","undefined","getDividerUtilityClass","getListItemIconUtilityClass","getListItemTextUtilityClass","getMenuItemUtilityClass","MenuItemRoot","ButtonBase","shouldForwardProp","prop","rootShouldForwardProp","dense","divider","disableGutters","gutters","theme","typography","body1","position","textDecoration","minHeight","paddingTop","paddingBottom","boxSizing","whiteSpace","paddingLeft","paddingRight","borderBottom","palette","backgroundClip","action","hover","menuItemClasses","selected","alpha","primary","main","selectedOpacity","focusVisible","focusOpacity","hoverOpacity","focus","opacity","disabledOpacity","dividerClasses","marginTop","spacing","marginBottom","inset","marginLeft","listItemTextClasses","listItemIconClasses","minWidth","breakpoints","up","body2","fontSize","autoFocus","component","focusVisibleClassName","role","tabIndex","tabIndexProp","context","ListContext","childContext","menuItemRef","useEnhancedEffect","current","slots","composedClasses","handleRef","useForkRef","Provider"],"sourceRoot":""}